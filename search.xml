<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>堆是分配对象存储的唯一选择吗？</title>
      <link href="/post/58217.html"/>
      <url>/post/58217.html</url>
      
        <content type="html"><![CDATA[<h3 id="堆是分配对象存储的唯一选择吗"><a href="#堆是分配对象存储的唯一选择吗" class="headerlink" title="堆是分配对象存储的唯一选择吗"></a>堆是分配对象存储的唯一选择吗</h3><blockquote><p>随着JIT编译期的发展与<font color="red">逃逸分析技术</font>逐渐成熟，<font color="red">栈上分配、标量替换优化技术</font>将会导致一些微妙的变化，所有的对象都分配到堆上也渐渐变得不那么“绝对”了。———-《深入理解Java虚拟机》</p></blockquote><br><p>    <strong><font size="3">•</font></strong><font size="3"> 在Java虚拟机中，对象是在Java堆中分配内存的，这是一个普遍的常识。但是，有一种特殊情况，那就是<font color="red">如果经过逃逸分析（ Escape Analysis）后发现，一个对象并没有逃逸出方法的话，那么就可能被优化成栈上分配。</font>这样就无需在堆上分配内存，也无须进行垃圾回收了。这也是最常见的堆外存储技术。<br><br><br>    <strong><font size="3">•</font></strong><font size="3"> 此外，基于 OpenJDK深度定制的 TaoBaoVM，其中创新的GCIH（GC invisible heap）技术实现off-heap，将生命周期较长的Java对象从heap中移至heap外，并且GC不能管理GCIH内部的Java对象，以此达到降低Gc的回收频率和提升GC的回收效率的目的。<br><br></font></font></p><font size="3"><font size="3"><h3 id="逃逸分析手段"><a href="#逃逸分析手段" class="headerlink" title="逃逸分析手段"></a>逃逸分析手段</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 如何将堆上的对象分配到栈，需要使用逃逸分析手段<br><br>    <strong><font size="3">•</font></strong><font size="3"> 这是一种可以有效减少Java程序中同步负载和内存堆分配压力的跨函数全局数据流分析算法。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 通过逃逸分析，Java Hotspot编译器能够分析出一个新的对象的引用的使用范围从而决定是否要将这个对象分配到堆上。<br></font></font></font></p><font size="3"><font size="3"><font size="3"><hr><p>    <strong><font size="3">•</font></strong><font size="3"> 逃逸分析的基本行为就是分析对象动态作用域：<br><br>        <strong><font size="3">•</font></strong><font size="3"> 当一个对象在方法中被定义后，对象只在方法内部使用，则认为没有发生逃逸。<br><br>        <strong><font size="3">•</font></strong><font size="3"> 当一个对象在方法中被定义后，它被外部方法所引用，则认为发生逃逸。例如作为调用参数传递到其他地方中。 </font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200520142936455.png" alt="图片替换文本" width="600" height="300" align="bottom"></center><p><strong>结论：开发中能用局部变量的，就不要使用在方法外定义。</strong></p><h3 id="逃逸分析：代码优化"><a href="#逃逸分析：代码优化" class="headerlink" title="逃逸分析：代码优化"></a>逃逸分析：代码优化</h3><p>    使用逃逸分析，编译器可以对代码做如下优化：<br><br>    <strong><font size="3," color="red"></font></strong><font size="3," color="red"> ① <font color="red">栈上分配<font color="black">：将堆分配转换为栈分配。如果一个对象在子程序中被分配，要使指向该对象的指针永远不会逃逸，对象可能是栈分配的候选，而不是堆分配<br><br>        <strong><font size="3">•</font></strong><font size="3"> JIT编译器在编译期间根据逃逸分析的结果，发现如果一个对象并没有逃逸出方法的话，就可能被优化成栈上分配。分配完成后，继续在调用栈内执行，最后线程结束，栈空间被回收，局部变量对象也被回收。这样就无须进行垃圾回收了。<br><br>        <strong><font size="3">•</font></strong><font size="3"> <font color="red">常见的栈上分配的场景</font>：在逃逸分析中，已经说明了。分别是给成员变量赋值、方法返回值、实例引用传递<br><br></font></font></font></font></font></p><font size="3," color="red"><font color="red"><font color="black"><font size="3"><font size="3"><hr><br><p>    <strong><font size="3," color="red"></font></strong><font size="3," color="red"> ② <font color="red">同步省略<font color="black">：如果一个对象被发现只能从一个线程被访问到，那么对于这个对象的操作可以不考虑同步。<br><br>        <strong><font size="3">•</font></strong><font size="3"> 线程同步的代价是相当高的，同步的后果是降低并发性和性能。<br><br>        <strong><font size="3">•</font></strong><font size="3"> 在动态编译同步块的时候，JIT编译器可以借助逃逸分析来<font color="red">判断同步块所使用的锁对象是否只能够被一个线程访问而没有被发布到其他线程。</font>如果没有，那么J哩编译器在编译这个同步块的时候就会取消对这部分代码的同步。这样就能大大提高并发性和性能。这个取消同步的过程就叫同步省略，也叫<font color="red">锁消除</font><br><br></font></font></font></font></font></p><font size="3," color="red"><font color="red"><font color="black"><font size="3"><font size="3"><hr><br><p>    <strong><font size="3," color="red"></font></strong><font size="3," color="red"> ③ <font color="red">分离对象或标量替换<font color="black">：有的对象可能不需要作为一个连续的内存结构存在也可以被访问到，那么对象的部分（或全部）可以不存储在内存，而是存储在CPU寄存器中<br><br>        <strong><font size="3">•</font></strong><font size="3"> <font color="red">标量（Scalar）</font>是指一个无法再分解成更小的数据的据。Java中的原始数据类型就是标量。<br><br>        <strong><font size="3">•</font></strong><font size="3"> 相对的，那些还可以分解的数据叫做<font color="red">聚合量（Aggregate）</font>，Java中的对象就是聚合量，因为他可以分解成其他聚合量和标量。<br><br>        <strong><font size="3">•</font></strong><font size="3"> 在JIT阶段，如果经过逃逸分析，发现一个对象不会被外界访问的话，那么经过J优化，就会把这个对象拆解成若干个其中包含的若干个成员变量来代替。这个过程就是<font color="red">标量替换</font>。<br></font></font></font></font></font></font></p><font size="3," color="red"><font color="black"><font size="3"><font size="3"><font size="3"><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">alloc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">alloc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    Point point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"point.x="</span> <span class="token operator">+</span> point<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"; point.y= "</span> <span class="token operator">+</span> point<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>Class <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> y<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><br>以上代码经过标量替换后，就会变成：<br><pre class=" language-java"><code class="language-java"><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">alloc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"point.x="</span> <span class="token operator">+</span> point<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"; point.y= "</span> <span class="token operator">+</span> point<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>    可以看到，Point这个聚合量经过逃逸分析后，发现他并没有逃逸，就被替换成两个聚合量了。那么标量替换有什么好处呢？就是可以大大减少堆内存的占用。因为旦不需要创建对象了，那么就不再需要分配堆内存了。</p><p>标量替换为栈上分配提供了很好的基础。</p><h3 id="逃逸分析小结：逃逸分析并不成熟"><a href="#逃逸分析小结：逃逸分析并不成熟" class="headerlink" title="逃逸分析小结：逃逸分析并不成熟"></a>逃逸分析小结：逃逸分析并不成熟</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 其根本原因就是<font color="red">无法保证逃逸分析的性能消耗一定能高于他的消耗。虽然经过逃逸分析可以做标量替换、栈上分配、和锁消除。但是逃逸分析自身也是需要进行一系列复杂的分析的，这其实也是一个相对耗时的过程。</font><br><br>    <strong><font size="3">•</font></strong><font size="3"> 一个极端的例子，就是经过逃逸分析之后，发现没有一个对象是不逃逸的。那这个逃逸分析的过程就白白浪费掉了。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 虽然这项技术并不十分成熟，但是它也是<font color="red">即时编译器优化技术中一个十分重要的手段</font>。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 注意到有一些观点，认为通过逃逸分析，JⅥM会在栈上分配那些不会逃逸的对象，这在理论上是可行的，但是取决于JM设计者的选择。据了解，Oracle Hotspot JVM中并未这么做，这一点在逃逸分析相关的文档里已经说明，所以可以明确所有的对象实例都是创建在堆上。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 目前很多书籍还是基于JDK7以前的版本，JDK已经发生了很大变化， intern字符串的缓存和静态变量曾经都被分配在永久代上，而永久代已经被元数据区取代。但是intern字符串缓存和静态变量并不是被转移到元数据区，而是直接在堆上分配，所以这一点同样符合前面一点的结论：对象实例都是分配在堆上。</font></font></font></font></font></p><font size="3"><font size="3"><font size="3"></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对象分配过程TLAB</title>
      <link href="/post/48440.html"/>
      <url>/post/48440.html</url>
      
        <content type="html"><![CDATA[<font size="3"><h3 id="为什么会有TLAB-Thread-Local-Allocation-Buffer"><a href="#为什么会有TLAB-Thread-Local-Allocation-Buffer" class="headerlink" title="为什么会有TLAB(Thread Local Allocation Buffer)?"></a>为什么会有TLAB(Thread Local Allocation Buffer)?</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 堆区是线程共享区域，任何线程都可以访问到堆区中的共享数据；<br><br>    <strong><font size="3">•</font></strong><font size="3"> 由于对象实例的创建在JVM中十分频繁，一次在并发环境下从堆区中划分内存空间是线程不安全的<br>    <strong><font size="3">•</font></strong><font size="3"> 为避免多个线程操作同一地址，需要使用加锁等机制，进而影响分配速度。</font></font></font></p><font size="3"><font size="3"><font size="3"><h3 id="什么是TLAB"><a href="#什么是TLAB" class="headerlink" title="什么是TLAB?"></a>什么是TLAB?</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 从内存模型而不是垃圾收集的角度，对Eden区域继续进行划分，JVM为<font color="red">每个线程分配了一个私有缓存区域</font>，它包含在Eden区域内。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 多线程同时分配内存时，使用TLAB可以避免一系列的非线程安全问题，同时还能够提升内存分配的吞吐量，因此我们可以讲这种内存分配方式成为<font color="red">快速分配策略</font><br></font></font></p><font size="3"><font size="3"><h3 id="TLAB的再说明："><a href="#TLAB的再说明：" class="headerlink" title="TLAB的再说明："></a>TLAB的再说明：</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 尽管不是所有的对象实例都能够在TLAB中成功分配内存，但<font color="red">JVM确实是将TLAB作为内存分配的首选。</font><br><br>    <strong><font size="3">•</font></strong><font size="3"> 在程序中，开发人员可以通过选项“-XX:UseTLAB”设置是否开启TLAB空间。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 默认情况下，TLAB空间的内存非常小，<font color="red">仅占有整个Eden空间的1%</font>，当然我们可以通过选项“-XX:TLABWasteTargetPercent”设置TLAB空间所占用Eden空间的百分比大小。<br><br>    <strong><font size="3">•</font></strong><font size="3"> 一旦对象在LAB空间分配内存失败时，JVM就会尝试着通过使用加锁机制确保数据操作的原子性，从而直接在Eden空间中分配内存。<br><br><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200520140531526.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MzYwODY0NQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><font size="5"><strong>Peace!💪</strong></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><font size="5"></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> TLAB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双亲委派机制</title>
      <link href="/post/16515.html"/>
      <url>/post/16515.html</url>
      
        <content type="html"><![CDATA[<h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>    Java虚拟机对class文件采用的是按需加载的方式，也就是说当需要使用该类时才会将她的class文件加载到内存生成的class对象。而且加载某个类的class文件时，java虚拟机采用的是双亲委派模式，即把请求交由父类处理，它是一种任务委派模式。</p><h3 id="双亲委派机制的工作原理"><a href="#双亲委派机制的工作原理" class="headerlink" title="双亲委派机制的工作原理"></a>双亲委派机制的工作原理</h3><p>    <strong><font size="3">•</font></strong><font size="3"> （1）如果一个类加载器收到了类加载请求，它并不会自己先去加载，而是把这个请求委托给父类的加载器去执行；<br><br>    <strong><font size="3">•</font></strong><font size="3"> （2）如果父类加载器还存在其父类加载器，则进一步向上委托，依次递归请求最终将到达顶层的启动类加载器；<br><br>    <strong><font size="3">•</font></strong><font size="3"> （3）如果父类加载器可以完成类加载任务，就成功返回，倘若父类加载器无法完成此加载任务，子加载器才会尝试自己去加载，这就是双亲委派模式。<br></font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200520151554395.png" alt="图片替换文本" width="500" height="350" align="bottom"></center><h3 id="双亲委派机制的优势"><a href="#双亲委派机制的优势" class="headerlink" title="双亲委派机制的优势"></a>双亲委派机制的优势</h3><p>    <strong><font size="3">• 1.避免类的重复加载</font></strong><font size="3"><br><br><br>    <strong><font size="3">• 2.保护程序安全，防止核心API被随意修改</font></strong><font size="3"><br><br>    启动类加载器可以抢在标准扩展类装载器之前去装载类，而标准扩展类装载器可以抢在类路径加载器之前去装载那个类，类路径装载 器又可以抢在自定义类加载器之前去加载它。所以Java虚拟机先从最可信的Java核心API查找类型，这是为了防止不可靠的类扮演被信任的类，试想一 下，网络上有个名叫java.lang.Integer的类，它是某个黑客为了想混进java.lang包所起的名字，实际上里面含有恶意代码，但是这种 伎俩在双亲模式加载体系结构下是行不通的，因为网络类加载器在加载它的时候，它首先调用双亲类加载器，这样一直向上委托，直到启动类加载器，而启动类加载 器在核心Java API里发现了这个名字的类，所以它就直接加载Java核心API的java.lang.Integer类，然后将这个类返回，所以自始自终网络上的 java.lang.Integer的类是不会被加载的。<br><br><br>    <strong><font size="3">•3.保证核心API包的访问权限</font></strong><font size="3"> <br><br>    但是如果这个移动代码不是去试图替换一个被信任的类（就是前面说的那种情况），而是想在一个被信任的包中插入一个全新的类型，情况会怎样呢？比如一个名为 java.lang.Virus的类，经过双亲委托模式，最终类装载器试图从网络上下载这个类，因为网络类装载器的双亲们都没有这个类（当然没有了，因为 是病毒嘛）。假设成功下载了这个类，那你肯定会想，Virus和lang下的其他类痛在java.lang包下，暗示这个类是Java API的一部分，那么是不是也拥有修改Java.lang包中数据的权限呢？答案当然不是，因为要取得访问和修改java.lang包中的权 限，java.lang.Virus和java.lang下其他类必须是属于同一个运行时包的，什么是运行时包？运行时包是指由同一个类装载器装载的、属 于同一个包的、多个类型的集合。考虑一下，java.lang.Virus和java.lang其他类是同一个类装载器装载的吗?不是的！java.lang.Virus是由网络类装载器装载的！</font></font></font></p><font size="3"><font size="3"><font size="3"><h3 id="双亲委派机制在SPI中的应用"><a href="#双亲委派机制在SPI中的应用" class="headerlink" title="双亲委派机制在SPI中的应用"></a>双亲委派机制在SPI中的应用</h3><p>    <strong><font size="3">•</font></strong><font size="3"> 1.某个应用程序由双亲委派机制找到引导类加载器，首先调用rt.jar包中的SPI核心，但由于SPI核心当中有各种各样的接口需要被实现（这里指具体的服务提供商），这里我们已JDBC.jar为例，jdbc.jar可以为我们提供具体的实现。<br><br><br>    <strong><font size="3">•</font></strong><font size="3"> 2.那么这时我们需要反向委托，找到线程上下文类加载器去加载jdbc.jar<br><br><br>    <strong><font size="3">•</font></strong><font size="3"> 3.线程上下文类加载器属于系统类加载器<br></font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200520152358511.png" alt="图片替换文本" width="500" height="350" align="bottom"></center><p><strong><font size="5">Peace!</font></strong></p><font size="5"></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> 类加载子系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Maven--pom.xml详解</title>
      <link href="/post/41105.html"/>
      <url>/post/41105.html</url>
      
        <content type="html"><![CDATA[<pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span>project xmlns<span class="token operator">=</span><span class="token string">"http://maven.apache.org/POM/4.0.0"</span> xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span> xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd "</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。         坐标包括group ID，artifact ID和 version。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>parent<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被继承的父项目的构件标识符 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被继承的父项目的全球唯一标识符 <span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>groupId<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被继承的父项目的版本 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>version<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 父项目的pom<span class="token punctuation">.</span>xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是<span class="token punctuation">.</span><span class="token punctuation">.</span>/pom<span class="token punctuation">.</span>xml。             Maven首先在构建当前项目的地方寻找父项目的pom，其次在文件系统的这个位置（relativePath位置），             然后在本地仓库，最后在远程仓库寻找父项目的pom。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>relativePath<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>relativePath<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>parent<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，         这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>modelVersion<span class="token operator">></span> <span class="token number">4.0</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token operator">&lt;</span><span class="token operator">/</span>modelVersion<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成，          如com<span class="token punctuation">.</span>mycompany<span class="token punctuation">.</span>app生成的相对路径为：<span class="token operator">/</span>com<span class="token operator">/</span>mycompany<span class="token operator">/</span>app <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>groupId<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID         和groupID；在某个特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven         为项目产生的构件包括：JARs，源码，二进制发布和WARs等。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>xxx<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>packaging<span class="token operator">></span> jar <span class="token operator">&lt;</span><span class="token operator">/</span>packaging<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目当前版本，格式为<span class="token operator">:</span>主版本<span class="token punctuation">.</span>次版本<span class="token punctuation">.</span>增量版本<span class="token operator">-</span>限定版本号 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>version<span class="token operator">></span> <span class="token number">1.0</span><span class="token operator">-</span>SNAPSHOT <span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的名称<span class="token punctuation">,</span> Maven产生的文档用 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>name<span class="token operator">></span> xxx<span class="token operator">-</span>maven <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目主页的URL<span class="token punctuation">,</span> Maven产生的文档用 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>maven<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>org <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的详细描述<span class="token punctuation">,</span> Maven 产生的文档用。 当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，         就可以包含HTML标签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的         索引页文件，而不是调整这里的文档。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>description<span class="token operator">></span> A maven project to study maven<span class="token punctuation">.</span> <span class="token operator">&lt;</span><span class="token operator">/</span>description<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述了这个项目构建环境中的前提条件。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>prerequisites<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建该项目或使用该插件所需要的Maven的最低版本 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>maven<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>maven<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>prerequisites<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的问题管理系统<span class="token punctuation">(</span>Bugzilla<span class="token punctuation">,</span> Jira<span class="token punctuation">,</span> Scarab<span class="token punctuation">,</span>或任何你喜欢的问题管理系统<span class="token punctuation">)</span>的名称和URL，本例为 jira <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>issueManagement<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 问题管理系统（例如jira）的名字， <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>system<span class="token operator">></span> jira <span class="token operator">&lt;</span><span class="token operator">/</span>system<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该项目使用的问题管理系统的URL <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>jira<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>issueManagement<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目持续集成信息 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>ciManagement<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 持续集成系统的名字，例如continuum <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>system<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>system<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建完成时，需要通知的开发者<span class="token operator">/</span>用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告） <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>notifiers<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置一种方式，当构建中断时，以该方式通知用户<span class="token operator">/</span>开发者 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>notifier<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 传送通知的途径 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>type<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>type<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发生错误时是否通知 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>sendOnError<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sendOnError<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建失败时是否通知 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>sendOnFailure<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sendOnFailure<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建成功时是否通知 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>sendOnSuccess<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sendOnSuccess<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发生警告时是否通知 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>sendOnWarning<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sendOnWarning<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不赞成使用。通知发送到哪里 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>address<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>address<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 扩展配置项 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>notifier<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>notifiers<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>ciManagement<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目创建年份，<span class="token number">4</span>位数字。当产生版权信息时需要使用这个值。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>inceptionYear <span class="token operator">/</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目相关邮件列表信息 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>mailingLists<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>mailingList<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 邮件的名称 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> Demo <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto<span class="token operator">:</span> 链接会被自动创建 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>post<span class="token operator">></span> banseon<span class="token annotation punctuation">@126</span><span class="token punctuation">.</span>com <span class="token operator">&lt;</span><span class="token operator">/</span>post<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto<span class="token operator">:</span> 链接会被自动创建 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>subscribe<span class="token operator">></span> banseon<span class="token annotation punctuation">@126</span><span class="token punctuation">.</span>com <span class="token operator">&lt;</span><span class="token operator">/</span>subscribe<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto<span class="token operator">:</span> 链接会被自动创建 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>unsubscribe<span class="token operator">></span> banseon<span class="token annotation punctuation">@126</span><span class="token punctuation">.</span>com <span class="token operator">&lt;</span><span class="token operator">/</span>unsubscribe<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 你可以浏览邮件信息的URL <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>archive<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span>hi<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">/</span>demo<span class="token operator">/</span>dev<span class="token operator">/</span> <span class="token operator">&lt;</span><span class="token operator">/</span>archive<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>mailingList<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>mailingLists<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者列表 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>developers<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 某个项目开发者的信息 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>developer<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> SCM里项目开发者的唯一标识符 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span> HELLO WORLD <span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者的全名 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> banseon <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者的email <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>email<span class="token operator">></span> banseon<span class="token annotation punctuation">@126</span><span class="token punctuation">.</span>com <span class="token operator">&lt;</span><span class="token operator">/</span>email<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者的主页的URL <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者在项目中扮演的角色，角色元素描述了各种角色 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>roles<span class="token operator">></span>                 <span class="token operator">&lt;</span>role<span class="token operator">></span> Project Manager <span class="token operator">&lt;</span><span class="token operator">/</span>role<span class="token operator">></span>                 <span class="token operator">&lt;</span>role<span class="token operator">></span> Architect <span class="token operator">&lt;</span><span class="token operator">/</span>role<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>roles<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者所属组织 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>organization<span class="token operator">></span> demo <span class="token operator">&lt;</span><span class="token operator">/</span>organization<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者所属组织的URL <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>organizationUrl<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hi<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx <span class="token operator">&lt;</span><span class="token operator">/</span>organizationUrl<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者属性，如即时消息如何处理等 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>properties<span class="token operator">></span>                 <span class="token operator">&lt;</span>dept<span class="token operator">></span> No <span class="token operator">&lt;</span><span class="token operator">/</span>dept<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目开发者所在时区， <span class="token operator">-</span><span class="token number">11</span>到<span class="token number">12</span>范围内的整数。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>timezone<span class="token operator">></span> <span class="token operator">-</span><span class="token number">5</span> <span class="token operator">&lt;</span><span class="token operator">/</span>timezone<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>developer<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>developers<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的其他贡献者列表 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>contributors<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目的其他贡献者。参见developers<span class="token operator">/</span>developer元素 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>contributor<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者的全名 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者的email <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>email<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>email<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者的主页的URL <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者所属组织 <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>organization<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>organization<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者所属组织的URL <span class="token operator">--</span><span class="token operator">></span>            <span class="token operator">&lt;</span>organizationUrl<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>organizationUrl<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者在项目中扮演的角色，角色元素描述了各种角色 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>roles<span class="token operator">></span>                 <span class="token operator">&lt;</span>role<span class="token operator">></span> Project Manager <span class="token operator">&lt;</span><span class="token operator">/</span>role<span class="token operator">></span>                 <span class="token operator">&lt;</span>role<span class="token operator">></span> Architect <span class="token operator">&lt;</span><span class="token operator">/</span>role<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>roles<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者所在时区， <span class="token operator">-</span><span class="token number">11</span>到<span class="token number">12</span>范围内的整数。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>timezone<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>timezone<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目贡献者属性，如即时消息如何处理等 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>properties<span class="token operator">></span>                 <span class="token operator">&lt;</span>dept<span class="token operator">></span> No <span class="token operator">&lt;</span><span class="token operator">/</span>dept<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>contributor<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>contributors<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。         如果列出多个license，用户可以选择它们中的一个而不是接受所有license。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>licenses<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>license<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> license用于法律上的名称 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> Apache <span class="token number">2</span> <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 官方的license正文页面的URL <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">/</span>LICENSE<span class="token operator">-</span><span class="token number">2.0</span><span class="token punctuation">.</span>txt <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目分发的主要方式：                     repo，可以从Maven库下载                     manual， 用户必须手动下载和安装依赖 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>distribution<span class="token operator">></span> repo <span class="token operator">&lt;</span><span class="token operator">/</span>distribution<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 关于license的补充信息 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>comments<span class="token operator">></span> A business<span class="token operator">-</span>friendly OSS license <span class="token operator">&lt;</span><span class="token operator">/</span>comments<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>license<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>licenses<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token function">SCM</span><span class="token punctuation">(</span>Source Control Management<span class="token punctuation">)</span>标签允许你配置你的代码库，供Maven web站点和其它插件使用。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>scm<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> SCM的URL<span class="token punctuation">,</span>该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>connection<span class="token operator">></span>             scm<span class="token operator">:</span>svn<span class="token operator">:</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">/</span>maven<span class="token operator">/</span>banseon<span class="token operator">/</span>banseon<span class="token operator">-</span>maven2<span class="token operator">-</span><span class="token function">trunk</span><span class="token punctuation">(</span>dao<span class="token operator">-</span>trunk<span class="token punctuation">)</span>        <span class="token operator">&lt;</span><span class="token operator">/</span>connection<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 给开发者使用的，类似connection元素。即该连接不仅仅只读 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>developerConnection<span class="token operator">></span>             scm<span class="token operator">:</span>svn<span class="token operator">:</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">/</span>maven<span class="token operator">/</span>banseon<span class="token operator">/</span>dao<span class="token operator">-</span>trunk         <span class="token operator">&lt;</span><span class="token operator">/</span>developerConnection<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当前代码的标签，在开发阶段默认为HEAD <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>tag<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>tag<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>scm<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述项目所属组织的各种属性。Maven产生的文档用 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>organization<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 组织的全名 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>name<span class="token operator">></span> demo <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 组织主页的URL <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>organization<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建项目需要的信息 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>build<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对             于pom<span class="token punctuation">.</span>xml的相对路径。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>sourceDirectory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>sourceDirectory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容会             被拷贝到输出目录<span class="token punctuation">(</span>因为脚本是被解释的，而不是被编译的<span class="token punctuation">)</span>。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>scriptSourceDirectory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>scriptSourceDirectory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。             该路径是相对于pom<span class="token punctuation">.</span>xml的相对路径。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>testSourceDirectory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>testSourceDirectory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被编译过的应用程序<span class="token keyword">class</span>文件存放的目录。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>outputDirectory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>outputDirectory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被编译过的测试<span class="token keyword">class</span>文件存放的目录。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>testOutputDirectory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>testOutputDirectory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用来自该项目的一系列构建扩展 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>extensions<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述使用到的构建扩展。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>extension<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建扩展的groupId <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建扩展的artifactId <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建扩展的版本 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>extension<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>extensions<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当项目没有规定目标（Maven2 叫做阶段）时的默认值 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>defaultGoal<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>defaultGoal<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在             最终的打包文件里。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>resources<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个元素描述了项目相关或测试相关的所有资源路径 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>resource<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述了资源的目标路径。该路径相对target<span class="token operator">/</span>classes目录（例如$<span class="token punctuation">{</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>outputDirectory<span class="token punctuation">}</span>）。                     举个例子，如果你想资源在特定的包里<span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>messages<span class="token punctuation">)</span>，你就必须该元素设置为                    org<span class="token operator">/</span>apache<span class="token operator">/</span>maven<span class="token operator">/</span>messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>targetPath<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素                     里列出。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>filtering<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述存放资源的目录，该路径相对POM路径 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包含的模式列表，例如<span class="token operator">*</span><span class="token operator">*</span><span class="token comment" spellcheck="true">/*.xml. -->                 &lt;includes>                    &lt;include>&lt;/include>                &lt;/includes>                &lt;!-- 排除的模式列表，例如**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml <span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>excludes<span class="token operator">></span>                    <span class="token operator">&lt;</span>exclude<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>exclude<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>excludes<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>testResources<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个元素描述了测试相关的所有资源路径，参见build<span class="token operator">/</span>resources<span class="token operator">/</span>resource元素的说明 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>testResource<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述了测试相关的资源的目标路径。该路径相对target<span class="token operator">/</span>classes目录（例如$<span class="token punctuation">{</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>outputDirectory<span class="token punctuation">}</span>）。                     举个例子，如果你想资源在特定的包里<span class="token punctuation">(</span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>messages<span class="token punctuation">)</span>，你就必须该元素设置为                    org<span class="token operator">/</span>apache<span class="token operator">/</span>maven<span class="token operator">/</span>messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>targetPath<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素                     里列出。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>filtering<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 描述存放测试相关的资源的目录，该路径相对POM路径 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包含的模式列表，例如<span class="token operator">*</span><span class="token operator">*</span><span class="token comment" spellcheck="true">/*.xml. -->                 &lt;includes>                    &lt;include>&lt;/include>                &lt;/includes>                &lt;!-- 排除的模式列表，例如**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml <span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>excludes<span class="token operator">></span>                    <span class="token operator">&lt;</span>exclude<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>exclude<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>excludes<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>testResource<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>testResources<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建产生的所有文件存放的目录 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 产生的构件的文件名，默认值是$<span class="token punctuation">{</span>artifactId<span class="token punctuation">}</span><span class="token operator">-</span>$<span class="token punctuation">{</span>version<span class="token punctuation">}</span>。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>finalName<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当filtering开关打开时，使用到的过滤器属性文件列表 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>filters<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filters<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本             地配置都会覆盖这里的配置 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>pluginManagement<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用的插件列表 。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>plugins<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> plugin元素包含描述插件所需要的信息。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>plugin<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 插件在仓库里的group ID <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 插件在仓库里的artifact ID <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被使用的插件的版本（或版本范围） <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该                         元素才被设置成enabled。 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>extensions<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>extensions<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>executions<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> execution元素包含了插件执行需要的信息 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>execution<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>phase<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">></span>                            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置的执行目标 <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置是否被传播到子POM <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作为DOM对象的配置 <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目引入插件所需要的额外依赖 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 任何配置是否被传播到子项目 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作为DOM对象的配置 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>pluginManagement<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该项目使用的插件列表 。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>plugins<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> plugin元素包含描述插件所需要的信息。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>plugin<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 插件在仓库里的group ID <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 插件在仓库里的artifact ID <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被使用的插件的版本（或版本范围） <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该                     元素才被设置成enabled。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>extensions<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>extensions<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>executions<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> execution元素包含了插件执行需要的信息 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>execution<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>phase<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置的执行目标 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置是否被传播到子POM <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作为DOM对象的配置 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目引入插件所需要的额外依赖 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 任何配置是否被传播到子项目 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作为DOM对象的配置 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 在列的项目构建profile，如果被激活，会修改构建处理 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>profiles<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 根据环境参数或命令行参数激活某个构建处理 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>profile<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它能够                 在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元                 素并不是激活profile的唯一方式。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>activation<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> profile默认是否激活的标志 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>activeByDefault<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>activeByDefault<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当匹配的jdk被检测到，profile被激活。例如，<span class="token number">1.4</span>激活JDK1<span class="token number">.4</span>，<span class="token number">1.4</span><span class="token punctuation">.</span>0_2，而<span class="token operator">!</span><span class="token number">1.4</span>激活所有版本                     不是以<span class="token number">1.4</span>开头的JDK。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>jdk<span class="token operator">></span>jdk版本，如<span class="token operator">:</span><span class="token number">1.7</span><span class="token operator">&lt;</span><span class="token operator">/</span>jdk<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>os<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的操作系统的名字 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>name<span class="token operator">></span> Windows XP <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的操作系统所属家族<span class="token punctuation">(</span>如 <span class="token string">'windows'</span><span class="token punctuation">)</span> <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>family<span class="token operator">></span> Windows <span class="token operator">&lt;</span><span class="token operator">/</span>family<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的操作系统体系结构 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>arch<span class="token operator">></span> x86 <span class="token operator">&lt;</span><span class="token operator">/</span>arch<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的操作系统版本 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>version<span class="token operator">></span> <span class="token number">5.1</span><span class="token punctuation">.</span><span class="token number">2600</span> <span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>os<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果Maven检测到某一个属性（其值可以在POM中通过$<span class="token punctuation">{</span>名称<span class="token punctuation">}</span>引用），其拥有对应的名称和值，Profile                     就会被激活。如果值字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹                     配属性值字段 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>property<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的属性的名称 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>name<span class="token operator">></span> mavenVersion <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 激活profile的属性的值 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>value<span class="token operator">></span> <span class="token number">2.0</span><span class="token punctuation">.</span><span class="token number">3</span> <span class="token operator">&lt;</span><span class="token operator">/</span>value<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>property<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活                      profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>file<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果指定的文件存在，则激活profile。 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>exists<span class="token operator">></span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>hudson<span class="token operator">/</span>hudson<span class="token operator">-</span>home<span class="token operator">/</span>jobs<span class="token operator">/</span>maven<span class="token operator">-</span>guide<span class="token operator">-</span>zh<span class="token operator">-</span>to<span class="token operator">-</span>production<span class="token operator">/</span>workspace<span class="token operator">/</span> <span class="token operator">&lt;</span><span class="token operator">/</span>exists<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果指定的文件不存在，则激活profile。 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>missing<span class="token operator">></span> <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>hudson<span class="token operator">/</span>hudson<span class="token operator">-</span>home<span class="token operator">/</span>jobs<span class="token operator">/</span>maven<span class="token operator">-</span>guide<span class="token operator">-</span>zh<span class="token operator">-</span>to<span class="token operator">-</span>production<span class="token operator">/</span>workspace<span class="token operator">/</span> <span class="token operator">&lt;</span><span class="token operator">/</span>missing<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>file<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>activation<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构建项目所需要的信息。参见build元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>build<span class="token operator">></span>                 <span class="token operator">&lt;</span>defaultGoal <span class="token operator">/</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>resources<span class="token operator">></span>                     <span class="token operator">&lt;</span>resource<span class="token operator">></span>                         <span class="token operator">&lt;</span>targetPath<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">></span>                        <span class="token operator">&lt;</span>filtering<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">></span>                        <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                        <span class="token operator">&lt;</span>includes<span class="token operator">></span>                            <span class="token operator">&lt;</span>include<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">></span>                        <span class="token operator">&lt;</span>excludes<span class="token operator">></span>                            <span class="token operator">&lt;</span>exclude<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>exclude<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>excludes<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>resource<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>resources<span class="token operator">></span>                 <span class="token operator">&lt;</span>testResources<span class="token operator">></span>                     <span class="token operator">&lt;</span>testResource<span class="token operator">></span>                         <span class="token operator">&lt;</span>targetPath<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>targetPath<span class="token operator">></span>                        <span class="token operator">&lt;</span>filtering<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">></span>                        <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                        <span class="token operator">&lt;</span>includes<span class="token operator">></span>                            <span class="token operator">&lt;</span>include<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">></span>                        <span class="token operator">&lt;</span>excludes<span class="token operator">></span>                            <span class="token operator">&lt;</span>exclude<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>exclude<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>excludes<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>testResource<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>testResources<span class="token operator">></span>                 <span class="token operator">&lt;</span>directory<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">></span>                <span class="token operator">&lt;</span>finalName<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">></span>                <span class="token operator">&lt;</span>filters<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>filters<span class="token operator">></span>                 <span class="token operator">&lt;</span>pluginManagement<span class="token operator">></span>                     <span class="token operator">&lt;</span>plugins<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见build<span class="token operator">/</span>pluginManagement<span class="token operator">/</span>plugins<span class="token operator">/</span>plugin元素 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>plugin<span class="token operator">></span>                             <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                            <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                            <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                            <span class="token operator">&lt;</span>extensions<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>extensions<span class="token operator">></span>                             <span class="token operator">&lt;</span>executions<span class="token operator">></span>                                 <span class="token operator">&lt;</span>execution<span class="token operator">></span>                                     <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                                    <span class="token operator">&lt;</span>phase<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">></span>                                    <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                                    <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                                    <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                                 <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">></span>                             <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                                 <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                                 <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>                             <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                            <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                            <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                        <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>pluginManagement<span class="token operator">></span>                 <span class="token operator">&lt;</span>plugins<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见build<span class="token operator">/</span>pluginManagement<span class="token operator">/</span>plugins<span class="token operator">/</span>plugin元素 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>plugin<span class="token operator">></span>                         <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                        <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                        <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                        <span class="token operator">&lt;</span>extensions<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>extensions<span class="token operator">></span>                         <span class="token operator">&lt;</span>executions<span class="token operator">></span>                             <span class="token operator">&lt;</span>execution<span class="token operator">></span>                                 <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                                <span class="token operator">&lt;</span>phase<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>phase<span class="token operator">></span>                                <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                                <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                                <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>execution<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>executions<span class="token operator">></span>                         <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                             <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                             <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>                         <span class="token operator">&lt;</span>goals<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>goals<span class="token operator">></span>                        <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                        <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的                 相对路径 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>modules<span class="token operator">></span>                <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>子项目相对路径<span class="token operator">--</span><span class="token operator">></span>                <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>module<span class="token operator">></span>            <span class="token operator">&lt;</span><span class="token operator">/</span>modules<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发现依赖和扩展的远程仓库列表。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>repositories<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见repositories<span class="token operator">/</span>repository元素 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>repository<span class="token operator">></span>                     <span class="token operator">&lt;</span>releases<span class="token operator">></span>                         <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                        <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                        <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>releases<span class="token operator">></span>                     <span class="token operator">&lt;</span>snapshots<span class="token operator">></span>                         <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                        <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                        <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>snapshots<span class="token operator">></span>                     <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                    <span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>                    <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>                    <span class="token operator">&lt;</span>layout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>layout<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>repository<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>repositories<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发现插件的远程仓库列表，这些插件用于构建和报表 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>pluginRepositories<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包含需要连接到远程插件仓库的信息<span class="token punctuation">.</span>参见repositories<span class="token operator">/</span>repository元素 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>pluginRepository<span class="token operator">></span>                     <span class="token operator">&lt;</span>releases<span class="token operator">></span>                         <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                        <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                        <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>releases<span class="token operator">></span>                     <span class="token operator">&lt;</span>snapshots<span class="token operator">></span>                         <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                        <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                        <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>                    <span class="token operator">&lt;</span><span class="token operator">/</span>snapshots<span class="token operator">></span>                     <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                    <span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>                    <span class="token operator">&lt;</span>url<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>                    <span class="token operator">&lt;</span>layout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>layout<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>pluginRepository<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>pluginRepositories<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的                 仓库中下载。要获取更多信息，请看项目依赖机制。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不赞成使用<span class="token punctuation">.</span> 现在Maven忽略该元素<span class="token punctuation">.</span> <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>reports<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>reports<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看                 到所有报表的链接。参见reporting元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>reporting<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>reporting<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencyManagement元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>dependencyManagement<span class="token operator">></span>                 <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>dependency<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>dependencyManagement<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见distributionManagement元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>distributionManagement<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>distributionManagement<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见properties元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>properties <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>profile<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>profiles<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>modules<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>子项目相对路径<span class="token operator">--</span><span class="token operator">></span>        <span class="token operator">&lt;</span>module<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>module<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>modules<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发现依赖和扩展的远程仓库列表。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>repositories<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包含需要连接到远程仓库的信息 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>repository<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如何处理远程仓库里发布版本的下载 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>releases<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token boolean">true</span>或者<span class="token boolean">false</span>表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），                     daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>releases<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，                 为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories<span class="token operator">/</span>repository<span class="token operator">/</span>releases元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>snapshots<span class="token operator">></span>                 <span class="token operator">&lt;</span>enabled<span class="token operator">></span><span class="token operator">&lt;</span>enabled<span class="token operator">></span>                <span class="token operator">&lt;</span>updatePolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>updatePolicy<span class="token operator">></span>                <span class="token operator">&lt;</span>checksumPolicy<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>checksumPolicy<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>snapshots<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 远程仓库唯一标识符。可以用来匹配在settings<span class="token punctuation">.</span>xml文件里配置的远程仓库 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span> banseon<span class="token operator">-</span>repository<span class="token operator">-</span>proxy <span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 远程仓库名称 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> banseon<span class="token operator">-</span>repository<span class="token operator">-</span>proxy <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 远程仓库URL，按protocol<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hostname<span class="token operator">/</span>path形式 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">1.169</span><span class="token operator">:</span><span class="token number">9999</span><span class="token operator">/</span>repository<span class="token operator">/</span> <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 用于定位和排序构件的仓库布局类型<span class="token operator">-</span>可以是<span class="token keyword">default</span>（默认）或者legacy（遗留）。Maven <span class="token number">2</span>为其仓库提供了一个默认                 的布局；然而，Maven <span class="token number">1</span><span class="token punctuation">.</span>x有一种不同的布局。我们可以使用该元素指定布局是<span class="token keyword">default</span>（默认）还是legacy（遗留）。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>layout<span class="token operator">></span> <span class="token keyword">default</span> <span class="token operator">&lt;</span><span class="token operator">/</span>layout<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>repository<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>repositories<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 发现插件的远程仓库列表，这些插件用于构建和报表 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>pluginRepositories<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 包含需要连接到远程插件仓库的信息<span class="token punctuation">.</span>参见repositories<span class="token operator">/</span>repository元素 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>pluginRepository<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>pluginRepository<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>pluginRepositories<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。         要获取更多信息，请看项目依赖机制。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>         <span class="token operator">&lt;</span>dependency<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖的group ID <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>groupId<span class="token operator">></span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven <span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖的artifact ID <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>artifactId<span class="token operator">></span> maven<span class="token operator">-</span>artifact <span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖的版本号。 在Maven <span class="token number">2</span>里<span class="token punctuation">,</span> 也可以配置成版本号的范围。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>version<span class="token operator">></span> <span class="token number">3.8</span><span class="token punctuation">.</span><span class="token number">1</span> <span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展                 名或分类器。类型经常和使用的打包方式对应，尽管这也有例外。一些类型的例子：jar，war，ejb<span class="token operator">-</span>client和test<span class="token operator">-</span>jar。                 如果设置extensions为 <span class="token boolean">true</span>，就可以在plugin里定义新的类型。所以前面的类型的例子不完整。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>type<span class="token operator">></span> jar <span class="token operator">&lt;</span><span class="token operator">/</span>type<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，                 如果你想要构建两个单独的构件成JAR，一个使用Java <span class="token number">1.4</span>编译器，另一个使用Java <span class="token number">6</span>编译器，你就可以使用分类器来生                 成两个单独的JAR构件。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>classifier<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>classifier<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。                 <span class="token operator">-</span> compile ：默认范围，用于编译                 <span class="token operator">-</span> provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath                 <span class="token operator">-</span> runtime<span class="token operator">:</span> 在执行时需要使用                 <span class="token operator">-</span> test<span class="token operator">:</span> 用于test任务时使用                 <span class="token operator">-</span> system<span class="token operator">:</span> 需要外在提供相应的元素。通过systemPath来取得                 <span class="token operator">-</span> systemPath<span class="token operator">:</span> 仅用于范围为system。提供相应的路径                 <span class="token operator">-</span> optional<span class="token operator">:</span> 当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>scope<span class="token operator">></span> test <span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件                 系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$<span class="token punctuation">{</span>java<span class="token punctuation">.</span>home<span class="token punctuation">}</span>。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>systemPath<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>systemPath<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的                 依赖。此元素主要用于解决版本冲突问题 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>exclusions<span class="token operator">></span>                 <span class="token operator">&lt;</span>exclusion<span class="token operator">></span>                     <span class="token operator">&lt;</span>artifactId<span class="token operator">></span> spring<span class="token operator">-</span>core <span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                     <span class="token operator">&lt;</span>groupId<span class="token operator">></span> org<span class="token punctuation">.</span>springframework <span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>exclusion<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>exclusions<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。                 可选依赖阻断依赖的传递性。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>optional<span class="token operator">></span> <span class="token boolean">true</span> <span class="token operator">&lt;</span><span class="token operator">/</span>optional<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 不赞成使用<span class="token punctuation">.</span> 现在Maven忽略该元素<span class="token punctuation">.</span> <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>reports<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>reports<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>reporting<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token boolean">true</span>，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>excludeDefaults <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 所有产生的报表存放到哪里。默认值是$<span class="token punctuation">{</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>directory<span class="token punctuation">}</span><span class="token operator">/</span>site。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>outputDirectory <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 使用的报表插件和他们的配置。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>plugins<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> plugin元素包含描述报表插件需要的信息 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>plugin<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 报表插件在仓库里的group ID <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 报表插件在仓库里的artifact ID <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 被使用的报表插件的版本（或版本范围） <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 任何配置是否被传播到子项目 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 报表插件的配置 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，                     有<span class="token number">1</span>，<span class="token number">2</span>，<span class="token number">3</span>，<span class="token number">4</span>，<span class="token number">5</span>，<span class="token number">6</span>，<span class="token number">7</span>，<span class="token number">8</span>，<span class="token number">9</span>个报表。<span class="token number">1</span>，<span class="token number">2</span>，<span class="token number">5</span>构成A报表集，对应一个执行目标。<span class="token number">2</span>，<span class="token number">5</span>，<span class="token number">8</span>构成B报                     表集，对应另一个执行目标 <span class="token operator">--</span><span class="token operator">></span>                 <span class="token operator">&lt;</span>reportSets<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 表示报表的一个集合，以及产生该集合的配置 <span class="token operator">--</span><span class="token operator">></span>                     <span class="token operator">&lt;</span>reportSet<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 报表集合的唯一标识符，POM继承时用到 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>id<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 产生报表集合时，被使用的报表的配置 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>configuration<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 配置是否被继承到子POMs <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>inherited<span class="token operator">></span><span class="token boolean">true</span><span class="token operator">/</span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>inherited<span class="token operator">></span>                         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 这个集合里使用到哪些报表 <span class="token operator">--</span><span class="token operator">></span>                         <span class="token operator">&lt;</span>reports<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>reports<span class="token operator">></span>                     <span class="token operator">&lt;</span><span class="token operator">/</span>reportSet<span class="token operator">></span>                 <span class="token operator">&lt;</span><span class="token operator">/</span>reportSets<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>reporting<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析<span class="token punctuation">,</span>而是当子项目声明一个依赖        （必须描述group ID和artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过            group ID和artifact ID匹配到这里的依赖，并使用这里的依赖信息。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>dependencyManagement<span class="token operator">></span>         <span class="token operator">&lt;</span>dependencies<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 参见dependencies<span class="token operator">/</span>dependency元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>dependency<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>dependencyManagement<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者         把构件部署到远程仓库。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>distributionManagement<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 部署项目产生的构件到远程仓库需要的信息 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>repository<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见                 repositories<span class="token operator">/</span>repository元素 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>uniqueVersion <span class="token operator">/</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span> banseon<span class="token operator">-</span>maven2 <span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> banseon maven2 <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span> file<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>$<span class="token punctuation">{</span>basedir<span class="token punctuation">}</span><span class="token operator">/</span>target<span class="token operator">/</span>deploy <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>             <span class="token operator">&lt;</span>layout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>layout<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>repository<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见             distributionManagement<span class="token operator">/</span>repository元素 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>snapshotRepository<span class="token operator">></span>             <span class="token operator">&lt;</span>uniqueVersion <span class="token operator">/</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span> banseon<span class="token operator">-</span>maven2 <span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> Banseon<span class="token operator">-</span>maven2 Snapshot Repository <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span> scp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">:</span><span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>maven<span class="token operator">-</span>snapshot <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>             <span class="token operator">&lt;</span>layout<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>layout<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>snapshotRepository<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 部署项目的网站需要的信息 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>site<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 部署位置的唯一标识符，用来匹配站点和settings<span class="token punctuation">.</span>xml文件里的配置 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>id<span class="token operator">></span> banseon<span class="token operator">-</span>site <span class="token operator">&lt;</span><span class="token operator">/</span>id<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 部署位置的名称 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>name<span class="token operator">></span> business api website <span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 部署位置的URL，按protocol<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>hostname<span class="token operator">/</span>path形式 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>url<span class="token operator">></span>                 scp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>svn<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>banseon<span class="token operator">:</span><span class="token operator">/</span>var<span class="token operator">/</span>www<span class="token operator">/</span>localhost<span class="token operator">/</span>banseon<span class="token operator">-</span>web             <span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>site<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位             那些不在仓库里的构件（由于license限制）。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>downloadUrl <span class="token operator">/</span><span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>relocation<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构件新的group ID <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>groupId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构件新的artifact ID <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 构件新的版本号 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span>             <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 显示给用户的，关于移动的额外信息，例如原因。 <span class="token operator">--</span><span class="token operator">></span>             <span class="token operator">&lt;</span>message<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>message<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">/</span>relocation<span class="token operator">></span>         <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值             有：none（默认），converted（仓库管理员从Maven <span class="token number">1</span> POM转换过来），partner（直接从伙伴Maven              <span class="token number">2</span>仓库同步过来），deployed（从Maven <span class="token number">2</span>实例部署），verified（被核实时正确的和最终的）。 <span class="token operator">--</span><span class="token operator">></span>         <span class="token operator">&lt;</span>status<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>status<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>distributionManagement<span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings<span class="token punctuation">.</span>xml配置文件里         activation元素的说明）。格式是<span class="token operator">&lt;</span>name<span class="token operator">></span>value<span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>。 <span class="token operator">--</span><span class="token operator">></span>     <span class="token operator">&lt;</span>properties<span class="token operator">></span>        <span class="token operator">&lt;</span>name<span class="token operator">></span>value<span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token operator">></span> </code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 项目工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础必知必会</title>
      <link href="/post/63796.html"/>
      <url>/post/63796.html</url>
      
        <content type="html"><![CDATA[<p><strong><font size="5">基础知识笔记记录，持续更新ing~</font></strong><font size="5">  <font size="3"><br><br>个人博客：<a href="https://www.zhazhapeng.cn" target="_blank" rel="noopener">www.zhazhapeng.cn</a><br></font></font></p><font size="5"><font size="3"><h4 id="1、JDK-JRE的区别"><a href="#1、JDK-JRE的区别" class="headerlink" title="1、JDK\JRE的区别"></a>1、JDK\JRE的区别</h4><p>    <strong><font size="3">•</font></strong><font size="3"> JDK（Java Development Kit）<br>        开发工具<br>        基本类库<br>        javac（编译）<br>        javap（反编译）<br>        javadoc（编译文档）<br>    <strong><font size="3">•</font></strong><font size="3"> 运行环境（单单运行一个Java程序）<br>        JRE（Java Runtime Environment）</font></font></p><font size="3"><font size="3"><h4 id="2、-与-equals-的区别"><a href="#2、-与-equals-的区别" class="headerlink" title="2、== 与 equals 的区别"></a>2、== 与 equals 的区别</h4><p>    <strong><font size="3">•</font></strong><font size="3"> ==：<font color="black"><br>        基本类型：8种（int\short\long\double\float\byte\boolean\char）；<br>        引用类型：看引用的对象是否是同一个！<br>    <strong><font size="3">•</font></strong><font size="3"> equals：<font color="black"><br>        ①重写Object，自己定义比较规则，常见的对象如String等都已经重写了比较的代码；<br>        ②不写，就是比较引用地址是否相同，==</font></font></font></font></p><font size="3"><font color="black"><font size="3"><font color="black"><h4 id="3、HashCode与Equals相同吗"><a href="#3、HashCode与Equals相同吗" class="headerlink" title="3、HashCode与Equals相同吗"></a>3、HashCode与Equals相同吗</h4><p>        <a href="//www.cnblogs.com/keyi/p/7119825.html" target="_blank" rel="noopener">详解</a></p><h4 id="4、Final有什么用"><a href="#4、Final有什么用" class="headerlink" title="4、Final有什么用"></a>4、Final有什么用</h4><p>    <strong><font size="3">•</font></strong><font size="3"> Final <font color="black"><br>        类：不能被继承<br>        方法：不能被重写<br>        变量：<br>            基本类型：值<br>            引用类型：引用的对象内部的值可以变</font></font></p><font size="3"><font color="black"><p>    类：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">//Cannot inherit from final '*.Father'</span><span class="token punctuation">}</span></code></pre><p>    方法：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">dosomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">Son<span class="token punctuation">.</span>dosomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">dosomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment" spellcheck="true">//Error:overridden method id final</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>    变量：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">void</span> <span class="token function">dosomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">class</span> <span class="token class-name">Son</span> <span class="token keyword">extends</span> <span class="token class-name">Father</span><span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setA</span><span class="token punctuation">(</span><span class="token keyword">int</span> number<span class="token punctuation">)</span><span class="token punctuation">{</span>        a <span class="token operator">=</span> number<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//Error:Cannot assign a value to final variable 'a'</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String args<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">new</span> <span class="token class-name">Son<span class="token punctuation">.</span>dosomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="5、操作字符串有哪些类？它们之间有什么区别"><a href="#5、操作字符串有哪些类？它们之间有什么区别" class="headerlink" title="5、操作字符串有哪些类？它们之间有什么区别"></a>5、操作字符串有哪些类？它们之间有什么区别</h4><p>    String：不可变<br>    StringBuilder：可变，不加锁，速度快<br>    StringBuffer：可变，加锁，线程安全<br></p><h4 id="6、Java种的-Math-round-1-5-等于多少"><a href="#6、Java种的-Math-round-1-5-等于多少" class="headerlink" title="6、Java种的 Math.round(-1.5) 等于多少"></a>6、Java种的 Math.round(-1.5) 等于多少</h4><p>    Math.round(-1.5) = -1</p><blockquote><p>-3, -2, -1, 0, 1, 2<br><strong>Math.round()：向右取整</strong></p></blockquote><h4 id="7、HashMap-与-HashTable-的区别"><a href="#7、HashMap-与-HashTable-的区别" class="headerlink" title="7、HashMap 与 HashTable 的区别"></a>7、HashMap 与 HashTable 的区别</h4><p>    <strong><font size="3">•</font></strong><font size="3"> Map：<br>        HashMap：线程不安全，速度快，允许放入空值（ HashMap.put(null, null) √ ）；<br>        HashTable：线程安全，速度慢，不允许放入空值<br>（多线程的同时执行方法，谁先拿到锁才可以执行，剩下没拿到锁的就等待拿到锁）。<br>    &lt;key, value&gt;<br></font></p><font size="3"><h4 id="8、HashMap"><a href="#8、HashMap" class="headerlink" title="8、HashMap"></a>8、HashMap</h4><p>    <a href="//blog.csdn.net/woshimaxiao1/article/details/83661464" target="_blank" rel="noopener">具体详解</a><br></p><p>    HashMap：<br>        存储结构：entry的数组，entry&lt;key, value&gt;，entry本身也是一种链表结构，长度&gt;=8，变成红黑树；<br>        存储逻辑：根据计算hash值放到对应位置；<br>        扩容方案：自身容量扩大一倍，成倍增长！<br></p><h4 id="9、Vector-和-ArrayList-的区别"><a href="#9、Vector-和-ArrayList-的区别" class="headerlink" title="9、Vector 和 ArrayList 的区别"></a>9、Vector 和 ArrayList 的区别</h4><p>    <strong><font size="3">•</font></strong><font size="3"> List：<br>        Vector：上锁，线程安全，速度较慢，增长2×<br>        ArrayList：线程不安全，速度较快，增长是1.5×<br><br>    <strong><font size="3">•</font></strong><font size="3"> Vector为什么用的少：<br>        ①线程安全，牺牲了速度；<br>        ②扩容大，需要连续储存空间比较大;<br>        ③插入、删除比较慢，LinkedList来实现</font></font></p><font size="3"><font size="3"><p><strong><font size="5">Peace!</font></strong></p><font size="5"></font></font></font></font></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（六十四）：滑动窗口的最大值</title>
      <link href="/post/64066.html"/>
      <url>/post/64066.html</url>
      
        <content type="html"><![CDATA[<h2 id="滑动窗口的最大值"><a href="#滑动窗口的最大值" class="headerlink" title="滑动窗口的最大值:"></a>滑动窗口的最大值:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/1624bc35a45c42c0bc17d17fa0cba788?tpId=13&amp;tqId=11217&amp;tPage=4&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    给定一个数组和滑动窗口的大小，找出所有滑动窗口里数值的最大值。例如，如果输入数组{2,3,4,2,6,2,5,1}及滑动窗口的大小3，那么一共存在6个滑动窗口，他们的最大值分别为{4,4,6,6,6,5}； 针对数组{2,3,4,2,6,2,5,1}的滑动窗口有以下6个： {[2,3,4],2,6,2,5,1}，<br> {2,[3,4,2],6,2,5,1}， {2,3,[4,2,6],2,5,1}， {2,3,4,[2,6,2],5,1}， {2,3,4,2,[6,2,5],1}， {2,3,4,2,6,[2,5,1]}。<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> nums = [1,3,-1,-3,5,3,6,7], 和 k = 3<br><strong>输出:</strong> [3,3,5,5,6,7]<br> 滑动窗口的位置                              最大值<br>———————————–              —–<br>[1   3   -1]  -3   5   3   6   7         3<br> 1  [3  -1   -3]  5   3   6  7       3<br> 1   3  [-1   -3   5]  3   6   7       5<br> 1   3   -1  [-3   5   3]  6  7      5<br> 1   3   -1   -3  [5   3   6]  7       6<br> 1   3   -1   -3   5  [3   6   7]       7</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>    利用双端队列：<br><strong><font size="3">•</font></strong><font size="3"> 每次 push 时，从队尾把值加进来。加进来的同时判断从右到左判断，比他小与等于的值全部弹出；<br><strong><font size="3">•</font></strong><font size="3"> 队头每次向右移动 ，判断队头的坐标是否过期。（越界）越界的话就弹出。</font></font></p><font size="3"><font size="3"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(N)</strong>，每个元素被处理两次- 其索引被添加到双向队列中和被双向队列删除<br>空间复杂度：<strong><em>O</em>(N)</strong>，双向队列的空间</p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Deque<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>LinkedList<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JianZhiOffer64</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">maxInWindows</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> num<span class="token punctuation">,</span> <span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">==</span> null <span class="token operator">||</span> num<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> size <span class="token operator">></span> num<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> null<span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Deque<span class="token operator">&lt;</span>Integer<span class="token operator">></span> deque <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> num<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果队头元素不在滑动窗口中，就删除头元素；</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">>=</span> deque<span class="token punctuation">.</span><span class="token function">getFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>                deque<span class="token punctuation">.</span><span class="token function">pollLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//如果当前元素大于队尾则删除</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>deque<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> num<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> num<span class="token punctuation">[</span>deque<span class="token punctuation">.</span><span class="token function">getLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                deque<span class="token punctuation">.</span><span class="token function">pollLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            deque<span class="token punctuation">.</span><span class="token function">offer</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">>=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>                result<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>deque<span class="token punctuation">.</span><span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（五十一）：构建乘积数组</title>
      <link href="/post/30060.html"/>
      <url>/post/30060.html</url>
      
        <content type="html"><![CDATA[<h2 id="构建乘积数组"><a href="#构建乘积数组" class="headerlink" title="构建乘积数组:"></a>构建乘积数组:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.nowcoder.com/practice/94a4d381a68b47b7a8bed86f2975db46?tpId=13&amp;tqId=11204&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    给定一个数组A[0,1,…,n-1],请构建一个数组B[0,1,…,n-1],其中B中的元素B[i]=A[0]×A[1]×…×A[i-1]×A[i+1]×…×A[n-1]。不能使用除法。（注意：规定B[0]=A[0]×A[1]×…×A[n-2];）<br><br><strong><font size="3" face="黑体">示例 1：</font></strong></p><font size="3" face="黑体"><blockquote><p><strong>输入:</strong> [1,2,3,4,5]<br><strong>输出:</strong> [120,60,40,30,24]</p></blockquote><p><strong><font size="3" face="黑体">示例 2：</font></strong></p><font size="3" face="黑体"><blockquote><p><strong>输入:</strong> [2,2,2,0,1]<br><strong>输出:</strong> 1</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>因为题目要求不能使用除法，所以我们不能使用公式 B[i]=A[0]×A[1]×…×A[i-1]×A[i+1]×…×A[n-1] 表示,使用除法时要特别注意A[i]等于0的情况。</p><p><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pbWcyMDE4LmNuYmxvZ3MuY29tL2Jsb2cvMTQwNzMzMC8yMDE4MTEvMTQwNzMzMC0yMDE4MTExNjIxNDYzNTc0OC0xOTY4NzQwODU1LnBuZw?x-oss-process=image/format,png#pic_center" alt="在这里插入图片描述"><br>（图片转自<a href="https://www.cnblogs.com/wxdjss/p/5448990.html" target="_blank" rel="noopener">此处</a>）<br><strong><font size="3">•</font></strong><font size="3"> 从图中可以发现，B[i] 的左半部分与 B[i-1] 有关（<strong>B[i] = B[i-1] * A[i-1]</strong>）;<br><strong><font size="3">•</font></strong><font size="3"> 把 B[i] 的右半部分看作D[i]，有D[i] = D[i+1] * A[i+1]；<br><br><strong><font size="3">•</font></strong><font size="3"> 因此我们先从0到n-1遍历，计算每个B[i]的左半部分；然后定义一个变量 temp 代表右半部分的乘积，从 n-1 到 0 遍历，令 B[i]* = temp，而每次的 temp 与上次的 temp 关系即为temp* = A[i+1]。</font></font></font></p><font size="3"><font size="3"><font size="3"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(N)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> A<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>A <span class="token operator">==</span> null <span class="token operator">||</span> A<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> B <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>A<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        B<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> A<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            B<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> B<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> A<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> A<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            temp <span class="token operator">*=</span> A<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            B<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> B<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（五十）：数组中重复的数字</title>
      <link href="/post/64951.html"/>
      <url>/post/64951.html</url>
      
        <content type="html"><![CDATA[<h2 id="数组中重复的数字"><a href="#数组中重复的数字" class="headerlink" title="数组中重复的数字:"></a>数组中重复的数字:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/623a5ac0ea5b4e5f95552655361ae0a8?tpId=13&amp;tqId=11203&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    在一个长度为n的数组里的所有数字都在0到n-1的范围内。 数组中某些数字是重复的，但不知道有几个数字是重复的。也不知道每个数字重复几次。请找出数组中任意一个重复的数字。 例如，如果输入长度为7的数组{2,3,1,0,2,5,3}，那么对应的输出是第一个重复的数字2。<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> [2,3,1,0,2,5,3]<br><strong>输出:</strong> 2</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>    数组的长度为 n 且所有数字都在 0 到 n-1 的范围内，我们可以将每次遇到的数进行”归位”，当某个数发现自己的”位置”被相同的数占了，则出现重复。<br>    扫描整个数组，当扫描到下标为 i 的数字时，首先比较该数字（m）是否等于 i，如果是，则接着扫描下一个数字；如果不是，则拿 m 与第 m 个数比较。如果 m 与第 m 个数相等，则说明出现重复了；如果 m 与第 m 个数不相等，则将 m 与第 m 个数交换，将 m “归位”，再重复比较交换的过程，直到发现重复的数</p><p>以题目提供的数组{2,3,1,0,2,5,3} 为例：<br><strong><font size="3">•</font></strong><font size="3"> 当 i = 0 时，nums[i] = 2 != i，判断 nums[i] 不等于 nums[nums[i]]，交换 nums[i] 和 nums[nums[i]]，交换后数组为：{1,3,2,0,2,5,3}；<br>此时 i = 0，nums[i] = 1 != i，判断 nums[i] 不等于 nums[nums[i]]，交换 nums[i] 和 nums[nums[i]]，交换后数组为：{3,1,2,0,2,5,3}；<br>此时 i = 0，nums[i] = 3 != i，判断 nums[i] 不等于 nums[nums[i]]，交换 nums[i] 和 nums[nums[i]]，交换后数组为：{0,1,2,3,2,5,3}；<br>此时 i = 0，nums[i] = 0 = i，继续下一组；<br><strong><font size="3">•</font></strong><font size="3"> 当 i = 1，nums[i] = 1 = i，继续下一组；<br><strong><font size="3">•</font></strong><font size="3"> 当 i = 2，nums[i] = 2 = i，继续下一组；<br><strong><font size="3">•</font></strong><font size="3"> 当 i = 3，nums[i] = 3 = i，继续下一组；<br><strong><font size="3">•</font></strong><font size="3"> 当 i = 4，nums[i] = 2 != i，判断 nums[i] 等于 nums[nums[i]]，出现重复，赋值返回。</font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(logN)</strong><br>空间复杂度：<strong><em>O</em>(1)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// Parameters:</span>    <span class="token comment" spellcheck="true">//    numbers:     an array of integers</span>    <span class="token comment" spellcheck="true">//    length:      the length of array numbers</span>    <span class="token comment" spellcheck="true">//    duplication: (Output) the duplicated number in the array number,length of duplication array is 1,so using duplication[0] = ? in implementation;</span>    <span class="token comment" spellcheck="true">//                  Here duplication like pointor in C/C++, duplication[0] equal *duplication in C/C++</span>    <span class="token comment" spellcheck="true">//    这里要特别注意~返回任意重复的一个，赋值duplication[0]</span>    <span class="token comment" spellcheck="true">// Return value:       true if the input is valid, and there are some duplications in the array number</span>    <span class="token comment" spellcheck="true">//                     otherwise false</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">duplicate</span><span class="token punctuation">(</span><span class="token keyword">int</span> numbers<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">int</span> length<span class="token punctuation">,</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> duplication<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>length <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> numbers <span class="token operator">==</span> null<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> numbers<span class="token punctuation">[</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    duplication<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    <span class="token keyword">int</span> temp <span class="token operator">=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> numbers<span class="token punctuation">[</span>temp<span class="token punctuation">]</span><span class="token punctuation">;</span>                    numbers<span class="token punctuation">[</span>temp<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（四十）：数组中只出现一次的数字</title>
      <link href="/post/46036.html"/>
      <url>/post/46036.html</url>
      
        <content type="html"><![CDATA[<h2 id="数组中只出现一次的数字"><a href="#数组中只出现一次的数字" class="headerlink" title="数组中只出现一次的数字:"></a>数组中只出现一次的数字:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/e02fdb54d7524710a7d664d082bb7811?tpId=13&amp;tqId=11193&amp;tPage=2&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> [1,2,1,3,2,5]<br><strong>输出:</strong> [3,5]</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p><strong><font size="3">•</font></strong><font size="3"> （一）：用利用哈希表的特性来解答<br><strong><font size="3">•</font></strong><font size="3"> （二）：利用异或：<br><br>    现在数组中只有连个数字只出现过1次 a, b ，直接异或一次只能得到这两个数字的异或结果。如果我们把这两个数字分到两个数组当中，再让两个分组各自进行异或，那么就能得到结果了。<br>    <strong><font size="3">•</font></strong><font size="3"> <strong>关键：</strong> 如何将这两个数字分开到两个数组当中。<br>    由于 a, b 肯定是不相等的，那么在二进制上肯定有一位是不同的。<strong>根据这一位是 0 还是 1 可以将 a，b 分成 a组和 b组。</strong> 而这个数组中其它数字不是属于 a组就是 b组。再对a，b组进行异或就能得到 a、b了。<strong>根据 a、b异或的结果我们可以得知，结果的二进制中 ‘1’ 的位就说明 a、b在这一位上是不同的。</strong></font></font></font></p><font size="3"><font size="3"><font size="3"><blockquote><p>int nums[ ] = {1, 1, 3, 5, 2, 2}</p></blockquote><p>整个数组异或的结果为3^5，即 0x0011 ^ 0x0101 = 0x0110；<br>对 0x0110，第1位（由低向高，从0开始）就是1，整个数组根据第1位是0还是1分成两组。</p><blockquote><p>nums[0] = 1  0x0001  第一组<br><br>nums[1] = 1  0x0001  第一组<br><br>nums[2] = 3  0x0011  第二组<br><br>nums[2] = 3  0x0011  第二组<br><br>nums[3] = 5  0x0101  第一组<br><br>nums[4] = 2  0x0010  第二组<br><br>nums[5] = 2  0x0010  第二组<br></p></blockquote><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>方法（一）<br>时间复杂度：<strong><em>O</em>(N)</strong><br>空间复杂度：<strong><em>O</em>(N)</strong>，哈希表所使用的空间。<br><br>方法（二）：<br>时间复杂度：<strong><em>O</em>(N)</strong><br>空间复杂度：<strong><em>O</em>(1)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><p>方法一：</p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">//num1,num2分别为长度为1的数组。传出参数</span><span class="token comment" spellcheck="true">//将num1[0],num2[0]设置为返回结果</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">FindNumsAppearOnce</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span><span class="token keyword">int</span> num1<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">,</span> <span class="token keyword">int</span> num2<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        HashMap<span class="token operator">&lt;</span>Integer<span class="token punctuation">,</span> Integer<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    num1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    count<span class="token operator">++</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                <span class="token keyword">else</span> <span class="token punctuation">{</span>                    num2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p>方法二：</p><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">singleNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums <span class="token operator">==</span> null <span class="token operator">||</span> nums<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> res<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> xorRes <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>            xorRes <span class="token operator">^=</span> x<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 用来标志第几位是 1</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>xorRes <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            temp <span class="token operator">=</span> temp <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span>            xorRes <span class="token operator">=</span> xorRes <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 右移，从低到高</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>y <span class="token operator">&amp;</span> temp<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 对应位是 0</span>                res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^=</span> y<span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>                res<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^=</span> y<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（三十七）：数字在排序数组中出现的次数</title>
      <link href="/post/12141.html"/>
      <url>/post/12141.html</url>
      
        <content type="html"><![CDATA[<h2 id="数字在排序数组中出现的次数"><a href="#数字在排序数组中出现的次数" class="headerlink" title="数字在排序数组中出现的次数:"></a>数字在排序数组中出现的次数:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/70610bf967994b22bb1c26f9ae901fa2?tpId=13&amp;tqId=11190&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    统计一个数字在排序数组中出现的次数。<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> nums = [5,7,7,8,8,10], target = 8<br><strong>输出:</strong> 2</p></blockquote><p><strong><font size="3">示例 2：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> nums = [5,7,7,8,8,10], target = 6<br><strong>输出:</strong> 0</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>    <strong><font size="3">•</font></strong><font size="3"> 可以先二叉搜索找一下这个元素的位置，然后再开始遍历搜索一下。<br>    <strong><font size="3">•</font></strong><font size="3"> 或者利用二分法进行求解，因为是排序数组，可以找到 target 的左边界 left 和有边界 right，<font color="red"><strong>righ - left - 1</strong><font color="black">即为数字出现的次数</font></font></font></font></p><font size="3"><font size="3"><font color="red"><font color="black"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(logN)</strong><br>注：如果整个数组都是 target 的话，第一种会退化成<strong><em>O</em>(logN)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Arrays<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">GetNumberOfK</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> array <span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> Arrays<span class="token punctuation">.</span><span class="token function">binarySearch</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> k<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">>=</span><span class="token number">0</span> <span class="token operator">&amp;&amp;</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> k<span class="token punctuation">;</span> <span class="token operator">--</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> count<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> target<span class="token punctuation">)</span> i <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> j <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> i<span class="token punctuation">;</span>        i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> j<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> j<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">&lt;</span> target<span class="token punctuation">)</span> i <span class="token operator">=</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> j <span class="token operator">=</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> j<span class="token punctuation">;</span>        <span class="token keyword">return</span> right <span class="token operator">-</span> left <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（二十八）：数组中出现次数超过一半的数字</title>
      <link href="/post/38908.html"/>
      <url>/post/38908.html</url>
      
        <content type="html"><![CDATA[<h2 id="数组中出现次数超过一半的数字"><a href="#数组中出现次数超过一半的数字" class="headerlink" title="数组中出现次数超过一半的数字:"></a>数组中出现次数超过一半的数字:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.nowcoder.com/practice/e8a1b01a2df14cb2b228b30ee6a92163?tpId=13&amp;tqId=11181&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。<br><br><strong><font size="3" face="黑体">示例 1：</font></strong></p><font size="3" face="黑体"><blockquote><p><strong>输入:</strong> [1, 2, 3, 2, 2, 2, 5, 4, 2]<br><strong>输出:</strong> 2</p></blockquote><p><strong><font size="3" face="黑体">示例 2：</font></strong></p><font size="3" face="黑体"><blockquote><p><strong>输入:</strong> [2,2,1,1,1,2,2]<br><strong>输出:</strong> 2</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>采用阵地攻守的思想：<br><strong><font size="3">•</font></strong><font size="3"> 第一个数字作为第一个士兵，守阵地；<strong>count = 1</strong>；<br><strong><font size="3">•</font></strong><font size="3"> 遇到相同元素，<strong>count++</strong>;<br><strong><font size="3">•</font></strong><font size="3"> 遇到不相同元素，即为敌人，同归于尽，<strong>count–</strong>；当遇到count为0的情况，又以新的i值作为守阵地的士兵，继续下去，到最后还留在阵地上的士兵，有可能是主元素。<br><strong><font size="3">•</font></strong><font size="3"> 再加一次循环，记录这个士兵的个数看是否大于数组一般即可。</font></font></font></font></p><font size="3"><font size="3"><font size="3"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(N)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><p><strong><font size="3">•</font></strong><font size="3"> ==注：== length / 2 用 <strong>length &gt;&gt; 1</strong> 代替进行运算效率更高~</font></p><font size="3"><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">MoreThanHalfNum_Solution</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> null <span class="token operator">||</span> array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> preValue <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//当前阵地中的士兵</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//阵地中士兵的数量</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果是相同阵营的士兵则数量+1</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> preValue<span class="token punctuation">)</span><span class="token punctuation">{</span>                count<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//与敌人同归于尽，数量-1</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                count<span class="token operator">--</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//士兵全部阵亡，取新的当前值作为守阵士兵</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    preValue <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//判断这个士兵是不是真的是数量大于一半</span>        <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> preValue<span class="token punctuation">)</span><span class="token punctuation">{</span>                num<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>num <span class="token operator">></span> array<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">?</span>preValue<span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（三十五）：数组中的逆序对</title>
      <link href="/post/35899.html"/>
      <url>/post/35899.html</url>
      
        <content type="html"><![CDATA[<h2 id="数组中的逆序对"><a href="#数组中的逆序对" class="headerlink" title="数组中的逆序对:"></a>数组中的逆序对:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/96bd6684e04a44eb80e6a68efc0ec6c5?tpId=13&amp;tqId=11188&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    在数组中的两个数字，如果前面一个数字大于后面的数字，则这两个数字组成一个逆序对。输入一个数组,求出这个数组中的逆序对的总数P。并将P对1000000007取模的结果输出。 即输出P%1000000007<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> [7,5,6,4]<br><strong>输出:</strong> 5</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>    每一个值都要跟前面的值进行比较判断是否为逆序对，可以借助归并排序，利用 <font color="red">分治<font color="black">的思想，在排序的过程中统计逆序对。<br>逆序对的来源：<br><strong><font size="3">•</font></strong><font size="3"> 左边区间的逆序对<br><strong><font size="3">•</font></strong><font size="3"> 右边区间的逆序对<br><strong><font size="3">•</font></strong><font size="3"> 横跨两个区间的逆序对<br><strong><font size="3">•</font></strong><font size="3"> 即：[A，B]中的逆序对 = [A]的逆序对 + [B]中的逆序对 + 将A，B混排在一起的逆序对</font></font></font></font></font></font></p><font color="black"><font size="3"><font size="3"><font size="3"><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(NlogN)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JianZhiOffer35</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">InversePairs</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">MergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> count<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">MergeSort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token function">MergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">MergeSort</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">Merge</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> left<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">Merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">,</span> <span class="token keyword">int</span> left<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">=</span> left<span class="token punctuation">,</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果前面的元素小于后面的不能构成逆序对</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> array<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//如果前面的元素大于后面的，那么在前面元素之后的元素都能和后面的元素构成逆序对</span>            <span class="token keyword">else</span> <span class="token punctuation">{</span>                temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                count <span class="token operator">+=</span> mid <span class="token operator">-</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>                count <span class="token operator">=</span> count <span class="token operator">%</span> <span class="token number">1000000007</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//在leetcode中，此行不加</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span><span class="token punctuation">{</span>            temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span><span class="token punctuation">{</span>            temp<span class="token punctuation">[</span>k<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> l<span class="token operator">&lt;</span>k<span class="token punctuation">;</span> l<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            array<span class="token punctuation">[</span>left<span class="token operator">+</span>l<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（三十二）：把数组排成最小的数</title>
      <link href="/post/56735.html"/>
      <url>/post/56735.html</url>
      
        <content type="html"><![CDATA[<h2 id="把数组排成最小的数"><a href="#把数组排成最小的数" class="headerlink" title="把数组排成最小的数:"></a>把数组排成最小的数:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&amp;tqId=11159&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    输入一个正整数数组，把数组里所有数字拼接起来排成一个数，打印能拼接出的所有数字中最小的一个。例如输入数组{3，32，321}，则打印出这三个数字能排成的最小数字为321323。<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> [10,2]<br><strong>输出:</strong> “102”</p></blockquote><p><strong><font size="3">示例 2：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> [3,30,34,5,9]<br><strong>输出:</strong> “3033459”</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>    比较两个字符串 s1, s2 大小的时候，先将它们拼接起来，比较 s1+s2 ,和 s2+s1 那个大，如果 s1+s2 大，那说明 s2 应该放前面，所以按这个规则，s2 就应该排在 s1 前面。</p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><p><strong><font size="3">•</font></strong><font size="3"> 第一种（耗时最长 42ms，自己编写的比较方法，两个for循环），并且int有大小限制，可替换成long型：</font></p><font size="3"><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> String <span class="token function">PrintMinNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> numbers<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>numbers <span class="token operator">==</span> null <span class="token operator">||</span> numbers<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> numbers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> numbers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">int</span> num1 <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">""</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//long num1 = Long.valueOf(numbers[i] + "" + numbers[j]);</span>                <span class="token keyword">int</span> num2 <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>numbers<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">""</span> <span class="token operator">+</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//long num2 = Long.valueOf(numbers[j] + "" + numbers[i]);</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>num1 <span class="token operator">></span> num2<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">int</span> temp <span class="token operator">=</span> numbers<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                    numbers<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                    numbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        StringBuilder ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> numbers<span class="token punctuation">)</span><span class="token punctuation">{</span>            ans<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> ans<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><font size="3">•</font></strong><font size="3"> 第二种（自定义排序规则 String[ ] ，耗时最短 <strong>6ms</strong>）：</font></p><font size="3"><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> String <span class="token function">minNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String<span class="token punctuation">[</span><span class="token punctuation">]</span> strNumbers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            strNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//排序（传入一个比较器对象）</span>        Arrays<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>strNumbers<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token operator">&lt;</span>String<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span>String o1<span class="token punctuation">,</span> String o2<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token punctuation">(</span>o1 <span class="token operator">+</span> o2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2 <span class="token operator">+</span> o1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//升序</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//元素拼接</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strNumbers<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>strNumbers<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><font size="3">•</font></strong><font size="3"> 第三种（自定义排序规则 ArrayList&lt; String &gt; ，耗时比第二种稍长，9ms）：</font></p><font size="3"><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> String <span class="token function">minNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ArrayList<span class="token operator">&lt;</span>String<span class="token operator">></span> strList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> num <span class="token operator">:</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>            strList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        strList<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">(</span>s1 <span class="token operator">+</span> s2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>s2 <span class="token operator">+</span> s1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String str <span class="token operator">:</span> strList<span class="token punctuation">)</span> <span class="token punctuation">{</span>            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（三十）：连续子数组的最大和（dp）</title>
      <link href="/post/37315.html"/>
      <url>/post/37315.html</url>
      
        <content type="html"><![CDATA[<h2 id="连续子数组的最大和"><a href="#连续子数组的最大和" class="headerlink" title="连续子数组的最大和:"></a>连续子数组的最大和:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/459bd355da1549fa8a49e350bf3df484?tpId=13&amp;tqId=11183&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1)<br><br><strong><font size="3">示例 1：</font></strong></p><font size="3"><blockquote><p><strong>输入:</strong> nums = [-2,1,-3,4,-1,2,1,-5,4]<br><strong>输出:</strong> 6<br><strong>解释:</strong> 连续子数组 [4,-1,2,1] 的和最大，为 6</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>此题可以用动态规划来达到最优解，如下：</p><p><strong><font size="3">•</font></strong><font size="3"> <strong>状态定义：</strong> 设动态规划列表 dpdp ，dp[i] 代表以元素 nums[i] 为结尾的连续子数组最大和。<br><br><strong><font size="3">•</font></strong><font size="3"> <strong>转移方程：</strong> 若 <em>dp</em>[i - 1] ≤ 0 ，说明 <em>dp</em>[i - 1]  对 <em>dp</em>[ i ]  产生负贡献，即 <em>dp</em>[i - 1]  + <em>nums</em>[ i ] 还不如 <em>nums</em>[ i ] 本身大。<br>    <strong><font size="3">•</font></strong><font size="3"> 当 <em>dp</em>[i - 1] &gt; 0 时：执行 <em>dp</em>[ i ] = <em>dp</em>[i - 1] + nums<em>[ i ]；<br>    <strong><font size="3">•</font></strong><font size="3"> 当 *dp</font></em><font size="3">[i - 1] ≤ 0 时：执行 <em>dp</em>[ i ] = <em>nums</em>[ i ]；<br><br><strong><font size="3">•</font></strong><font size="3"> <strong>初始状态：</strong> <em>dp</em>[ 0 ] = <em>nums</em>[ 0 ] ，即以 <em>nums</em>[ 0 ] 结尾的连续子数组最大和为 <em>nums</em>[ 0 ] 。<br><br><strong><font size="3">•</font></strong><font size="3"> <strong>返回值：</strong> 返回 <em>dp</em> 列表中的最大值，代表全局最大值。</font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200323123726174.png" width="50%"> <br></center><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度： <strong><em>O</em>(N)</strong>， 线性遍历数组 numsnums 即可获得结果，使用 <em>O</em>(N) 时间。<br>空间复杂度：<strong><em>O</em>(1)</strong>，使用常数大小的额外空间。</p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">FindGreatestSumOfSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>array <span class="token operator">==</span> null <span class="token operator">||</span> array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">int</span> n <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> dp <span class="token operator">=</span> <span class="token keyword">new</span>  <span class="token class-name">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> result <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            result <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><strong><font size="3">•</font></strong><font size="3"> <strong>空间复杂度降低：</strong><br>    由于 <em>dp</em>[ i ] 只与 <em>dp</em>[i - 1]  和 <em>nums</em>[ i ] 有关系，因此可以将原数组 <em>nums</em> 用作 <em>dp</em> 列表，即直接在 <em>nums</em> 上修改即可。<br>由于省去 <em>dp</em> 列表使用的额外空间，因此空间复杂度从 <strong><em>O</em>(N)</strong> 降至 <strong><em>O</em>(1)</strong>。</font></p><font size="3"><h4 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxSubArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> res <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            res <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> res<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（十九）：顺时针打印矩阵</title>
      <link href="/post/54653.html"/>
      <url>/post/54653.html</url>
      
        <content type="html"><![CDATA[<h2 id="顺时针打印矩阵"><a href="#顺时针打印矩阵" class="headerlink" title="顺时针打印矩阵:"></a>顺时针打印矩阵:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/9b4c81a02cd34f76be2659fa0d54342a?tpId=13&amp;tqId=11172&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。<br><br><strong>示例 1：</strong></p><blockquote><p><strong>输入:</strong> matrix = [ [1,2,3],<br>                  [4,5,6],<br>               [7,8,9] ]<br><strong>输出:</strong> [1,2,3,6,9,8,7,4,5]</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入:</strong> matrix = [ [1,2,3,4],<br>               [5,6,7,8],<br>               [9,10,11,12] ]<br><strong>输出:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>模拟法（模拟矩阵打印的顺时针走）：用四个标志位置就可以进行解决（代码中的low、high、left、right代表了即将访问的上下左右四条线）。</p><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度 <em>O</em>(<em>M N</em>) ： M, N 分别为矩阵行数和列数。<br>空间复杂度 <em>O</em>(1) ： 四个边界 <strong>l</strong> , <strong>r</strong> , <strong>t</strong> , <strong>b</strong> 使用常数大小的 <strong>额外</strong> 空间（ <font color="red">res<font color="black"> 为必须使用的空间）</font></font></p><font color="red"><font color="black"><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token function">printMatrix</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> matrix<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>matrix<span class="token operator">==</span>null<span class="token punctuation">)</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> list<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span>Integer<span class="token operator">></span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> row<span class="token operator">=</span>matrix<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> col<span class="token operator">=</span>matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">int</span> left<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>top<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>right<span class="token operator">=</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>bottom<span class="token operator">=</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>left<span class="token operator">&lt;=</span>right<span class="token operator">&amp;&amp;</span>top<span class="token operator">&lt;=</span>bottom<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//从左向右</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span>left<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>right<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//从上到下（从下一行开始向下走）</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>top<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span>bottom<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//从右到左</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>top<span class="token operator">!=</span>bottom<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token operator">=</span>right<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>k<span class="token operator">>=</span>left<span class="token punctuation">;</span>k<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>bottom<span class="token punctuation">]</span><span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//从下到上</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>left<span class="token operator">!=</span>right<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token operator">=</span>bottom<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>l<span class="token operator">></span>top<span class="token punctuation">;</span>l<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//下一个正方形矩阵</span>            top<span class="token operator">++</span><span class="token punctuation">;</span>left<span class="token operator">++</span><span class="token punctuation">;</span>right<span class="token operator">--</span><span class="token punctuation">;</span>bottom<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（十三）：调整数组顺序使奇数位于偶数前面</title>
      <link href="/post/45411.html"/>
      <url>/post/45411.html</url>
      
        <content type="html"><![CDATA[<h2 id="调整数组顺序使奇数位于偶数前面"><a href="#调整数组顺序使奇数位于偶数前面" class="headerlink" title="调整数组顺序使奇数位于偶数前面:"></a>调整数组顺序使奇数位于偶数前面:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/beb5aa231adc45b2a5dcc5b62c93f593?tpId=13&amp;tqId=11166&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有的奇数位于数组的前半部分，所有的偶数位于数组的后半部分，并保证奇数和奇数，偶数和偶数之间的相对位置不变。<br><br><strong>示例 1：</strong></p><blockquote><p><strong>输入：</strong> nums = [1,2,3,4]<br><strong>输出：</strong> [1,3,2,4]<br>注：[3,1,2,4] 也是正确的答案之一。</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><h6 id="解法1："><a href="#解法1：" class="headerlink" title="解法1："></a>解法1：</h6><p>遍历原数组，分别取出奇偶数放入新的数组，再放回原数组：</p><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(2N)</strong> ，N为数组长度<br>空间复杂度：<strong><em>O</em>(2N)</strong>， N为数组长度</p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">ReOrderArr</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr<span class="token punctuation">)</span><span class="token punctuation">{</span>    ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> odd  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ArrayList<span class="token operator">&lt;</span>Integer<span class="token operator">></span> even  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            odd<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">else</span> even<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> odd<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> odd<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> even<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        arr<span class="token punctuation">[</span>odd<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> even<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h6 id="解法2（双指针法简洁版）："><a href="#解法2（双指针法简洁版）：" class="headerlink" title="解法2（双指针法简洁版）："></a>解法2（双指针法简洁版）：</h6><p>利用 <font color="red"><strong>快慢双指针</strong> <font color="black">遍历原数组，快指针对应的数若为奇数，则与慢指针对应数交换，不需要额外开辟内存空间。</font></font></p><font color="red"><font color="black"><h4 id="复杂度：-1"><a href="#复杂度：-1" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(N)</strong> ，N为数组长度<br>空间复杂度：<strong><em>O</em>(1)</strong></p><h4 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">exchange</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>            nums<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>            start<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> nums<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（六）：旋转数组的最小数字</title>
      <link href="/post/27960.html"/>
      <url>/post/27960.html</url>
      
        <content type="html"><![CDATA[<h2 id="旋转数组的最小数字"><a href="#旋转数组的最小数字" class="headerlink" title="旋转数组的最小数字:"></a>旋转数组的最小数字:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&amp;tqId=11159&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。<br>NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。<br><br><strong>示例 1：</strong></p><blockquote><p><strong>输入:</strong> [1,3,5]<br><strong>输出:</strong> 1</p></blockquote><p><strong>示例 2：</strong></p><blockquote><p><strong>输入:</strong> [2,2,2,0,1]<br><strong>输出:</strong> 1</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>将旋转数组对半分可以得到一个包含最小元素的新旋转数组，以及一个非递减排序的数组。新的旋转数组的数组元素是原数组的一半，从而将问题规模减少了一半，这种折半性质的算法的时间复杂度<strong><em>O</em>(logN)</strong>。</p><p><strong>•</strong> 取数组 arr 的<strong>left、right、mid =（left + right）/ 2</strong>；<br><strong>•</strong> 情况1：如果arr[left] &lt; arr[right]，说明该旋转数组是有序数组，最小值即为arr[left]；<br><strong>•</strong> 情况2：array[left] &lt; array[mid]，说明左半部分是有序的，我们应该在右半部分找最小值，令==left = mid + 1==；<br><strong>•</strong> 情况3：array[right] &gt; array[mid]，说明右半部分是有序的，为防止漏掉最小值，==right = mid== 而不是 right = mid-1；<br><strong>•</strong> 情况4：其他特殊情况不满足条件，如arr[left] = arr[right]，array[left] = array[mid]，不好判断，==left++==，向右缩小范围继续判断。</p><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(logN)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//说明数组是有序数组</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> array<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//左半部分是有序的，其最小值肯定在右半部分</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//右半部分是有序的，为防止漏掉最小值，right = mid 而不是 right = mid-1</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">></span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                right <span class="token operator">=</span> mid<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//向右缩小范围继续判断</span>            <span class="token keyword">else</span> left<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> array<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="/post/39805.html"/>
      <url>/post/39805.html</url>
      
        <content type="html"><![CDATA[<font color="#00000"><h1 id="MySQL学习笔记"><a href="#MySQL学习笔记" class="headerlink" title="MySQL学习笔记"></a>MySQL学习笔记</h1><p><font color="red"><a href="//github.com/hjzCy/sql_node/blob/master/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md" target="_blank" rel="noopener">原文链接</a></font></p><font color="red"><h2 id="登录和退出MySQL服务器"><a href="#登录和退出MySQL服务器" class="headerlink" title="登录和退出MySQL服务器"></a><font color="#00000">登录和退出MySQL服务器</font></h2><pre class=" language-shell"><code class="language-shell"># 登录MySQL$ mysql -u root -proot# 退出MySQL数据库服务器exit;</code></pre><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a><font color="#00000">基本语法</font></h2><pre><font color="#00000"><code class="sql">-- 显示所有数据库show databases;-- 创建数据库CREATE DATABASE test;-- 切换数据库use test;-- 显示数据库中的所有表show tables;-- 创建数据表CREATE TABLE pet (    name VARCHAR(20),    owner VARCHAR(20),    species VARCHAR(20),    sex CHAR(1),    birth DATE,    death DATE);-- 查看数据表结构-- describe pet;desc pet;-- 查询表SELECT * from pet;-- 插入数据INSERT INTO pet VALUES ('puffball', 'Diane', 'hamster', 'f', '1990-03-30', NULL);-- 修改数据UPDATE pet SET name = 'squirrel' where owner = 'Diane';-- 删除数据DELETE FROM pet where name = 'squirrel';-- 删除表DROP TABLE myorder;</code></font></pre><font color="#00000"><h2 id="建表约束"><a href="#建表约束" class="headerlink" title="建表约束"></a>建表约束</h2><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 主键约束</span><span class="token comment" spellcheck="true">-- 使某个字段不重复且不得为空，确保表内所有数据的唯一性。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 联合主键</span><span class="token comment" spellcheck="true">-- 联合主键中的每个字段都不能为空，并且加起来不能和已设置的联合主键重复。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 自增约束</span><span class="token comment" spellcheck="true">-- 自增约束的主键由系统自动递增分配。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加主键约束</span><span class="token comment" spellcheck="true">-- 如果忘记设置主键，还可以通过SQL语句设置（两种方式）：</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除主键</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">drop</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span></code></pre><h3 id="唯一主键"><a href="#唯一主键" class="headerlink" title="唯一主键"></a>唯一主键</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时创建唯一主键</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加唯一主键</span><span class="token comment" spellcheck="true">-- 如果建表时没有设置唯一建，还可以通过SQL语句设置（两种方式）：</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除唯一主键</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> name<span class="token punctuation">;</span></code></pre><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时添加非空约束</span><span class="token comment" spellcheck="true">-- 约束某个字段不能为空</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 移除非空约束</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时添加默认约束</span><span class="token comment" spellcheck="true">-- 约束某个字段的默认值</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> user2 <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 移除非空约束</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> age <span class="token keyword">INT</span><span class="token punctuation">;</span></code></pre><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 班级</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> classes <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> students <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 这里的 class_id 要和 classes 中的 id 字段相关联</span>    class_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 表示 class_id 的值必须来自于 classes 中的 id 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> classes<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 1. 主表（父表）classes 中没有的数据值，在副表（子表）students 中，是不可以使用的；</span><span class="token comment" spellcheck="true">-- 2. 主表中的记录被副表引用时，主表不可以被删除。</span></code></pre><h2 id="数据库的三大设计范式"><a href="#数据库的三大设计范式" class="headerlink" title="数据库的三大设计范式"></a>数据库的三大设计范式</h2><h3 id="1NF"><a href="#1NF" class="headerlink" title="1NF"></a>1NF</h3><p>只要字段值还可以继续拆分，就不满足第一范式。</p><p>范式设计得越详细，对某些实际操作可能会更好，但并非都有好处，需要对项目的实际情况进行设定。</p><h3 id="2NF"><a href="#2NF" class="headerlink" title="2NF"></a>2NF</h3><p>在满足第一范式的前提下，其他列都必须完全依赖于主键列。如果出现不完全依赖，只可能发生在联合主键的情况下：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 订单表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    product_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    customer_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>product_id<span class="token punctuation">,</span> customer_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>实际上，在这张订单表中，<code>product_name</code> 只依赖于 <code>product_id</code> ，<code>customer_name</code> 只依赖于 <code>customer_id</code> 。也就是说，<code>product_name</code> 和 <code>customer_id</code> 是没用关系的，<code>customer_name</code> 和 <code>product_id</code> 也是没有关系的。</p><p>这就不满足第二范式：其他列都必须完全依赖于主键列！</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> product <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> customer <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>拆分之后，<code>myorder</code> 表中的 <code>product_id</code> 和 <code>customer_id</code> 完全依赖于 <code>order_id</code> 主键，而 <code>product</code> 和 <code>customer</code> 表中的其他字段又完全依赖于主键。满足了第二范式的设计！</p><h3 id="3NF"><a href="#3NF" class="headerlink" title="3NF"></a>3NF</h3><p>在满足第二范式的前提下，除了主键列之外，其他列之间不能有传递依赖关系。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_phone <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>表中的 <code>customer_phone</code> 有可能依赖于 <code>order_id</code> 、 <code>customer_id</code> 两列，也就不满足了第三范式的设计：其他列之间不能有传递依赖关系。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> customer <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    phone <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>修改后就不存在其他列之间的传递依赖关系，其他列都只依赖于主键列，满足了第三范式的设计！</p><h2 id="查询练习"><a href="#查询练习" class="headerlink" title="查询练习"></a>查询练习</h2><h3 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建数据库</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> select_test<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 切换数据库</span><span class="token keyword">USE</span> select_test<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sex <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    birthday <span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 生日</span>    class <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">-- 所在班级</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建教师表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> teacher <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sex <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    birthday <span class="token keyword">DATE</span><span class="token punctuation">,</span>    profession <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 职称</span>    department <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token comment" spellcheck="true">-- 部门</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建课程表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> course <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    t_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 教师编号</span>    <span class="token comment" spellcheck="true">-- 表示该 tno 来自于 teacher 表中的 no 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>t_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> teacher<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 成绩表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> score <span class="token punctuation">(</span>    s_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 学生编号</span>    c_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 课程号</span>    degree <span class="token keyword">DECIMAL</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 成绩</span>    <span class="token comment" spellcheck="true">-- 表示该 s_no, c_no 分别来自于 student, course 表中的 no 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>s_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> student<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> course<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 设置 s_no, c_no 为联合主键</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查看所有表</span><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加学生表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'101'</span><span class="token punctuation">,</span> <span class="token string">'曾华'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1977-09-01'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'102'</span><span class="token punctuation">,</span> <span class="token string">'匡明'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1975-10-02'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'王丽'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1976-01-23'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'104'</span><span class="token punctuation">,</span> <span class="token string">'李军'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1976-02-20'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'王芳'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1975-02-10'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'106'</span><span class="token punctuation">,</span> <span class="token string">'陆军'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1974-06-03'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'107'</span><span class="token punctuation">,</span> <span class="token string">'王尼玛'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1976-02-20'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'108'</span><span class="token punctuation">,</span> <span class="token string">'张全蛋'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1975-02-10'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'赵铁柱'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1974-06-03'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加教师表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'804'</span><span class="token punctuation">,</span> <span class="token string">'李诚'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1958-12-02'</span><span class="token punctuation">,</span> <span class="token string">'副教授'</span><span class="token punctuation">,</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'856'</span><span class="token punctuation">,</span> <span class="token string">'张旭'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1969-03-12'</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'825'</span><span class="token punctuation">,</span> <span class="token string">'王萍'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1972-05-05'</span><span class="token punctuation">,</span> <span class="token string">'助教'</span><span class="token punctuation">,</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'831'</span><span class="token punctuation">,</span> <span class="token string">'刘冰'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1977-08-14'</span><span class="token punctuation">,</span> <span class="token string">'助教'</span><span class="token punctuation">,</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加课程表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'计算机导论'</span><span class="token punctuation">,</span> <span class="token string">'825'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'操作系统'</span><span class="token punctuation">,</span> <span class="token string">'804'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'数字电路'</span><span class="token punctuation">,</span> <span class="token string">'856'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'9-888'</span><span class="token punctuation">,</span> <span class="token string">'高等数学'</span><span class="token punctuation">,</span> <span class="token string">'831'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加添加成绩表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'92'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'86'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'85'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'88'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'75'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'79'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'76'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'68'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'81'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查看表结构</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span></code></pre><h3 id="1-到-10"><a href="#1-到-10" class="headerlink" title="1 到 10"></a>1 到 10</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询 student 表的所有行</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 student 表中的 name、sex 和 class 字段的所有行</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> class <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 teacher 表中不重复的 department 列</span><span class="token comment" spellcheck="true">-- department: 去重查询</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中成绩在60-80之间的所有行（区间查询和运算符查询）</span><span class="token comment" spellcheck="true">-- BETWEEN xx AND xx: 查询区间, AND 表示 "并且"</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">BETWEEN</span> <span class="token number">60</span> <span class="token operator">AND</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">></span> <span class="token number">60</span> <span class="token operator">AND</span> degree <span class="token operator">&lt;</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中成绩为 85, 86 或 88 的行</span><span class="token comment" spellcheck="true">-- IN: 查询规定中的多个值</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 student 表中 '95031' 班或性别为 '女' 的所有行</span><span class="token comment" spellcheck="true">-- or: 表示或者关系</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span> <span class="token operator">or</span> sex <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 以 class 降序的方式查询 student 表的所有行</span><span class="token comment" spellcheck="true">-- DESC: 降序，从高到低</span><span class="token comment" spellcheck="true">-- ASC（默认）: 升序，从低到高</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 以 c_no 升序、degree 降序查询 score 表的所有行</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> c_no <span class="token keyword">ASC</span><span class="token punctuation">,</span> degree <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 "95031" 班的学生人数</span><span class="token comment" spellcheck="true">-- COUNT: 统计</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中的最高分的学生学号和课程编号（子查询或排序查询）。</span><span class="token comment" spellcheck="true">-- (SELECT MAX(degree) FROM score): 子查询，算出最高分</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--  排序查询</span><span class="token comment" spellcheck="true">-- LIMIT r, n: 表示从第r行开始，查询n条数据</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> degree <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><h3 id="分组计算平均成绩"><a href="#分组计算平均成绩" class="headerlink" title="分组计算平均成绩"></a>分组计算平均成绩</h3><p><strong>查询每门课的平均成绩。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- AVG: 平均值</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'6-166'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- GROUP BY: 分组查询</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span></code></pre><h3 id="分组条件与模糊查询"><a href="#分组条件与模糊查询" class="headerlink" title="分组条件与模糊查询"></a>分组条件与模糊查询</h3><p><strong>查询 <code>score</code> 表中至少有 2 名学生选修，并以 3 开头的课程的平均分数。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- c_no 课程编号</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>分析表发现，至少有 2 名学生选修的课程是 <code>3-105</code> 、<code>3-245</code> 、<code>6-166</code> ，以 3 开头的课程是 <code>3-105</code> 、<code>3-245</code> 。也就是说，我们要查询所有 <code>3-105</code> 和 <code>3-245</code> 的 <code>degree</code> 平均分。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 首先把 c_no, AVG(degree) 通过分组查询出来</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">85.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81.6667</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token comment" spellcheck="true">-- 再查询出至少有 2 名学生选修的课程</span><span class="token comment" spellcheck="true">-- HAVING: 表示持有</span><span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">-- 并且是以 3 开头的课程</span><span class="token comment" spellcheck="true">-- LIKE 表示模糊查询，"%" 是一个通配符，匹配 "3" 后面的任意字符。</span><span class="token operator">AND</span> c_no <span class="token operator">LIKE</span> <span class="token string">'3%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 把前面的SQL语句拼接起来，</span><span class="token comment" spellcheck="true">-- 后面加上一个 COUNT(*)，表示将每个分组的个数也查询出来。</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span> <span class="token operator">AND</span> c_no <span class="token operator">LIKE</span> <span class="token string">'3%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">85.3333</span> <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span></code></pre><h3 id="多表查询-1"><a href="#多表查询-1" class="headerlink" title="多表查询 - 1"></a>多表查询 - 1</h3><p><strong>查询所有学生的 <code>name</code>，以及该学生在 <code>score</code> 表中对应的 <code>c_no</code> 和 <code>degree</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>通过分析可以发现，只要把 <code>score</code> 表中的 <code>s_no</code> 字段值替换成 <code>student</code> 表中对应的 <code>name</code> 字段值就可以了，如何做呢？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- FROM...: 表示从 student, score 表中查询</span><span class="token comment" spellcheck="true">-- WHERE 的条件表示为，只有在 student.no 和 score.s_no 相等时才显示出来。</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span></code></pre><h3 id="多表查询-2"><a href="#多表查询-2" class="headerlink" title="多表查询 - 2"></a>多表查询 - 2</h3><p><strong>查询所有学生的 <code>no</code> 、课程名称 ( <code>course</code> 表中的 <code>name</code> ) 和成绩 ( <code>score</code> 表中的 <code>degree</code> ) 列。</strong></p><p>只有 <code>score</code> 关联学生的 <code>no</code> ，因此只要查询 <code>score</code> 表，就能找出所有和学生相关的 <code>no</code> 和 <code>degree</code> ：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>然后查询 <code>course</code> 表：</p><pre class=" language-sql"><code class="language-sql"><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span></code></pre><p>只要把 <code>score</code> 表中的 <code>c_no</code> 替换成 <code>course</code> 表中对应的 <code>name</code> 字段值就可以了。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 增加一个查询字段 name，分别从 score、course 这两个表中查询。</span><span class="token comment" spellcheck="true">-- as 表示取一个该字段的别名。</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> name <span class="token keyword">as</span> c_name<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">,</span> course<span class="token keyword">WHERE</span> score<span class="token punctuation">.</span>c_no <span class="token operator">=</span> course<span class="token punctuation">.</span><span class="token keyword">no</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_name          <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span></code></pre><h3 id="三表关联查询"><a href="#三表关联查询" class="headerlink" title="三表关联查询"></a>三表关联查询</h3><p><strong>查询所有学生的 <code>name</code> 、课程名 ( <code>course</code> 表中的 <code>name</code> ) 和 <code>degree</code> 。</strong></p><p>只有 <code>score</code> 表中关联学生的学号和课堂号，我们只要围绕着 <code>score</code> 这张表查询就好了。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>只要把 <code>s_no</code> 和 <code>c_no</code> 替换成 <code>student</code> 和 <code>srouse</code> 表中对应的 <code>name</code> 字段值就好了。</p><p>首先把 <code>s_no</code> 替换成 <code>student</code> 表中的 <code>name</code> 字段：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span></code></pre><p>再把 <code>c_no</code> 替换成 <code>course</code> 表中的 <code>name</code> 字段：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 课程表</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token comment" spellcheck="true">-- 由于字段名存在重复，使用 "表名.字段名 as 别名" 代替。</span><span class="token keyword">SELECT</span> student<span class="token punctuation">.</span>name <span class="token keyword">as</span> s_name<span class="token punctuation">,</span> course<span class="token punctuation">.</span>name <span class="token keyword">as</span> c_name<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score<span class="token punctuation">,</span> course<span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token operator">AND</span> score<span class="token punctuation">.</span>c_no <span class="token operator">=</span> course<span class="token punctuation">.</span><span class="token keyword">no</span><span class="token punctuation">;</span></code></pre><h3 id="子查询加分组求平均分"><a href="#子查询加分组求平均分" class="headerlink" title="子查询加分组求平均分"></a>子查询加分组求平均分</h3><p><strong>查询 <code>95031</code> 班学生每门课程的平均成绩。</strong></p><p>在 <code>score</code> 表中根据 <code>student</code>  表的学生编号筛选出学生的课堂号和成绩：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- IN (..): 将筛选出的学生号当做 s_no 的条件查询</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>这时只要将 <code>c_no</code> 分组一下就能得出 <code>95031</code> 班学生每门课的平均成绩：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">82.0000</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">71.5000</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">80.0000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span></code></pre><h3 id="子查询-1"><a href="#子查询-1" class="headerlink" title="子查询 - 1"></a>子查询 - 1</h3><p><strong>查询在 <code>3-105</code> 课程中，所有成绩高于 <code>109</code> 号同学的记录。</strong></p><p>首先筛选出课堂号为 <code>3-105</code> ，在找出所有成绩高于 <code>109</code> 号同学的的行。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> s_no <span class="token operator">=</span> <span class="token string">'109'</span> <span class="token operator">AND</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="子查询-2"><a href="#子查询-2" class="headerlink" title="子查询 - 2"></a>子查询 - 2</h3><p><strong>查询所有成绩高于 <code>109</code> 号同学的 <code>3-105</code> 课程成绩记录。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 不限制课程号，只要成绩大于109号同学的3-105课程成绩就可以。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> degree <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> s_no <span class="token operator">=</span> <span class="token string">'109'</span> <span class="token operator">AND</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="YEAR-函数与带-IN-关键字查询"><a href="#YEAR-函数与带-IN-关键字查询" class="headerlink" title="YEAR 函数与带 IN 关键字查询"></a>YEAR 函数与带 IN 关键字查询</h3><p><strong>查询所有和 <code>101</code> 、<code>108</code> 号学生同年出生的 <code>no</code> 、<code>name</code> 、<code>birthday</code> 列。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- YEAR(..): 取出日期中的年份</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> birthday <span class="token keyword">FROM</span> student<span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="多层嵌套子查询"><a href="#多层嵌套子查询" class="headerlink" title="多层嵌套子查询"></a>多层嵌套子查询</h3><p><strong>查询 <code>'张旭'</code> 教师任课的学生成绩表。</strong></p><p>首先找到教师编号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span></code></pre><p>通过 <code>sourse</code> 表找到该教师课程号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>通过筛选出的课程号查询成绩表：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">=</span> <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span>     <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><p><strong>查询某选修课程多于5个同学的教师姓名。</strong></p><p>首先在 <code>teacher</code> 表中，根据 <code>no</code> 字段来判断该教师的同一门课程是否有至少5名学员选修：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询 teacher 表</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token operator">|</span> <span class="token number">804</span> <span class="token operator">|</span> 李诚   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">825</span> <span class="token operator">|</span> 王萍   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">831</span> <span class="token operator">|</span> 刘冰   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">856</span> <span class="token operator">|</span> 张旭   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">-- 在这里找到对应的条件</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>查看和教师编号有有关的表的信息：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- t_no: 教师编号</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span> <span class="token number">825</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span> <span class="token number">804</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span> <span class="token number">856</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span> <span class="token number">831</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span></code></pre><p>我们已经找到和教师编号有关的字段就在 <code>course</code> 表中，但是还无法知道哪门课程至少有5名学生选修，所以还需要根据 <code>score</code> 表来查询：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 在此之前向 score 插入一些数据，以便丰富查询条件。</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'101'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'90'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'102'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'91'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'104'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'89'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token comment" spellcheck="true">-- 在 score 表中将 c_no 作为分组，并且限制 c_no 持有至少 5 条数据。</span><span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span></code></pre><p>根据筛选出来的课程号，找出在某课程中，拥有至少5名学员的教师编号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span><span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span><span class="token operator">|</span> <span class="token number">825</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span></code></pre><p>在 <code>teacher</code> 表中，根据筛选出来的教师编号找到教师姓名：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">-- 最终条件</span>    <span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="子查询-3"><a href="#子查询-3" class="headerlink" title="子查询 - 3"></a>子查询 - 3</h3><p><strong>查询 “计算机系” 课程的成绩表。</strong></p><p>思路是，先找出 <code>course</code> 表中所有 <code>计算机系</code> 课程的编号，然后根据这个编号查询 <code>score</code> 表。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 通过 teacher 表查询所有 `计算机系` 的教师编号</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> department <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name   <span class="token operator">|</span> department   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token operator">|</span> <span class="token number">804</span> <span class="token operator">|</span> 李诚   <span class="token operator">|</span> 计算机系     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">825</span> <span class="token operator">|</span> 王萍   <span class="token operator">|</span> 计算机系     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token comment" spellcheck="true">-- 通过 course 表查询该教师的课程编号</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token comment" spellcheck="true">-- 根据筛选出来的课程号查询成绩表</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">IN</span> <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="UNION-和-NOTIN-的使用"><a href="#UNION-和-NOTIN-的使用" class="headerlink" title="UNION 和 NOTIN 的使用"></a>UNION 和 NOTIN 的使用</h3><p><strong>查询 <code>计算机系</code> 与 <code>电子工程系</code> 中的不同职称的教师。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- NOT: 代表逻辑非</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span> <span class="token operator">AND</span> profession <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> profession <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">-- 合并两个集</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'电子工程系'</span> <span class="token operator">AND</span> profession <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> profession <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="ANY-表示至少一个-DESC-降序"><a href="#ANY-表示至少一个-DESC-降序" class="headerlink" title="ANY 表示至少一个 - DESC ( 降序 )"></a>ANY 表示至少一个 - DESC ( 降序 )</h3><p><strong>查询课程 <code>3-105</code> 且成绩 <u>至少</u> 高于 <code>3-245</code> 的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token comment" spellcheck="true">-- ANY: 符合SQL语句中的任意条件。</span><span class="token comment" spellcheck="true">-- 也就是说，在 3-105 成绩中，只要有一个大于从 3-245 筛选出来的任意行就符合条件，</span><span class="token comment" spellcheck="true">-- 最后根据降序查询结果。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span> <span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token keyword">ANY</span><span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">)</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> degree <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="表示所有的-ALL"><a href="#表示所有的-ALL" class="headerlink" title="表示所有的 ALL"></a>表示所有的 ALL</h3><p><strong>查询课程 <code>3-105</code> 且成绩高于 <code>3-245</code> 的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 只需对上一道题稍作修改。</span><span class="token comment" spellcheck="true">-- ALL: 符合SQL语句中的所有条件。</span><span class="token comment" spellcheck="true">-- 也就是说，在 3-105 每一行成绩中，都要大于从 3-245 筛选出来全部行才算符合条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span> <span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token keyword">ALL</span><span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="复制表的数据作为条件查询"><a href="#复制表的数据作为条件查询" class="headerlink" title="复制表的数据作为条件查询"></a>复制表的数据作为条件查询</h3><p><strong>查询某课程成绩比该课程平均成绩低的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询平均分</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">87.6667</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81.6667</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token comment" spellcheck="true">-- 查询 score 表</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token comment" spellcheck="true">-- 将表 b 作用于表 a 中查询数据</span><span class="token comment" spellcheck="true">-- score a (b): 将表声明为 a (b)，</span><span class="token comment" spellcheck="true">-- 如此就能用 a.c_no = b.c_no 作为条件执行查询了。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token number">a</span> <span class="token keyword">WHERE</span> degree <span class="token operator">&lt;</span> <span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token number">b</span> <span class="token keyword">WHERE</span> <span class="token number">a</span><span class="token punctuation">.</span>c_no <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>c_no<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="子查询-4"><a href="#子查询-4" class="headerlink" title="子查询 - 4"></a>子查询 - 4</h3><p><strong>查询所有任课 ( 在 <code>course</code> 表里有课程 ) 教师的 <code>name</code> 和 <code>department</code></strong> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> department <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span><span class="token operator">|</span> name   <span class="token operator">|</span> department      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span><span class="token operator">|</span> 李诚   <span class="token operator">|</span> 计算机系        <span class="token operator">|</span><span class="token operator">|</span> 王萍   <span class="token operator">|</span> 计算机系        <span class="token operator">|</span><span class="token operator">|</span> 刘冰   <span class="token operator">|</span> 电子工程系      <span class="token operator">|</span><span class="token operator">|</span> 张旭   <span class="token operator">|</span> 电子工程系      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span></code></pre><h3 id="条件加组筛选"><a href="#条件加组筛选" class="headerlink" title="条件加组筛选"></a>条件加组筛选</h3><p><strong>查询 <code>student</code> 表中至少有 2 名男生的 <code>class</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查看学生表信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">23</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token comment" spellcheck="true">-- 只查询性别为男，然后按 class 分组，并限制 class 行大于 1。</span><span class="token keyword">SELECT</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span></code></pre><h3 id="NOTLIKE-模糊查询取反"><a href="#NOTLIKE-模糊查询取反" class="headerlink" title="NOTLIKE 模糊查询取反"></a>NOTLIKE 模糊查询取反</h3><p><strong>查询 <code>student</code> 表中不姓 “王” 的同学记录。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- NOT: 取反</span><span class="token comment" spellcheck="true">-- LIKE: 模糊查询</span>mysql<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'王%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span></code></pre><h3 id="YEAR-与-NOW-函数"><a href="#YEAR-与-NOW-函数" class="headerlink" title="YEAR 与 NOW 函数"></a>YEAR 与 NOW 函数</h3><p><strong>查询 <code>student</code> 表中每个学生的姓名和年龄。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用函数 YEAR(NOW()) 计算出当前年份，减去出生年份后得出年龄。</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> YEAR<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">as</span> age <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> age  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span>   <span class="token number">42</span> <span class="token operator">|</span><span class="token operator">|</span> 匡明      <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 陆军      <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 张全蛋    <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">|</span> 张飞      <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span></code></pre><h3 id="MAX-与-MIN-函数"><a href="#MAX-与-MIN-函数" class="headerlink" title="MAX 与 MIN 函数"></a>MAX 与 MIN 函数</h3><p><strong>查询 <code>student</code> 表中最大和最小的 <code>birthday</code> 值。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span><span class="token operator">|</span> <span class="token function">MAX</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">MIN</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span><span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>    <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span>    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span></code></pre><h3 id="多段排序"><a href="#多段排序" class="headerlink" title="多段排序"></a>多段排序</h3><p><strong>以 <code>class</code> 和 <code>birthday</code> 从大到小的顺序查询 <code>student</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">DESC</span><span class="token punctuation">,</span> birthday<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">23</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span></code></pre><h3 id="子查询-5"><a href="#子查询-5" class="headerlink" title="子查询 - 5"></a>子查询 - 5</h3><p><strong>查询 “男” 教师及其所上的课程。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name         <span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统     <span class="token operator">|</span> <span class="token number">804</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路     <span class="token operator">|</span> <span class="token number">856</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span></code></pre><h3 id="MAX-函数与子查询"><a href="#MAX-函数与子查询" class="headerlink" title="MAX 函数与子查询"></a>MAX 函数与子查询</h3><p><strong>查询最高分同学的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 找出最高成绩（该查询只能有一个结果）</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 根据上面的条件筛选出所有最高成绩表，</span><span class="token comment" spellcheck="true">-- 该查询可能有多个结果，假设 degree 值多次符合条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="子查询-6"><a href="#子查询-6" class="headerlink" title="子查询 - 6"></a>子查询 - 6</h3><p><strong>查询和 “李军” 同性别的所有同学 <code>name</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 首先将李军的性别作为条件取出来</span><span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token operator">|</span> sex <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token comment" spellcheck="true">-- 根据性别查询 name 和 sex</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span><span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span></code></pre><h3 id="子查询-7"><a href="#子查询-7" class="headerlink" title="子查询 - 7"></a>子查询 - 7</h3><p><strong>查询和 “李军” 同性别且同班的同学 <code>name</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span> <span class="token operator">AND</span> class <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span></code></pre><h3 id="子查询-8"><a href="#子查询-8" class="headerlink" title="子查询 - 8"></a>子查询 - 8</h3><p><strong>查询所有选修 “计算机导论” 课程的 “男” 同学成绩表。</strong></p><p>需要的 “计算机导论” 和性别为 “男” 的编号可以在 <code>course</code> 和 <code>student</code> 表中找到。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'计算机导论'</span><span class="token punctuation">)</span> <span class="token operator">AND</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="按等级查询"><a href="#按等级查询" class="headerlink" title="按等级查询"></a>按等级查询</h3><p>建立一个 <code>grade</code> 表代表学生的成绩等级，并插入数据：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> grade <span class="token punctuation">(</span>    low <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    upp <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    grade char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> grade<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span><span class="token operator">|</span> low  <span class="token operator">|</span> upp  <span class="token operator">|</span> grade <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span><span class="token operator">|</span>   <span class="token number">90</span> <span class="token operator">|</span>  <span class="token number">100</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">80</span> <span class="token operator">|</span>   <span class="token number">89</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">70</span> <span class="token operator">|</span>   <span class="token number">79</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">60</span> <span class="token operator">|</span>   <span class="token number">69</span> <span class="token operator">|</span> D     <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>   <span class="token number">59</span> <span class="token operator">|</span> E     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span></code></pre><p><strong>查询所有学生的 <code>s_no</code> 、<code>c_no</code> 和 <code>grade</code> 列。</strong></p><p>思路是，使用区间 ( <code>BETWEEN</code> ) 查询，判断学生的成绩 ( <code>degree</code> )  在 <code>grade</code> 表的 <code>low</code> 和 <code>upp</code> 之间。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> grade <span class="token keyword">FROM</span> score<span class="token punctuation">,</span> grade <span class="token keyword">WHERE</span> degree <span class="token operator">BETWEEN</span> low <span class="token operator">AND</span> upp<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> grade <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> D     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span></code></pre><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p>准备用于测试连接查询的数据：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> testJoin<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    cardId <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> card <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> card <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'饭卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'建行卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'农行卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'工商卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'邮政卡'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> card<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span></code></pre><p>分析两张表发现，<code>person</code> 表并没有为 <code>cardId</code> 字段设置一个在 <code>card</code> 表中对应的 <code>id</code> 外键。如果设置了的话，<code>person</code> 中 <code>cardId</code> 字段值为 <code>6</code> 的行就插不进去，因为该 <code>cardId</code> 值在 <code>card</code> 表中并没有。</p><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p>要查询这两张表中有关系的数据，可以使用 <code>INNER JOIN</code> ( 内连接 ) 将它们连接在一起。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- INNER JOIN: 表示为内连接，将两张表拼接在一起。</span><span class="token comment" spellcheck="true">-- on: 表示要执行某个条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token comment" spellcheck="true">-- 将 INNER 关键字省略掉，结果也是一样的。</span><span class="token comment" spellcheck="true">-- SELECT * FROM person JOIN card on person.cardId = card.id;</span></code></pre><blockquote><p>注意：<code>card</code> 的整张表被连接到了右边。</p></blockquote><h4 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h4><p>完整显示左边的表 ( <code>person</code> ) ，右边的表如果符合条件就显示，不符合则补 <code>NULL</code> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- LEFT JOIN 也叫做 LEFT OUTER JOIN，用这两种方式的查询结果是一样的。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h4 id="右外链接"><a href="#右外链接" class="headerlink" title="右外链接"></a>右外链接</h4><p>完整显示右边的表 ( <code>card</code> ) ，左边的表如果符合条件就显示，不符合则补 <code>NULL</code> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h4 id="全外链接"><a href="#全外链接" class="headerlink" title="全外链接"></a>全外链接</h4><p>完整显示两张表的全部数据。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- MySQL 不支持这种语法的全外连接</span><span class="token comment" spellcheck="true">-- SELECT * FROM person FULL JOIN card on person.cardId = card.id;</span><span class="token comment" spellcheck="true">-- 出现错误：</span><span class="token comment" spellcheck="true">-- ERROR 1054 (42S22): Unknown column 'person.cardId' in 'on clause'</span><span class="token comment" spellcheck="true">-- MySQL全连接语法，使用 UNION 将两张表合并在一起。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>在 MySQL 中，事务其实是一个最小的不可分割的工作单元。事务能够<strong>保证一个业务的完整性</strong>。</p><p>比如我们的银行转账：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- a -> -100</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- b -> +100</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span></code></pre><p>在实际项目中，假设只有一条 SQL 语句执行成功，而另外一条执行失败了，就会出现数据前后不一致。</p><p>因此，在执行多条有关联 SQL 语句时，<strong>事务</strong>可能会要求这些 SQL 语句要么同时执行成功，要么就都执行失败。</p><h3 id="如何控制事务-COMMIT-ROLLBACK"><a href="#如何控制事务-COMMIT-ROLLBACK" class="headerlink" title="如何控制事务 - COMMIT / ROLLBACK"></a>如何控制事务 - COMMIT / ROLLBACK</h3><p>在 MySQL 中，事务的<strong>自动提交</strong>状态默认是开启的。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询事务的自动提交状态</span><span class="token keyword">SELECT</span> @<span class="token variable">@AUTOCOMMIT</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span> @<span class="token variable">@AUTOCOMMIT</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span></code></pre><p><strong>自动提交的作用</strong>：当我们执行一条 SQL 语句的时候，其产生的效果就会立即体现出来，且不能<strong>回滚</strong>。</p><p>什么是回滚？举个例子：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> bank<span class="token punctuation">;</span><span class="token keyword">USE</span> bank<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    money <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>可以看到，在执行插入语句后数据立刻生效，原因是 MySQL 中的事务自动将它<strong>提交</strong>到了数据库中。那么所谓<strong>回滚</strong>的意思就是，撤销执行过的所有 SQL 语句，使其回滚到<strong>最后一次提交</strong>数据时的状态。</p><p>在 MySQL 中使用 <code>ROLLBACK</code> 执行回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 回滚到最后一次提交</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>由于所有执行过的 SQL 语句都已经被提交过了，所以数据并没有发生回滚。那如何让数据可以发生回滚？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 关闭自动提交</span><span class="token keyword">SET</span> AUTOCOMMIT <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询自动提交状态</span><span class="token keyword">SELECT</span> @<span class="token variable">@AUTOCOMMIT</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span> @<span class="token variable">@AUTOCOMMIT</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span></code></pre><p>将自动提交关闭后，测试数据回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 关闭 AUTOCOMMIT 后，数据的变化是在一张虚拟的临时数据表中展示，</span><span class="token comment" spellcheck="true">-- 发生变化的数据并没有真正插入到数据表中。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 数据表中的真实数据其实还是：</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 由于数据还没有真正提交，可以使用回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 再次查询</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>那如何将虚拟的数据真正提交到数据库中？使用 <code>COMMIT</code> : </p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 手动提交数据（持久性），</span><span class="token comment" spellcheck="true">-- 将数据真正提交到数据库中，执行后不能再回滚提交过的数据。</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 提交后测试回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 再次查询（回滚无效了）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><blockquote><p><strong>总结</strong></p><ol><li><p><strong>自动提交</strong></p><ul><li><p>查看自动提交状态：<code>SELECT @@AUTOCOMMIT</code> ；</p></li><li><p>设置自动提交状态：<code>SET AUTOCOMMIT = 0</code> 。</p></li></ul></li><li><p><strong>手动提交</strong></p><p><code>@@AUTOCOMMIT = 0</code> 时，使用 <code>COMMIT</code> 命令提交事务。</p></li><li><p><strong>事务回滚</strong></p><p><code>@@AUTOCOMMIT = 0</code> 时，使用 <code>ROLLBACK</code> 命令回滚事务。</p></li></ol></blockquote><p><strong>事务的实际应用</strong>，让我们再回到银行转账项目：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 转账</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 到账</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>这时假设在转账时发生了意外，就可以使用 <code>ROLLBACK</code> 回滚到最后一次提交的状态：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 假设转账发生了意外，需要回滚。</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>这时我们又回到了发生意外之前的状态，也就是说，事务给我们提供了一个可以反悔的机会。假设数据没有发生意外，这时可以手动将数据真正提交到数据表中：<code>COMMIT</code> 。</p><h3 id="手动开启事务-BEGIN-START-TRANSACTION"><a href="#手动开启事务-BEGIN-START-TRANSACTION" class="headerlink" title="手动开启事务 - BEGIN / START TRANSACTION"></a>手动开启事务 - BEGIN / START TRANSACTION</h3><p>事务的默认提交被开启 ( <code>@@AUTOCOMMIT = 1</code> ) 后，此时就不能使用事务回滚了。但是我们还可以手动开启一个事务处理事件，使其可以发生回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用 BEGIN 或者 START TRANSACTION 手动开启一个事务</span><span class="token comment" spellcheck="true">-- START TRANSACTION;</span><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 由于手动开启的事务没有开启自动提交，</span><span class="token comment" spellcheck="true">-- 此时发生变化的数据仍然是被保存在一张临时表中。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 测试回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>仍然使用 <code>COMMIT</code> 提交数据，提交后无法再发生本次事务的回滚。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 提交数据</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 测试回滚（无效，因为表的数据已经被提交）</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></code></pre><h3 id="事务的-ACID-特征与使用"><a href="#事务的-ACID-特征与使用" class="headerlink" title="事务的 ACID 特征与使用"></a>事务的 ACID 特征与使用</h3><p><strong>事务的四大特征：</strong></p><ul><li><strong>A 原子性</strong>：事务是最小的单位，不可以再分割；</li><li><strong>C 一致性</strong>：要求同一事务中的 SQL 语句，必须保证同时成功或者失败；</li><li><strong>I 隔离性</strong>：事务1 和 事务2 之间是具有隔离性的；</li><li><strong>D 持久性</strong>：事务一旦结束 ( <code>COMMIT</code> ) ，就不可以再返回了 ( <code>ROLLBACK</code> ) 。</li></ul><h3 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h3><p><strong>事务的隔离性可分为四种 ( 性能从低到高 )</strong> ：</p><ol><li><p><strong>READ UNCOMMITTED ( 读取未提交 )</strong></p><p>如果有多个事务，那么任意事务都可以看见其他事务的<strong>未提交数据</strong>。</p></li><li><p><strong>READ COMMITTED ( 读取已提交 )</strong></p><p>只能读取到其他事务<strong>已经提交的数据</strong>。</p></li><li><p><strong>REPEATABLE READ ( 可被重复读 )</strong></p><p>如果有多个连接都开启了事务，那么事务之间不能共享数据记录，否则只能共享已提交的记录。</p></li><li><p><strong>SERIALIZABLE ( 串行化 )</strong></p><p>所有的事务都会按照<strong>固定顺序执行</strong>，执行完一个事务后再继续执行下一个事务的<strong>写入操作</strong>。</p></li></ol><p>查看当前数据库的默认隔离级别：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- MySQL 8.x, GLOBAL 表示系统级别，不加表示会话级别。</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">REPEATABLE</span><span class="token operator">-</span><span class="token keyword">READ</span>                <span class="token operator">|</span> <span class="token comment" spellcheck="true">-- MySQL的默认隔离级别，可以重复读。</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token comment" spellcheck="true">-- MySQL 5.x</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TX_ISOLATION</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@TX_ISOLATION</span><span class="token punctuation">;</span></code></pre><p>修改隔离级别：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 设置系统隔离级别，LEVEL 后面表示要设置的隔离级别 (READ UNCOMMITTED)。</span><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询系统隔离级别，发现已经被修改。</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">READ</span><span class="token operator">-</span><span class="token keyword">UNCOMMITTED</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><p>测试 <strong>READ UNCOMMITTED ( 读取未提交 )</strong> 的隔离性：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'小明'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'淘宝店'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 开启一个事务操作数据</span><span class="token comment" spellcheck="true">-- 假设小明在淘宝店买了一双800块钱的鞋子：</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'淘宝店'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 然后淘宝店在另一方查询结果，发现钱已到账。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>由于小明的转账是在新开启的事务上进行操作的，而该操作的结果是可以被其他事务（另一方的淘宝店）看见的，因此淘宝店的查询结果是正确的，淘宝店确认到账。但就在这时，如果小明在它所处的事务上又执行了 <code>ROLLBACK</code> 命令，会发生什么？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小明所处的事务</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 此时无论对方是谁，如果再去查询结果就会发现：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>这就是所谓的<strong>脏读</strong>，一个事务读取到另外一个事务还未提交的数据。这在实际开发中是不允许出现的。</p><h4 id="读取已提交"><a href="#读取已提交" class="headerlink" title="读取已提交"></a>读取已提交</h4><p>把隔离级别设置为 <strong>READ COMMITTED</strong> ：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">READ</span><span class="token operator">-</span><span class="token keyword">COMMITTED</span>                 <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>这样，再有新的事务连接进来时，它们就只能查询到已经提交过的事务数据了。但是对于当前事务来说，它们看到的还是未提交的数据，例如：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 正在操作数据事务（当前事务）</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'淘宝店'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 虽然隔离级别被设置为了 READ COMMITTED，但在当前事务中，</span><span class="token comment" spellcheck="true">-- 它看到的仍然是数据表中临时改变数据，而不是真正提交过的数据。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 假设此时在远程开启了一个新事务，连接到数据库。</span>$ mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p12345612<span class="token comment" spellcheck="true">-- 此时远程连接查询到的数据只能是已经提交过的</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>但是这样还有问题，那就是假设一个事务在操作数据时，其他事务干扰了这个事务的数据。例如：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张在查询数据的时候发现：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 在小张求表的 money 平均值之前，小王做了一个操作：</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 此时表的真实数据是：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 这时小张再求平均值的时候，就会出现计算不相符合的情况：</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span><span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span><span class="token operator">|</span>  <span class="token number">820.0000</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span></code></pre><p>虽然 <strong>READ COMMITTED</strong> 让我们只能读取到其他事务已经提交的数据，但还是会出现问题，就是<strong>在读取同一个表的数据时，可能会发生前后不一致的情况。</strong>这被称为<strong>不可重复读现象 ( READ COMMITTED )</strong> 。</p><h4 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h4><p>将隔离级别设置为 <strong>REPEATABLE READ ( 可被重复读取 )</strong> :</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">REPEATABLE</span><span class="token operator">-</span><span class="token keyword">READ</span>                <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>测试 <strong>REPEATABLE READ</strong> ，假设在两个不同的连接上分别执行 <code>START TRANSACTION</code> :</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小王 - 北京</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></code></pre><p>当前事务开启后，没提交之前，查询不到，提交后可以被查询到。但是，在提交之前其他事务被开启了，那么在这条事务线上，就不会查询到当前有操作事务的连接。相当于开辟出一条单独的线程。</p><p>无论小张是否执行过 <code>COMMIT</code> ，在小王这边，都不会查询到小张的事务记录，而是只会查询到自己所处事务的记录：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>这是<strong>因为小王在此之前开启了一个新的事务 ( <code>START TRANSACTION</code> ) **，那么</strong>在他的这条新事务的线上，跟其他事务是没有联系的**，也就是说，此时如果其他事务正在操作数据，它是不知道的。</p><p>然而事实是，在真实的数据表中，小张已经插入了一条数据。但是小王此时并不知道，也插入了同一条数据，会发生什么呢？</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ERROR 1062 (23000): Duplicate entry '6' for key 'PRIMARY'</span></code></pre><p>报错了，操作被告知已存在主键为 <code>6</code> 的字段。这种现象也被称为<strong>幻读，一个事务提交的数据，不能被其他事务读取到</strong>。</p><h4 id="串行化"><a href="#串行化" class="headerlink" title="串行化"></a>串行化</h4><p>顾名思义，就是所有事务的<strong>写入操作</strong>全都是串行化的。什么意思？把隔离级别修改成 <strong>SERIALIZABLE</strong> :</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">SERIALIZABLE</span>                   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>还是拿小张和小王来举例：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小王 - 北京</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 开启事务之前先查询表，准备操作数据。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> <span class="token number">d</span>         <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 发现没有 7 号王小花，于是插入一条数据：</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'王小花'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时会发生什么呢？由于现在的隔离级别是 <strong>SERIALIZABLE ( 串行化 )</strong> ，串行化的意思就是：假设把所有的事务都放在一个串行的队列中，那么所有的事务都会按照<strong>固定顺序执行</strong>，执行完一个事务后再继续执行下一个事务的<strong>写入操作</strong> ( <strong>这意味着队列中同时只能执行一个事务的写入操作</strong> ) 。</p><p>根据这个解释，小王在插入数据时，会出现等待状态，直到小张执行 <code>COMMIT</code> 结束它所处的事务，或者出现等待超时。</p><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 编程基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（一）：二维数组中的查找</title>
      <link href="/post/43262.html"/>
      <url>/post/43262.html</url>
      
        <content type="html"><![CDATA[<h2 id="二维数组中的查找"><a href="#二维数组中的查找" class="headerlink" title="二维数组中的查找:"></a>二维数组中的查找:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;tqId=11154&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。<br></p><blockquote><p>Consider the following matrix:<br>[<br>  [1,   4,  7, 11, 15],<br>  [2,   5,  8, 12, 19],<br>  [3,   6,  9, 16, 22],<br>  [10, 13, 14, 17, 24],<br>  [18, 21, 23, 26, 30]<br>]</p></blockquote><p>Given target = <code>5</code>, return <code>true</code>。<br>Given target = <code>20</code>, return <code>false</code>。<br></p><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>利用该二维数组的性质：</p><p><strong><font size="3">•</font></strong><font size="3"> 每一行都按照从左到右递增的顺序排序，<br><strong><font size="3">•</font></strong><font size="3"> 每一列都按照从上到下递增的顺序排序<br>    该二维数组中的一个数，小于它的数一定在其左边，大于它的数一定在其下边。因此，从右上角开始查找，就可以根据 target 和当前元素的大小关系来缩小查找区间，当前元素的查找区间为左下角的所有元素。<br><br><strong><font size="3">•</font></strong><font size="3"> 当 m &lt; target，由于 m 已经是该行最大的元素，想要更大只有从列考虑，取值右移一位<br><strong><font size="3">•</font></strong><font size="3"> 当 m &gt; target，由于 m 已经是该列最小的元素，想要更小只有从行考虑，取值上移一位<br><strong><font size="3">•</font></strong><font size="3"> 当 m = target，找到该值，返回 true<br>用某行最小或某列最大与 target 比较，每次可剔除一整行或一整列。<br></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://aaa.zhazhapeng.cn/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200322183416116.gif" width="50%"> <br></center><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(行高+列宽)</strong><br>空间复杂度：<strong><em>O</em>(1)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> value <span class="token operator">=</span> target<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>                i<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer汇总</title>
      <link href="/post/35137.html"/>
      <url>/post/35137.html</url>
      
        <content type="html"><![CDATA[<h1 id="渣渣鹏的学习记录"><a href="#渣渣鹏的学习记录" class="headerlink" title="渣渣鹏的学习记录"></a>渣渣鹏的学习记录</h1><h1 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h1><p>本系列为渣渣鹏的《剑指Offer》学习笔记。<br>刷题平台：<a href="//www.nowcoder.com/ta/coding-interviews" target="_blank" rel="noopener">牛客网</a><br>使用语言：Java<br>GitHub笔记地址：</p><p>    开始刷题的时间太晚了，草草的结束了第一遍学习，把67道题过了一遍，使用的是java语言进行答题，接下来是Leetcode的学习以及后端学习之路。更新ing~</p><h1 id="2、题目总结"><a href="#2、题目总结" class="headerlink" title="2、题目总结"></a>2、题目总结</h1><p>对总共67道题目进行了分类整理，整理如下：</p><h2 id="数组（13道）："><a href="#数组（13道）：" class="headerlink" title="数组（13道）："></a>数组（13道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/43262.html">剑指Offer（一）：二维数组中的查找</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/27960.html">剑指Offer（六）：旋转数组的最小数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/45411.html">剑指Offer（十三）：调整数组顺序使奇数位于偶数前面</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/54653.html">剑指Offer（十九）：顺时针打印矩阵</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/38907.html">剑指Offer（二十八）：数组中出现次数超过一半的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/37315.html">剑指Offer（三十）：连续子数组的最大和（dp）</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/56735.html">剑指Offer（三十二）：把数组排成最小的数</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/35899.html">剑指Offer（三十五）：数组中的逆序对</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/12141.html">剑指Offer（三十七）：数字在排序数组中出现的次数</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/46036.html">剑指Offer（四十）：数组中只出现一次的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/64951.html">剑指Offer（五十）：数组中重复的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/30059.html">剑指Offer（五十一）：构建乘积数组</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/64066.html">剑指Offer（六十四）：滑动窗口的最大值</a></font></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="字符串（9道）："><a href="#字符串（9道）：" class="headerlink" title="字符串（9道）："></a>字符串（9道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer(二)：替换空格<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十七）：字符串的排列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十四）：第一个只出现一次的字符<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十三）：左旋转字符串<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十四）：翻转单词顺序序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十九）：把字符串转换成整数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十二）：正则表达式匹配<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十三）：表示数值的字符串<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十四）：字符流中第一个不重复的字符</font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="链表（8道）："><a href="#链表（8道）：" class="headerlink" title="链表（8道）："></a>链表（8道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三）：从尾到头打印链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十四）：链表中倒数第k个结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十五）：反转链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十六）：合并两个排序的链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十五）：复杂链表的复制<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十六）：两个链表的第一个公共结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十五）：链表中环的入口结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十六）：删除链表中重复的结点</font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="二叉树（15道）："><a href="#二叉树（15道）：" class="headerlink" title="二叉树（15道）："></a>二叉树（15道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四）：重建二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十七）：树的子结构<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十八）：二叉树的镜像<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十二）：从上往下打印二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十三）：二叉搜索树的后序遍历序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十四）：二叉树中和为某一值的路径<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十六）：二叉搜索树与双向链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十八）：二叉树的深度<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十九）：平衡二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十七）：二叉树的下一个结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十八）：对称的二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十九）：按之字顺序打印二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十）：把二叉树打印成多行<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十一）：序列化二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十二）：二叉搜索树的第k个结点</font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="栈（3道）："><a href="#栈（3道）：" class="headerlink" title="栈（3道）："></a>栈（3道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五）：用两个栈实现队列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十）：包含min函数的栈<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十一）：栈的压入、弹出序列</font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="回溯法（2道）："><a href="#回溯法（2道）：" class="headerlink" title="回溯法（2道）："></a>回溯法（2道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十五）：矩阵中的路径<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十六）：机器人的运动范围</font></font></p><font size="3"><font size="3"><h2 id="递归、动态规划（5道）："><a href="#递归、动态规划（5道）：" class="headerlink" title="递归、动态规划（5道）："></a>递归、动态规划（5道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（七）：裴波那契数列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（八）：跳台阶<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（九）：变态跳台阶<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十）：矩形覆盖<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十七）：剪绳子</font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="位运算（1道）："><a href="#位运算（1道）：" class="headerlink" title="位运算（1道）："></a>位运算（1道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十一）：二进制中1的个数</font></p><font size="3"><h2 id="其他（11道）："><a href="#其他（11道）：" class="headerlink" title="其他（11道）："></a>其他（11道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十二）：数值的整数次方<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十九）：最小的K个数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十一）：整数中1出现的次数（从1到n整数中1出现的次数）<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十三）：丑数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十一）：和为S的连续正数序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十二）：和为S的两个数字<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十五）：扑克牌顺子<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十六）：孩子们的游戏（圆圈中最后剩下的数）<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十七）：求1+2+3+…+n<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十八）：不用加减乘除的加法<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十三）：数据流中的中位数<br><br><br><font size="5"><strong>Peace!</strong></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><font size="5"></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
            <tag> 数组 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
