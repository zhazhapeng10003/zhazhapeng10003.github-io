<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>剑指Offer（六）：旋转数组的最小数字</title>
      <link href="/post/27960.html"/>
      <url>/post/27960.html</url>
      
        <content type="html"><![CDATA[<h2 id="旋转数组的最小数字"><a href="#旋转数组的最小数字" class="headerlink" title="旋转数组的最小数字:"></a>旋转数组的最小数字:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="//www.nowcoder.com/practice/9f3231a991af4f55b95579b44b7a01ba?tpId=13&amp;tqId=11159&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。<br>NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。<br><br><strong><font face="黑体">示例 1：</font></strong></p><font face="黑体"><blockquote><p><strong>输入:</strong> [1,3,5]<br><strong>输出:</strong> 1</p></blockquote><p><strong><font face="黑体">示例 2：</font></strong></p><font face="黑体"><blockquote><p><strong>输入:</strong> [2,2,2,0,1]<br><strong>输出:</strong> 1</p></blockquote><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>将旋转数组对半分可以得到一个包含最小元素的新旋转数组，以及一个非递减排序的数组。新的旋转数组的数组元素是原数组的一半，从而将问题规模减少了一半，这种折半性质的算法的时间复杂度<strong><em>O</em>(logN)</strong>。</p><p><strong>•</strong> 取数组 arr 的<strong>left、right、mid =（left + right）/ 2</strong>；<br><strong>•</strong> 情况1：如果arr[left] &lt; arr[right]，说明该旋转数组是有序数组，最小值即为arr[left]；<br><strong>•</strong> 情况2：array[left] &lt; array[mid]，说明左半部分是有序的，我们应该在右半部分找最小值，令==left = mid + 1==；<br><strong>•</strong> 情况3：array[right] &gt; array[mid]，说明右半部分是有序的，为防止漏掉最小值，==right = mid== 而不是 right = mid-1；<br><strong>•</strong> 情况4：其他特殊情况不满足条件，如arr[left] = arr[right]，array[left] =array[mid]，不好判断，==left++==，向右缩小范围继续判断。</p><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(logN)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">minNumberInRotateArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> right <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>left <span class="token operator">+</span> right<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//说明数组是有序数组</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">return</span> array<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//左半部分是有序的，其最小值肯定在右半部分</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">&lt;</span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//右半部分是有序的，为防止漏掉最小值，right = mid 而不是 right = mid-1</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">></span> array<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                right <span class="token operator">=</span> mid<span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//向右缩小范围继续判断</span>            <span class="token keyword">else</span> left<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> array<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习笔记</title>
      <link href="/post/39805.html"/>
      <url>/post/39805.html</url>
      
        <content type="html"><![CDATA[<font color="#00000"><h1 id="MySQL学习笔记"><a href="#MySQL学习笔记" class="headerlink" title="MySQL学习笔记"></a>MySQL学习笔记</h1><p><font color="red"><a href="//github.com/hjzCy/sql_node/blob/master/mysql/MySQL%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.md" target="_blank" rel="noopener">原文链接</a></font></p><font color="red"><h2 id="登录和退出MySQL服务器"><a href="#登录和退出MySQL服务器" class="headerlink" title="登录和退出MySQL服务器"></a><font color="#00000">登录和退出MySQL服务器</font></h2><pre class=" language-shell"><code class="language-shell"># 登录MySQL$ mysql -u root -proot# 退出MySQL数据库服务器exit;</code></pre><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a><font color="#00000">基本语法</font></h2><pre><font color="#00000"><code class="sql">-- 显示所有数据库show databases;-- 创建数据库CREATE DATABASE test;-- 切换数据库use test;-- 显示数据库中的所有表show tables;-- 创建数据表CREATE TABLE pet (    name VARCHAR(20),    owner VARCHAR(20),    species VARCHAR(20),    sex CHAR(1),    birth DATE,    death DATE);-- 查看数据表结构-- describe pet;desc pet;-- 查询表SELECT * from pet;-- 插入数据INSERT INTO pet VALUES ('puffball', 'Diane', 'hamster', 'f', '1990-03-30', NULL);-- 修改数据UPDATE pet SET name = 'squirrel' where owner = 'Diane';-- 删除数据DELETE FROM pet where name = 'squirrel';-- 删除表DROP TABLE myorder;</code></font></pre><font color="#00000"><h2 id="建表约束"><a href="#建表约束" class="headerlink" title="建表约束"></a>建表约束</h2><h3 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 主键约束</span><span class="token comment" spellcheck="true">-- 使某个字段不重复且不得为空，确保表内所有数据的唯一性。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 联合主键</span><span class="token comment" spellcheck="true">-- 联合主键中的每个字段都不能为空，并且加起来不能和已设置的联合主键重复。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    password <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 自增约束</span><span class="token comment" spellcheck="true">-- 自增约束的主键由系统自动递增分配。</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加主键约束</span><span class="token comment" spellcheck="true">-- 如果忘记设置主键，还可以通过SQL语句设置（两种方式）：</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">ADD</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除主键</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">drop</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">;</span></code></pre><h3 id="唯一主键"><a href="#唯一主键" class="headerlink" title="唯一主键"></a>唯一主键</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时创建唯一主键</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加唯一主键</span><span class="token comment" spellcheck="true">-- 如果建表时没有设置唯一建，还可以通过SQL语句设置（两种方式）：</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">ADD</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 删除唯一主键</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> name<span class="token punctuation">;</span></code></pre><h3 id="非空约束"><a href="#非空约束" class="headerlink" title="非空约束"></a>非空约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时添加非空约束</span><span class="token comment" spellcheck="true">-- 约束某个字段不能为空</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 移除非空约束</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="默认约束"><a href="#默认约束" class="headerlink" title="默认约束"></a>默认约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 建表时添加默认约束</span><span class="token comment" spellcheck="true">-- 约束某个字段的默认值</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> user2 <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    age <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 移除非空约束</span><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> age <span class="token keyword">INT</span><span class="token punctuation">;</span></code></pre><h3 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 班级</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> classes <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> students <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 这里的 class_id 要和 classes 中的 id 字段相关联</span>    class_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 表示 class_id 的值必须来自于 classes 中的 id 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> classes<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 1. 主表（父表）classes 中没有的数据值，在副表（子表）students 中，是不可以使用的；</span><span class="token comment" spellcheck="true">-- 2. 主表中的记录被副表引用时，主表不可以被删除。</span></code></pre><h2 id="数据库的三大设计范式"><a href="#数据库的三大设计范式" class="headerlink" title="数据库的三大设计范式"></a>数据库的三大设计范式</h2><h3 id="1NF"><a href="#1NF" class="headerlink" title="1NF"></a>1NF</h3><p>只要字段值还可以继续拆分，就不满足第一范式。</p><p>范式设计得越详细，对某些实际操作可能会更好，但并非都有好处，需要对项目的实际情况进行设定。</p><h3 id="2NF"><a href="#2NF" class="headerlink" title="2NF"></a>2NF</h3><p>在满足第一范式的前提下，其他列都必须完全依赖于主键列。如果出现不完全依赖，只可能发生在联合主键的情况下：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 订单表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    product_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    customer_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>product_id<span class="token punctuation">,</span> customer_id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>实际上，在这张订单表中，<code>product_name</code> 只依赖于 <code>product_id</code> ，<code>customer_name</code> 只依赖于 <code>customer_id</code> 。也就是说，<code>product_name</code> 和 <code>customer_id</code> 是没用关系的，<code>customer_name</code> 和 <code>product_id</code> 也是没有关系的。</p><p>这就不满足第二范式：其他列都必须完全依赖于主键列！</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> product <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> customer <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>拆分之后，<code>myorder</code> 表中的 <code>product_id</code> 和 <code>customer_id</code> 完全依赖于 <code>order_id</code> 主键，而 <code>product</code> 和 <code>customer</code> 表中的其他字段又完全依赖于主键。满足了第二范式的设计！</p><h3 id="3NF"><a href="#3NF" class="headerlink" title="3NF"></a>3NF</h3><p>在满足第二范式的前提下，除了主键列之外，其他列之间不能有传递依赖关系。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_phone <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>表中的 <code>customer_phone</code> 有可能依赖于 <code>order_id</code> 、 <code>customer_id</code> 两列，也就不满足了第三范式的设计：其他列之间不能有传递依赖关系。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> myorder <span class="token punctuation">(</span>    order_id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    product_id <span class="token keyword">INT</span><span class="token punctuation">,</span>    customer_id <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> customer <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    phone <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>修改后就不存在其他列之间的传递依赖关系，其他列都只依赖于主键列，满足了第三范式的设计！</p><h2 id="查询练习"><a href="#查询练习" class="headerlink" title="查询练习"></a>查询练习</h2><h3 id="准备数据"><a href="#准备数据" class="headerlink" title="准备数据"></a>准备数据</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 创建数据库</span><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> select_test<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 切换数据库</span><span class="token keyword">USE</span> select_test<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建学生表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sex <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    birthday <span class="token keyword">DATE</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 生日</span>    class <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">-- 所在班级</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建教师表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> teacher <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    sex <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    birthday <span class="token keyword">DATE</span><span class="token punctuation">,</span>    profession <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 职称</span>    department <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token comment" spellcheck="true">-- 部门</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 创建课程表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> course <span class="token punctuation">(</span>    <span class="token keyword">no</span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>    t_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 教师编号</span>    <span class="token comment" spellcheck="true">-- 表示该 tno 来自于 teacher 表中的 no 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>t_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> teacher<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 成绩表</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> score <span class="token punctuation">(</span>    s_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 学生编号</span>    c_no <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">-- 课程号</span>    degree <span class="token keyword">DECIMAL</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 成绩</span>    <span class="token comment" spellcheck="true">-- 表示该 s_no, c_no 分别来自于 student, course 表中的 no 字段值</span>    <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>s_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> student<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> course<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">-- 设置 s_no, c_no 为联合主键</span>    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">(</span>s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查看所有表</span><span class="token keyword">SHOW</span> <span class="token keyword">TABLES</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加学生表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'101'</span><span class="token punctuation">,</span> <span class="token string">'曾华'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1977-09-01'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'102'</span><span class="token punctuation">,</span> <span class="token string">'匡明'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1975-10-02'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'王丽'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1976-01-23'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'104'</span><span class="token punctuation">,</span> <span class="token string">'李军'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1976-02-20'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'王芳'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1975-02-10'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'106'</span><span class="token punctuation">,</span> <span class="token string">'陆军'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1974-06-03'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'107'</span><span class="token punctuation">,</span> <span class="token string">'王尼玛'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1976-02-20'</span><span class="token punctuation">,</span> <span class="token string">'95033'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'108'</span><span class="token punctuation">,</span> <span class="token string">'张全蛋'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1975-02-10'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'赵铁柱'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1974-06-03'</span><span class="token punctuation">,</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加教师表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'804'</span><span class="token punctuation">,</span> <span class="token string">'李诚'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1958-12-02'</span><span class="token punctuation">,</span> <span class="token string">'副教授'</span><span class="token punctuation">,</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'856'</span><span class="token punctuation">,</span> <span class="token string">'张旭'</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">,</span> <span class="token string">'1969-03-12'</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'825'</span><span class="token punctuation">,</span> <span class="token string">'王萍'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1972-05-05'</span><span class="token punctuation">,</span> <span class="token string">'助教'</span><span class="token punctuation">,</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> teacher <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'831'</span><span class="token punctuation">,</span> <span class="token string">'刘冰'</span><span class="token punctuation">,</span> <span class="token string">'女'</span><span class="token punctuation">,</span> <span class="token string">'1977-08-14'</span><span class="token punctuation">,</span> <span class="token string">'助教'</span><span class="token punctuation">,</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加课程表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'计算机导论'</span><span class="token punctuation">,</span> <span class="token string">'825'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'操作系统'</span><span class="token punctuation">,</span> <span class="token string">'804'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'数字电路'</span><span class="token punctuation">,</span> <span class="token string">'856'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> course <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'9-888'</span><span class="token punctuation">,</span> <span class="token string">'高等数学'</span><span class="token punctuation">,</span> <span class="token string">'831'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 添加添加成绩表数据</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'92'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'86'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'103'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'85'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'88'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'75'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'105'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'79'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'76'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'3-245'</span><span class="token punctuation">,</span> <span class="token string">'68'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">'109'</span><span class="token punctuation">,</span> <span class="token string">'6-166'</span><span class="token punctuation">,</span> <span class="token string">'81'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查看表结构</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span></code></pre><h3 id="1-到-10"><a href="#1-到-10" class="headerlink" title="1 到 10"></a>1 到 10</h3><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询 student 表的所有行</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 student 表中的 name、sex 和 class 字段的所有行</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> class <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 teacher 表中不重复的 department 列</span><span class="token comment" spellcheck="true">-- department: 去重查询</span><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> department <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中成绩在60-80之间的所有行（区间查询和运算符查询）</span><span class="token comment" spellcheck="true">-- BETWEEN xx AND xx: 查询区间, AND 表示 "并且"</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">BETWEEN</span> <span class="token number">60</span> <span class="token operator">AND</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">></span> <span class="token number">60</span> <span class="token operator">AND</span> degree <span class="token operator">&lt;</span> <span class="token number">80</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中成绩为 85, 86 或 88 的行</span><span class="token comment" spellcheck="true">-- IN: 查询规定中的多个值</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 student 表中 '95031' 班或性别为 '女' 的所有行</span><span class="token comment" spellcheck="true">-- or: 表示或者关系</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span> <span class="token operator">or</span> sex <span class="token operator">=</span> <span class="token string">'女'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 以 class 降序的方式查询 student 表的所有行</span><span class="token comment" spellcheck="true">-- DESC: 降序，从高到低</span><span class="token comment" spellcheck="true">-- ASC（默认）: 升序，从低到高</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">ASC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 以 c_no 升序、degree 降序查询 score 表的所有行</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> c_no <span class="token keyword">ASC</span><span class="token punctuation">,</span> degree <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 "95031" 班的学生人数</span><span class="token comment" spellcheck="true">-- COUNT: 统计</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表中的最高分的学生学号和课程编号（子查询或排序查询）。</span><span class="token comment" spellcheck="true">-- (SELECT MAX(degree) FROM score): 子查询，算出最高分</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">--  排序查询</span><span class="token comment" spellcheck="true">-- LIMIT r, n: 表示从第r行开始，查询n条数据</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> degree <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre><h3 id="分组计算平均成绩"><a href="#分组计算平均成绩" class="headerlink" title="分组计算平均成绩"></a>分组计算平均成绩</h3><p><strong>查询每门课的平均成绩。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- AVG: 平均值</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'6-166'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- GROUP BY: 分组查询</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span></code></pre><h3 id="分组条件与模糊查询"><a href="#分组条件与模糊查询" class="headerlink" title="分组条件与模糊查询"></a>分组条件与模糊查询</h3><p><strong>查询 <code>score</code> 表中至少有 2 名学生选修，并以 3 开头的课程的平均分数。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- c_no 课程编号</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>分析表发现，至少有 2 名学生选修的课程是 <code>3-105</code> 、<code>3-245</code> 、<code>6-166</code> ，以 3 开头的课程是 <code>3-105</code> 、<code>3-245</code> 。也就是说，我们要查询所有 <code>3-105</code> 和 <code>3-245</code> 的 <code>degree</code> 平均分。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 首先把 c_no, AVG(degree) 通过分组查询出来</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">85.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81.6667</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token comment" spellcheck="true">-- 再查询出至少有 2 名学生选修的课程</span><span class="token comment" spellcheck="true">-- HAVING: 表示持有</span><span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token comment" spellcheck="true">-- 并且是以 3 开头的课程</span><span class="token comment" spellcheck="true">-- LIKE 表示模糊查询，"%" 是一个通配符，匹配 "3" 后面的任意字符。</span><span class="token operator">AND</span> c_no <span class="token operator">LIKE</span> <span class="token string">'3%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 把前面的SQL语句拼接起来，</span><span class="token comment" spellcheck="true">-- 后面加上一个 COUNT(*)，表示将每个分组的个数也查询出来。</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>c_no<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">2</span> <span class="token operator">AND</span> c_no <span class="token operator">LIKE</span> <span class="token string">'3%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">85.3333</span> <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span>        <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+----------+</span></code></pre><h3 id="多表查询-1"><a href="#多表查询-1" class="headerlink" title="多表查询 - 1"></a>多表查询 - 1</h3><p><strong>查询所有学生的 <code>name</code>，以及该学生在 <code>score</code> 表中对应的 <code>c_no</code> 和 <code>degree</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>通过分析可以发现，只要把 <code>score</code> 表中的 <code>s_no</code> 字段值替换成 <code>student</code> 表中对应的 <code>name</code> 字段值就可以了，如何做呢？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- FROM...: 表示从 student, score 表中查询</span><span class="token comment" spellcheck="true">-- WHERE 的条件表示为，只有在 student.no 和 score.s_no 相等时才显示出来。</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span></code></pre><h3 id="多表查询-2"><a href="#多表查询-2" class="headerlink" title="多表查询 - 2"></a>多表查询 - 2</h3><p><strong>查询所有学生的 <code>no</code> 、课程名称 ( <code>course</code> 表中的 <code>name</code> ) 和成绩 ( <code>score</code> 表中的 <code>degree</code> ) 列。</strong></p><p>只有 <code>score</code> 关联学生的 <code>no</code> ，因此只要查询 <code>score</code> 表，就能找出所有和学生相关的 <code>no</code> 和 <code>degree</code> ：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>然后查询 <code>course</code> 表：</p><pre class=" language-sql"><code class="language-sql"><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span></code></pre><p>只要把 <code>score</code> 表中的 <code>c_no</code> 替换成 <code>course</code> 表中对应的 <code>name</code> 字段值就可以了。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 增加一个查询字段 name，分别从 score、course 这两个表中查询。</span><span class="token comment" spellcheck="true">-- as 表示取一个该字段的别名。</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> name <span class="token keyword">as</span> c_name<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">,</span> course<span class="token keyword">WHERE</span> score<span class="token punctuation">.</span>c_no <span class="token operator">=</span> course<span class="token punctuation">.</span><span class="token keyword">no</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_name          <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 操作系统        <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> 数字电路        <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------------+--------+</span></code></pre><h3 id="三表关联查询"><a href="#三表关联查询" class="headerlink" title="三表关联查询"></a>三表关联查询</h3><p><strong>查询所有学生的 <code>name</code> 、课程名 ( <code>course</code> 表中的 <code>name</code> ) 和 <code>degree</code> 。</strong></p><p>只有 <code>score</code> 表中关联学生的学号和课堂号，我们只要围绕着 <code>score</code> 这张表查询就好了。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>只要把 <code>s_no</code> 和 <code>c_no</code> 替换成 <code>student</code> 和 <code>srouse</code> 表中对应的 <code>name</code> 字段值就好了。</p><p>首先把 <code>s_no</code> 替换成 <code>student</code> 表中的 <code>name</code> 字段：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score <span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">no</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-------+--------+</span></code></pre><p>再把 <code>c_no</code> 替换成 <code>course</code> 表中的 <code>name</code> 字段：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 课程表</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+</span><span class="token comment" spellcheck="true">-- 由于字段名存在重复，使用 "表名.字段名 as 别名" 代替。</span><span class="token keyword">SELECT</span> student<span class="token punctuation">.</span>name <span class="token keyword">as</span> s_name<span class="token punctuation">,</span> course<span class="token punctuation">.</span>name <span class="token keyword">as</span> c_name<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> student<span class="token punctuation">,</span> score<span class="token punctuation">,</span> course<span class="token keyword">WHERE</span> student<span class="token punctuation">.</span><span class="token keyword">NO</span> <span class="token operator">=</span> score<span class="token punctuation">.</span>s_no<span class="token operator">AND</span> score<span class="token punctuation">.</span>c_no <span class="token operator">=</span> course<span class="token punctuation">.</span><span class="token keyword">no</span><span class="token punctuation">;</span></code></pre><h3 id="子查询加分组求平均分"><a href="#子查询加分组求平均分" class="headerlink" title="子查询加分组求平均分"></a>子查询加分组求平均分</h3><p><strong>查询 <code>95031</code> 班学生每门课程的平均成绩。</strong></p><p>在 <code>score</code> 表中根据 <code>student</code>  表的学生编号筛选出学生的课堂号和成绩：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- IN (..): 将筛选出的学生号当做 s_no 的条件查询</span><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> degree <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><p>这时只要将 <code>c_no</code> 分组一下就能得出 <code>95031</code> 班学生每门课的平均成绩：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> class <span class="token operator">=</span> <span class="token string">'95031'</span><span class="token punctuation">)</span><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">82.0000</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">71.5000</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">80.0000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span></code></pre><h3 id="子查询-1"><a href="#子查询-1" class="headerlink" title="子查询 - 1"></a>子查询 - 1</h3><p><strong>查询在 <code>3-105</code> 课程中，所有成绩高于 <code>109</code> 号同学的记录。</strong></p><p>首先筛选出课堂号为 <code>3-105</code> ，在找出所有成绩高于 <code>109</code> 号同学的的行。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> s_no <span class="token operator">=</span> <span class="token string">'109'</span> <span class="token operator">AND</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="子查询-2"><a href="#子查询-2" class="headerlink" title="子查询 - 2"></a>子查询 - 2</h3><p><strong>查询所有成绩高于 <code>109</code> 号同学的 <code>3-105</code> 课程成绩记录。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 不限制课程号，只要成绩大于109号同学的3-105课程成绩就可以。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token keyword">WHERE</span> degree <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> s_no <span class="token operator">=</span> <span class="token string">'109'</span> <span class="token operator">AND</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="YEAR-函数与带-IN-关键字查询"><a href="#YEAR-函数与带-IN-关键字查询" class="headerlink" title="YEAR 函数与带 IN 关键字查询"></a>YEAR 函数与带 IN 关键字查询</h3><p><strong>查询所有和 <code>101</code> 、<code>108</code> 号学生同年出生的 <code>no</code> 、<code>name</code> 、<code>birthday</code> 列。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- YEAR(..): 取出日期中的年份</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> birthday <span class="token keyword">FROM</span> student<span class="token keyword">WHERE</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="多层嵌套子查询"><a href="#多层嵌套子查询" class="headerlink" title="多层嵌套子查询"></a>多层嵌套子查询</h3><p><strong>查询 <code>'张旭'</code> 教师任课的学生成绩表。</strong></p><p>首先找到教师编号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span></code></pre><p>通过 <code>sourse</code> 表找到该教师课程号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token keyword">SELECT</span> <span class="token keyword">NO</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>通过筛选出的课程号查询成绩表：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">=</span> <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> NAME <span class="token operator">=</span> <span class="token string">'张旭'</span>     <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="多表查询"><a href="#多表查询" class="headerlink" title="多表查询"></a>多表查询</h3><p><strong>查询某选修课程多于5个同学的教师姓名。</strong></p><p>首先在 <code>teacher</code> 表中，根据 <code>no</code> 字段来判断该教师的同一门课程是否有至少5名学员选修：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询 teacher 表</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name <span class="token keyword">FROM</span> teacher<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token operator">|</span> <span class="token number">804</span> <span class="token operator">|</span> 李诚   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">825</span> <span class="token operator">|</span> 王萍   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">831</span> <span class="token operator">|</span> 刘冰   <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">856</span> <span class="token operator">|</span> 张旭   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+</span><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">-- 在这里找到对应的条件</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>查看和教师编号有有关的表的信息：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- t_no: 教师编号</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name            <span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> 计算机导论      <span class="token operator">|</span> <span class="token number">825</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统        <span class="token operator">|</span> <span class="token number">804</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路        <span class="token operator">|</span> <span class="token number">856</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">9</span><span class="token operator">-</span><span class="token number">888</span> <span class="token operator">|</span> 高等数学        <span class="token operator">|</span> <span class="token number">831</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-----------------+------+</span></code></pre><p>我们已经找到和教师编号有关的字段就在 <code>course</code> 表中，但是还无法知道哪门课程至少有5名学生选修，所以还需要根据 <code>score</code> 表来查询：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 在此之前向 score 插入一些数据，以便丰富查询条件。</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'101'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'90'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'102'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'91'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">'104'</span><span class="token punctuation">,</span> <span class="token string">'3-105'</span><span class="token punctuation">,</span> <span class="token string">'89'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询 score 表</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token comment" spellcheck="true">-- 在 score 表中将 c_no 作为分组，并且限制 c_no 持有至少 5 条数据。</span><span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span></code></pre><p>根据筛选出来的课程号，找出在某课程中，拥有至少5名学员的教师编号：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span><span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span><span class="token operator">|</span> <span class="token number">825</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+</span></code></pre><p>在 <code>teacher</code> 表中，根据筛选出来的教师编号找到教师姓名：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token comment" spellcheck="true">-- 最终条件</span>    <span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> c_no <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">5</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="子查询-3"><a href="#子查询-3" class="headerlink" title="子查询 - 3"></a>子查询 - 3</h3><p><strong>查询 “计算机系” 课程的成绩表。</strong></p><p>思路是，先找出 <code>course</code> 表中所有 <code>计算机系</code> 课程的编号，然后根据这个编号查询 <code>score</code> 表。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 通过 teacher 表查询所有 `计算机系` 的教师编号</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span><span class="token punctuation">,</span> name<span class="token punctuation">,</span> department <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name   <span class="token operator">|</span> department   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token operator">|</span> <span class="token number">804</span> <span class="token operator">|</span> 李诚   <span class="token operator">|</span> 计算机系     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">825</span> <span class="token operator">|</span> 王萍   <span class="token operator">|</span> 计算机系     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+--------+--------------+</span><span class="token comment" spellcheck="true">-- 通过 course 表查询该教师的课程编号</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token comment" spellcheck="true">-- 根据筛选出来的课程号查询成绩表</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">IN</span> <span class="token punctuation">(</span>        <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="UNION-和-NOTIN-的使用"><a href="#UNION-和-NOTIN-的使用" class="headerlink" title="UNION 和 NOTIN 的使用"></a>UNION 和 NOTIN 的使用</h3><p><strong>查询 <code>计算机系</code> 与 <code>电子工程系</code> 中的不同职称的教师。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- NOT: 代表逻辑非</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span> <span class="token operator">AND</span> profession <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> profession <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'电子工程系'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">-- 合并两个集</span><span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'电子工程系'</span> <span class="token operator">AND</span> profession <span class="token operator">NOT</span> <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> profession <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> department <span class="token operator">=</span> <span class="token string">'计算机系'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="ANY-表示至少一个-DESC-降序"><a href="#ANY-表示至少一个-DESC-降序" class="headerlink" title="ANY 表示至少一个 - DESC ( 降序 )"></a>ANY 表示至少一个 - DESC ( 降序 )</h3><p><strong>查询课程 <code>3-105</code> 且成绩 <u>至少</u> 高于 <code>3-245</code> 的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token comment" spellcheck="true">-- ANY: 符合SQL语句中的任意条件。</span><span class="token comment" spellcheck="true">-- 也就是说，在 3-105 成绩中，只要有一个大于从 3-245 筛选出来的任意行就符合条件，</span><span class="token comment" spellcheck="true">-- 最后根据降序查询结果。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span> <span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token keyword">ANY</span><span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">)</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> degree <span class="token keyword">DESC</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="表示所有的-ALL"><a href="#表示所有的-ALL" class="headerlink" title="表示所有的 ALL"></a>表示所有的 ALL</h3><p><strong>查询课程 <code>3-105</code> 且成绩高于 <code>3-245</code> 的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 只需对上一道题稍作修改。</span><span class="token comment" spellcheck="true">-- ALL: 符合SQL语句中的所有条件。</span><span class="token comment" spellcheck="true">-- 也就是说，在 3-105 每一行成绩中，都要大于从 3-245 筛选出来全部行才算符合条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-105'</span> <span class="token operator">AND</span> degree <span class="token operator">></span> <span class="token keyword">ALL</span><span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token string">'3-245'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="复制表的数据作为条件查询"><a href="#复制表的数据作为条件查询" class="headerlink" title="复制表的数据作为条件查询"></a>复制表的数据作为条件查询</h3><p><strong>查询某课程成绩比该课程平均成绩低的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询平均分</span><span class="token keyword">SELECT</span> c_no<span class="token punctuation">,</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c_no<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> c_no  <span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">87.6667</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">76.3333</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81.6667</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+-------------+</span><span class="token comment" spellcheck="true">-- 查询 score 表</span><span class="token keyword">SELECT</span> degree <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">86</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">85</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">88</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+</span><span class="token comment" spellcheck="true">-- 将表 b 作用于表 a 中查询数据</span><span class="token comment" spellcheck="true">-- score a (b): 将表声明为 a (b)，</span><span class="token comment" spellcheck="true">-- 如此就能用 a.c_no = b.c_no 作为条件执行查询了。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token number">a</span> <span class="token keyword">WHERE</span> degree <span class="token operator">&lt;</span> <span class="token punctuation">(</span>    <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score <span class="token number">b</span> <span class="token keyword">WHERE</span> <span class="token number">a</span><span class="token punctuation">.</span>c_no <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>c_no<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">75</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">79</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span>     <span class="token number">68</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span>     <span class="token number">81</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="子查询-4"><a href="#子查询-4" class="headerlink" title="子查询 - 4"></a>子查询 - 4</h3><p><strong>查询所有任课 ( 在 <code>course</code> 表里有课程 ) 教师的 <code>name</code> 和 <code>department</code></strong> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> department <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> <span class="token keyword">no</span> <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> t_no <span class="token keyword">FROM</span> course<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span><span class="token operator">|</span> name   <span class="token operator">|</span> department      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span><span class="token operator">|</span> 李诚   <span class="token operator">|</span> 计算机系        <span class="token operator">|</span><span class="token operator">|</span> 王萍   <span class="token operator">|</span> 计算机系        <span class="token operator">|</span><span class="token operator">|</span> 刘冰   <span class="token operator">|</span> 电子工程系      <span class="token operator">|</span><span class="token operator">|</span> 张旭   <span class="token operator">|</span> 电子工程系      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------+-----------------+</span></code></pre><h3 id="条件加组筛选"><a href="#条件加组筛选" class="headerlink" title="条件加组筛选"></a>条件加组筛选</h3><p><strong>查询 <code>student</code> 表中至少有 2 名男生的 <code>class</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查看学生表信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">23</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token comment" spellcheck="true">-- 只查询性别为男，然后按 class 分组，并限制 class 行大于 1。</span><span class="token keyword">SELECT</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> class <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span><span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+</span></code></pre><h3 id="NOTLIKE-模糊查询取反"><a href="#NOTLIKE-模糊查询取反" class="headerlink" title="NOTLIKE 模糊查询取反"></a>NOTLIKE 模糊查询取反</h3><p><strong>查询 <code>student</code> 表中不姓 “王” 的同学记录。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- NOT: 取反</span><span class="token comment" spellcheck="true">-- LIKE: 模糊查询</span>mysql<span class="token operator">></span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">NOT</span> <span class="token operator">LIKE</span> <span class="token string">'王%'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span></code></pre><h3 id="YEAR-与-NOW-函数"><a href="#YEAR-与-NOW-函数" class="headerlink" title="YEAR 与 NOW 函数"></a>YEAR 与 NOW 函数</h3><p><strong>查询 <code>student</code> 表中每个学生的姓名和年龄。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用函数 YEAR(NOW()) 计算出当前年份，减去出生年份后得出年龄。</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> YEAR<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> YEAR<span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">as</span> age <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> age  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span>   <span class="token number">42</span> <span class="token operator">|</span><span class="token operator">|</span> 匡明      <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 王丽      <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 王芳      <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 陆军      <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span>   <span class="token number">43</span> <span class="token operator">|</span><span class="token operator">|</span> 张全蛋    <span class="token operator">|</span>   <span class="token number">44</span> <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">|</span> 张飞      <span class="token operator">|</span>   <span class="token number">45</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+------+</span></code></pre><h3 id="MAX-与-MIN-函数"><a href="#MAX-与-MIN-函数" class="headerlink" title="MAX 与 MIN 函数"></a>MAX 与 MIN 函数</h3><p><strong>查询 <code>student</code> 表中最大和最小的 <code>birthday</code> 值。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MIN</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token keyword">FROM</span> student<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span><span class="token operator">|</span> <span class="token function">MAX</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token function">MIN</span><span class="token punctuation">(</span>birthday<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span><span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span>    <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span>    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">---------------+---------------+</span></code></pre><h3 id="多段排序"><a href="#多段排序" class="headerlink" title="多段排序"></a>多段排序</h3><p><strong>以 <code>class</code> 和 <code>birthday</code> 从大到小的顺序查询 <code>student</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> class <span class="token keyword">DESC</span><span class="token punctuation">,</span> birthday<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token keyword">no</span>  <span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> birthday   <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span><span class="token operator">|</span> <span class="token number">110</span> <span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95038</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span> <span class="token operator">|</span> 王丽      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">23</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span> <span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">107</span> <span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1976</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">20</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">101</span> <span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1977</span><span class="token operator">-</span><span class="token number">09</span><span class="token operator">-</span><span class="token number">01</span> <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">106</span> <span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span> <span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1974</span><span class="token operator">-</span><span class="token number">06</span><span class="token operator">-</span><span class="token number">03</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span> <span class="token operator">|</span> 王芳      <span class="token operator">|</span> 女  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">108</span> <span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">02</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span> <span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">1975</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">-</span><span class="token number">02</span> <span class="token operator">|</span> <span class="token number">95031</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+-----------+-----+------------+-------+</span></code></pre><h3 id="子查询-5"><a href="#子查询-5" class="headerlink" title="子查询 - 5"></a>子查询 - 5</h3><p><strong>查询 “男” 教师及其所上的课程。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> t_no <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> teacher <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span><span class="token operator">|</span> <span class="token keyword">no</span>    <span class="token operator">|</span> name         <span class="token operator">|</span> t_no <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span><span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> 操作系统     <span class="token operator">|</span> <span class="token number">804</span>  <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> 数字电路     <span class="token operator">|</span> <span class="token number">856</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-------+--------------+------+</span></code></pre><h3 id="MAX-函数与子查询"><a href="#MAX-函数与子查询" class="headerlink" title="MAX 函数与子查询"></a>MAX 函数与子查询</h3><p><strong>查询最高分同学的 <code>score</code> 表。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 找出最高成绩（该查询只能有一个结果）</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 根据上面的条件筛选出所有最高成绩表，</span><span class="token comment" spellcheck="true">-- 该查询可能有多个结果，假设 degree 值多次符合条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> degree <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token keyword">FROM</span> score<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">92</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="子查询-6"><a href="#子查询-6" class="headerlink" title="子查询 - 6"></a>子查询 - 6</h3><p><strong>查询和 “李军” 同性别的所有同学 <code>name</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 首先将李军的性别作为条件取出来</span><span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token operator">|</span> sex <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----+</span><span class="token comment" spellcheck="true">-- 根据性别查询 name 和 sex</span><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span><span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 匡明      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 陆军      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 张全蛋    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 赵铁柱    <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">|</span> 张飞      <span class="token operator">|</span> 男  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+</span></code></pre><h3 id="子查询-7"><a href="#子查询-7" class="headerlink" title="子查询 - 7"></a>子查询 - 7</h3><p><strong>查询和 “李军” 同性别且同班的同学 <code>name</code> 。</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> name<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> sex <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span> <span class="token operator">AND</span> class <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> class <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'李军'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span><span class="token operator">|</span> name      <span class="token operator">|</span> sex <span class="token operator">|</span> class <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span><span class="token operator">|</span> 曾华      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> 李军      <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">|</span> 王尼玛    <span class="token operator">|</span> 男  <span class="token operator">|</span> <span class="token number">95033</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">-----------+-----+-------+</span></code></pre><h3 id="子查询-8"><a href="#子查询-8" class="headerlink" title="子查询 - 8"></a>子查询 - 8</h3><p><strong>查询所有选修 “计算机导论” 课程的 “男” 同学成绩表。</strong></p><p>需要的 “计算机导论” 和性别为 “男” 的编号可以在 <code>course</code> 和 <code>student</code> 表中找到。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> score <span class="token keyword">WHERE</span> c_no <span class="token operator">=</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> course <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'计算机导论'</span><span class="token punctuation">)</span> <span class="token operator">AND</span> s_no <span class="token operator">IN</span> <span class="token punctuation">(</span>    <span class="token keyword">SELECT</span> <span class="token keyword">no</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> sex <span class="token operator">=</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> degree <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">90</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">91</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">89</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span>     <span class="token number">76</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+--------+</span></code></pre><h3 id="按等级查询"><a href="#按等级查询" class="headerlink" title="按等级查询"></a>按等级查询</h3><p>建立一个 <code>grade</code> 表代表学生的成绩等级，并插入数据：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> grade <span class="token punctuation">(</span>    low <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    upp <span class="token keyword">INT</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    grade char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">69</span><span class="token punctuation">,</span> <span class="token string">'D'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> grade <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token string">'E'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> grade<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span><span class="token operator">|</span> low  <span class="token operator">|</span> upp  <span class="token operator">|</span> grade <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span><span class="token operator">|</span>   <span class="token number">90</span> <span class="token operator">|</span>  <span class="token number">100</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">80</span> <span class="token operator">|</span>   <span class="token number">89</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">70</span> <span class="token operator">|</span>   <span class="token number">79</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span>   <span class="token number">60</span> <span class="token operator">|</span>   <span class="token number">69</span> <span class="token operator">|</span> D     <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">0</span> <span class="token operator">|</span>   <span class="token number">59</span> <span class="token operator">|</span> E     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+------+-------+</span></code></pre><p><strong>查询所有学生的 <code>s_no</code> 、<code>c_no</code> 和 <code>grade</code> 列。</strong></p><p>思路是，使用区间 ( <code>BETWEEN</code> ) 查询，判断学生的成绩 ( <code>degree</code> )  在 <code>grade</code> 表的 <code>low</code> 和 <code>upp</code> 之间。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> s_no<span class="token punctuation">,</span> c_no<span class="token punctuation">,</span> grade <span class="token keyword">FROM</span> score<span class="token punctuation">,</span> grade <span class="token keyword">WHERE</span> degree <span class="token operator">BETWEEN</span> low <span class="token operator">AND</span> upp<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span><span class="token operator">|</span> s_no <span class="token operator">|</span> c_no  <span class="token operator">|</span> grade <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span><span class="token operator">|</span> <span class="token number">101</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">102</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> A     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">103</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">104</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">105</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">105</span> <span class="token operator">|</span> C     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">3</span><span class="token operator">-</span><span class="token number">245</span> <span class="token operator">|</span> D     <span class="token operator">|</span><span class="token operator">|</span> <span class="token number">109</span>  <span class="token operator">|</span> <span class="token number">6</span><span class="token operator">-</span><span class="token number">166</span> <span class="token operator">|</span> B     <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-------+-------+</span></code></pre><h3 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h3><p>准备用于测试连接查询的数据：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> testJoin<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> person <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    cardId <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> card <span class="token punctuation">(</span>    id <span class="token keyword">INT</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> card <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'饭卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'建行卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'农行卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'工商卡'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'邮政卡'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> card<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+-----------+</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> person <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+</span></code></pre><p>分析两张表发现，<code>person</code> 表并没有为 <code>cardId</code> 字段设置一个在 <code>card</code> 表中对应的 <code>id</code> 外键。如果设置了的话，<code>person</code> 中 <code>cardId</code> 字段值为 <code>6</code> 的行就插不进去，因为该 <code>cardId</code> 值在 <code>card</code> 表中并没有。</p><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><p>要查询这两张表中有关系的数据，可以使用 <code>INNER JOIN</code> ( 内连接 ) 将它们连接在一起。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- INNER JOIN: 表示为内连接，将两张表拼接在一起。</span><span class="token comment" spellcheck="true">-- on: 表示要执行某个条件。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token comment" spellcheck="true">-- 将 INNER 关键字省略掉，结果也是一样的。</span><span class="token comment" spellcheck="true">-- SELECT * FROM person JOIN card on person.cardId = card.id;</span></code></pre><blockquote><p>注意：<code>card</code> 的整张表被连接到了右边。</p></blockquote><h4 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h4><p>完整显示左边的表 ( <code>person</code> ) ，右边的表如果符合条件就显示，不符合则补 <code>NULL</code> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- LEFT JOIN 也叫做 LEFT OUTER JOIN，用这两种方式的查询结果是一样的。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h4 id="右外链接"><a href="#右外链接" class="headerlink" title="右外链接"></a>右外链接</h4><p>完整显示右边的表 ( <code>card</code> ) ，左边的表如果符合条件就显示，不符合则补 <code>NULL</code> 。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h4 id="全外链接"><a href="#全外链接" class="headerlink" title="全外链接"></a>全外链接</h4><p>完整显示两张表的全部数据。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- MySQL 不支持这种语法的全外连接</span><span class="token comment" spellcheck="true">-- SELECT * FROM person FULL JOIN card on person.cardId = card.id;</span><span class="token comment" spellcheck="true">-- 出现错误：</span><span class="token comment" spellcheck="true">-- ERROR 1054 (42S22): Unknown column 'person.cardId' in 'on clause'</span><span class="token comment" spellcheck="true">-- MySQL全连接语法，使用 UNION 将两张表合并在一起。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token keyword">UNION</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> person <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> card <span class="token keyword">on</span> person<span class="token punctuation">.</span>cardId <span class="token operator">=</span> card<span class="token punctuation">.</span>id<span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span> id   <span class="token operator">|</span> name   <span class="token operator">|</span> cardId <span class="token operator">|</span> id   <span class="token operator">|</span> name      <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span><span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 张三   <span class="token operator">|</span>      <span class="token number">1</span> <span class="token operator">|</span>    <span class="token number">1</span> <span class="token operator">|</span> 饭卡      <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 李四   <span class="token operator">|</span>      <span class="token number">3</span> <span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 农行卡    <span class="token operator">|</span><span class="token operator">|</span>    <span class="token number">3</span> <span class="token operator">|</span> 王五   <span class="token operator">|</span>      <span class="token number">6</span> <span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>      <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">2</span> <span class="token operator">|</span> 建行卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">4</span> <span class="token operator">|</span> 工商卡    <span class="token operator">|</span><span class="token operator">|</span> <span class="token boolean">NULL</span> <span class="token operator">|</span> <span class="token boolean">NULL</span>   <span class="token operator">|</span>   <span class="token boolean">NULL</span> <span class="token operator">|</span>    <span class="token number">5</span> <span class="token operator">|</span> 邮政卡    <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------+--------+--------+------+-----------+</span></code></pre><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><p>在 MySQL 中，事务其实是一个最小的不可分割的工作单元。事务能够<strong>保证一个业务的完整性</strong>。</p><p>比如我们的银行转账：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- a -> -100</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- b -> +100</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span></code></pre><p>在实际项目中，假设只有一条 SQL 语句执行成功，而另外一条执行失败了，就会出现数据前后不一致。</p><p>因此，在执行多条有关联 SQL 语句时，<strong>事务</strong>可能会要求这些 SQL 语句要么同时执行成功，要么就都执行失败。</p><h3 id="如何控制事务-COMMIT-ROLLBACK"><a href="#如何控制事务-COMMIT-ROLLBACK" class="headerlink" title="如何控制事务 - COMMIT / ROLLBACK"></a>如何控制事务 - COMMIT / ROLLBACK</h3><p>在 MySQL 中，事务的<strong>自动提交</strong>状态默认是开启的。</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 查询事务的自动提交状态</span><span class="token keyword">SELECT</span> @<span class="token variable">@AUTOCOMMIT</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span> @<span class="token variable">@AUTOCOMMIT</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span></code></pre><p><strong>自动提交的作用</strong>：当我们执行一条 SQL 语句的时候，其产生的效果就会立即体现出来，且不能<strong>回滚</strong>。</p><p>什么是回滚？举个例子：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> bank<span class="token punctuation">;</span><span class="token keyword">USE</span> bank<span class="token punctuation">;</span><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>    id <span class="token keyword">INT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    money <span class="token keyword">INT</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>可以看到，在执行插入语句后数据立刻生效，原因是 MySQL 中的事务自动将它<strong>提交</strong>到了数据库中。那么所谓<strong>回滚</strong>的意思就是，撤销执行过的所有 SQL 语句，使其回滚到<strong>最后一次提交</strong>数据时的状态。</p><p>在 MySQL 中使用 <code>ROLLBACK</code> 执行回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 回滚到最后一次提交</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>由于所有执行过的 SQL 语句都已经被提交过了，所以数据并没有发生回滚。那如何让数据可以发生回滚？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 关闭自动提交</span><span class="token keyword">SET</span> AUTOCOMMIT <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询自动提交状态</span><span class="token keyword">SELECT</span> @<span class="token variable">@AUTOCOMMIT</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span> @<span class="token variable">@AUTOCOMMIT</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span><span class="token operator">|</span>            <span class="token number">0</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------+</span></code></pre><p>将自动提交关闭后，测试数据回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 关闭 AUTOCOMMIT 后，数据的变化是在一张虚拟的临时数据表中展示，</span><span class="token comment" spellcheck="true">-- 发生变化的数据并没有真正插入到数据表中。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 数据表中的真实数据其实还是：</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 由于数据还没有真正提交，可以使用回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 再次查询</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>那如何将虚拟的数据真正提交到数据库中？使用 <code>COMMIT</code> : </p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 手动提交数据（持久性），</span><span class="token comment" spellcheck="true">-- 将数据真正提交到数据库中，执行后不能再回滚提交过的数据。</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 提交后测试回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 再次查询（回滚无效了）</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><blockquote><p><strong>总结</strong></p><ol><li><p><strong>自动提交</strong></p><ul><li><p>查看自动提交状态：<code>SELECT @@AUTOCOMMIT</code> ；</p></li><li><p>设置自动提交状态：<code>SET AUTOCOMMIT = 0</code> 。</p></li></ul></li><li><p><strong>手动提交</strong></p><p><code>@@AUTOCOMMIT = 0</code> 时，使用 <code>COMMIT</code> 命令提交事务。</p></li><li><p><strong>事务回滚</strong></p><p><code>@@AUTOCOMMIT = 0</code> 时，使用 <code>ROLLBACK</code> 命令回滚事务。</p></li></ol></blockquote><p><strong>事务的实际应用</strong>，让我们再回到银行转账项目：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 转账</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 到账</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>这时假设在转账时发生了意外，就可以使用 <code>ROLLBACK</code> 回滚到最后一次提交的状态：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 假设转账发生了意外，需要回滚。</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>这时我们又回到了发生意外之前的状态，也就是说，事务给我们提供了一个可以反悔的机会。假设数据没有发生意外，这时可以手动将数据真正提交到数据表中：<code>COMMIT</code> 。</p><h3 id="手动开启事务-BEGIN-START-TRANSACTION"><a href="#手动开启事务-BEGIN-START-TRANSACTION" class="headerlink" title="手动开启事务 - BEGIN / START TRANSACTION"></a>手动开启事务 - BEGIN / START TRANSACTION</h3><p>事务的默认提交被开启 ( <code>@@AUTOCOMMIT = 1</code> ) 后，此时就不能使用事务回滚了。但是我们还可以手动开启一个事务处理事件，使其可以发生回滚：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 使用 BEGIN 或者 START TRANSACTION 手动开启一个事务</span><span class="token comment" spellcheck="true">-- START TRANSACTION;</span><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 由于手动开启的事务没有开启自动提交，</span><span class="token comment" spellcheck="true">-- 此时发生变化的数据仍然是被保存在一张临时表中。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 测试回滚</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span></code></pre><p>仍然使用 <code>COMMIT</code> 提交数据，提交后无法再发生本次事务的回滚。</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">BEGIN</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'a'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">100</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'b'</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>    <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>    <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+------+-------+</span><span class="token comment" spellcheck="true">-- 提交数据</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 测试回滚（无效，因为表的数据已经被提交）</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span></code></pre><h3 id="事务的-ACID-特征与使用"><a href="#事务的-ACID-特征与使用" class="headerlink" title="事务的 ACID 特征与使用"></a>事务的 ACID 特征与使用</h3><p><strong>事务的四大特征：</strong></p><ul><li><strong>A 原子性</strong>：事务是最小的单位，不可以再分割；</li><li><strong>C 一致性</strong>：要求同一事务中的 SQL 语句，必须保证同时成功或者失败；</li><li><strong>I 隔离性</strong>：事务1 和 事务2 之间是具有隔离性的；</li><li><strong>D 持久性</strong>：事务一旦结束 ( <code>COMMIT</code> ) ，就不可以再返回了 ( <code>ROLLBACK</code> ) 。</li></ul><h3 id="事务的隔离性"><a href="#事务的隔离性" class="headerlink" title="事务的隔离性"></a>事务的隔离性</h3><p><strong>事务的隔离性可分为四种 ( 性能从低到高 )</strong> ：</p><ol><li><p><strong>READ UNCOMMITTED ( 读取未提交 )</strong></p><p>如果有多个事务，那么任意事务都可以看见其他事务的<strong>未提交数据</strong>。</p></li><li><p><strong>READ COMMITTED ( 读取已提交 )</strong></p><p>只能读取到其他事务<strong>已经提交的数据</strong>。</p></li><li><p><strong>REPEATABLE READ ( 可被重复读 )</strong></p><p>如果有多个连接都开启了事务，那么事务之间不能共享数据记录，否则只能共享已提交的记录。</p></li><li><p><strong>SERIALIZABLE ( 串行化 )</strong></p><p>所有的事务都会按照<strong>固定顺序执行</strong>，执行完一个事务后再继续执行下一个事务的<strong>写入操作</strong>。</p></li></ol><p>查看当前数据库的默认隔离级别：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- MySQL 8.x, GLOBAL 表示系统级别，不加表示会话级别。</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">REPEATABLE</span><span class="token operator">-</span><span class="token keyword">READ</span>                <span class="token operator">|</span> <span class="token comment" spellcheck="true">-- MySQL的默认隔离级别，可以重复读。</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token comment" spellcheck="true">-- MySQL 5.x</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TX_ISOLATION</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@TX_ISOLATION</span><span class="token punctuation">;</span></code></pre><p>修改隔离级别：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 设置系统隔离级别，LEVEL 后面表示要设置的隔离级别 (READ UNCOMMITTED)。</span><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 查询系统隔离级别，发现已经被修改。</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">READ</span><span class="token operator">-</span><span class="token keyword">UNCOMMITTED</span>               <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><p>测试 <strong>READ UNCOMMITTED ( 读取未提交 )</strong> 的隔离性：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'小明'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'淘宝店'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 开启一个事务操作数据</span><span class="token comment" spellcheck="true">-- 假设小明在淘宝店买了一双800块钱的鞋子：</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'淘宝店'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 然后淘宝店在另一方查询结果，发现钱已到账。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>由于小明的转账是在新开启的事务上进行操作的，而该操作的结果是可以被其他事务（另一方的淘宝店）看见的，因此淘宝店的查询结果是正确的，淘宝店确认到账。但就在这时，如果小明在它所处的事务上又执行了 <code>ROLLBACK</code> 命令，会发生什么？</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小明所处的事务</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 此时无论对方是谁，如果再去查询结果就会发现：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>这就是所谓的<strong>脏读</strong>，一个事务读取到另外一个事务还未提交的数据。这在实际开发中是不允许出现的。</p><h4 id="读取已提交"><a href="#读取已提交" class="headerlink" title="读取已提交"></a>读取已提交</h4><p>把隔离级别设置为 <strong>READ COMMITTED</strong> ：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">READ</span><span class="token operator">-</span><span class="token keyword">COMMITTED</span>                 <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>这样，再有新的事务连接进来时，它们就只能查询到已经提交过的事务数据了。但是对于当前事务来说，它们看到的还是未提交的数据，例如：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 正在操作数据事务（当前事务）</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">-</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'小明'</span><span class="token punctuation">;</span><span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">SET</span> money <span class="token operator">=</span> money <span class="token operator">+</span> <span class="token number">800</span> <span class="token keyword">WHERE</span> name <span class="token operator">=</span> <span class="token string">'淘宝店'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 虽然隔离级别被设置为了 READ COMMITTED，但在当前事务中，</span><span class="token comment" spellcheck="true">-- 它看到的仍然是数据表中临时改变数据，而不是真正提交过的数据。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 假设此时在远程开启了一个新事务，连接到数据库。</span>$ mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p12345612<span class="token comment" spellcheck="true">-- 此时远程连接查询到的数据只能是已经提交过的</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>但是这样还有问题，那就是假设一个事务在操作数据时，其他事务干扰了这个事务的数据。例如：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张在查询数据的时候发现：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>   <span class="token number">200</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1800</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 在小张求表的 money 平均值之前，小王做了一个操作：</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 此时表的真实数据是：</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 这时小张再求平均值的时候，就会出现计算不相符合的情况：</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span><span class="token operator">|</span> <span class="token function">AVG</span><span class="token punctuation">(</span>money<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span><span class="token operator">|</span>  <span class="token number">820.0000</span>  <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">------------+</span></code></pre><p>虽然 <strong>READ COMMITTED</strong> 让我们只能读取到其他事务已经提交的数据，但还是会出现问题，就是<strong>在读取同一个表的数据时，可能会发生前后不一致的情况。</strong>这被称为<strong>不可重复读现象 ( READ COMMITTED )</strong> 。</p><h4 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h4><p>将隔离级别设置为 <strong>REPEATABLE READ ( 可被重复读取 )</strong> :</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">REPEATABLE</span><span class="token operator">-</span><span class="token keyword">READ</span>                <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>测试 <strong>REPEATABLE READ</strong> ，假设在两个不同的连接上分别执行 <code>START TRANSACTION</code> :</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小王 - 北京</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></code></pre><p>当前事务开启后，没提交之前，查询不到，提交后可以被查询到。但是，在提交之前其他事务被开启了，那么在这条事务线上，就不会查询到当前有操作事务的连接。相当于开辟出一条单独的线程。</p><p>无论小张是否执行过 <code>COMMIT</code> ，在小王这边，都不会查询到小张的事务记录，而是只会查询到自己所处事务的记录：</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span></code></pre><p>这是<strong>因为小王在此之前开启了一个新的事务 ( <code>START TRANSACTION</code> ) **，那么</strong>在他的这条新事务的线上，跟其他事务是没有联系的**，也就是说，此时如果其他事务正在操作数据，它是不知道的。</p><p>然而事实是，在真实的数据表中，小张已经插入了一条数据。但是小王此时并不知道，也插入了同一条数据，会发生什么呢？</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- ERROR 1062 (23000): Duplicate entry '6' for key 'PRIMARY'</span></code></pre><p>报错了，操作被告知已存在主键为 <code>6</code> 的字段。这种现象也被称为<strong>幻读，一个事务提交的数据，不能被其他事务读取到</strong>。</p><h4 id="串行化"><a href="#串行化" class="headerlink" title="串行化"></a>串行化</h4><p>顾名思义，就是所有事务的<strong>写入操作</strong>全都是串行化的。什么意思？把隔离级别修改成 <strong>SERIALIZABLE</strong> :</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SET</span> <span class="token keyword">GLOBAL</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> @<span class="token variable">@GLOBAL.TRANSACTION_ISOLATION</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span><span class="token operator">|</span> <span class="token keyword">SERIALIZABLE</span>                   <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">--------------------------------+</span></code></pre><p>还是拿小张和小王来举例：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 小张 - 成都</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 小王 - 北京</span><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 开启事务之前先查询表，准备操作数据。</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span><span class="token punctuation">;</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span> id <span class="token operator">|</span> name      <span class="token operator">|</span> money <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">a</span>         <span class="token operator">|</span>   <span class="token number">900</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token number">b</span>         <span class="token operator">|</span>  <span class="token number">1100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">3</span> <span class="token operator">|</span> 小明      <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> 淘宝店    <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> <span class="token number">c</span>         <span class="token operator">|</span>   <span class="token number">100</span> <span class="token operator">|</span><span class="token operator">|</span>  <span class="token number">6</span> <span class="token operator">|</span> <span class="token number">d</span>         <span class="token operator">|</span>  <span class="token number">1000</span> <span class="token operator">|</span><span class="token operator">+</span><span class="token comment" spellcheck="true">----+-----------+-------+</span><span class="token comment" spellcheck="true">-- 发现没有 7 号王小花，于是插入一条数据：</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'王小花'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>此时会发生什么呢？由于现在的隔离级别是 <strong>SERIALIZABLE ( 串行化 )</strong> ，串行化的意思就是：假设把所有的事务都放在一个串行的队列中，那么所有的事务都会按照<strong>固定顺序执行</strong>，执行完一个事务后再继续执行下一个事务的<strong>写入操作</strong> ( <strong>这意味着队列中同时只能执行一个事务的写入操作</strong> ) 。</p><p>根据这个解释，小王在插入数据时，会出现等待状态，直到小张执行 <code>COMMIT</code> 结束它所处的事务，或者出现等待超时。</p><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer（一）：二维数组中的查找</title>
      <link href="/post/43262.html"/>
      <url>/post/43262.html</url>
      
        <content type="html"><![CDATA[<h2 id="二维数组中的查找"><a href="#二维数组中的查找" class="headerlink" title="二维数组中的查找:"></a>二维数组中的查找:</h2><h4 id="题目链接："><a href="#题目链接：" class="headerlink" title="题目链接："></a>题目链接：</h4><p><a href="https://www.nowcoder.com/practice/abc3fe2ce8e146608e868a70efebf62e?tpId=13&amp;tqId=11154&amp;tPage=1&amp;rp=1&amp;ru=/ta/coding-interviews&amp;qru=/ta/coding-interviews/question-ranking" target="_blank" rel="noopener">牛客网</a><br></p><h4 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h4><p>    在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。<br></p><blockquote><p>Consider the following matrix:<br>[<br>  [1,   4,  7, 11, 15],<br>  [2,   5,  8, 12, 19],<br>  [3,   6,  9, 16, 22],<br>  [10, 13, 14, 17, 24],<br>  [18, 21, 23, 26, 30]<br>]</p></blockquote><p>Given target = <code>5</code>, return <code>true</code>。<br>Given target = <code>20</code>, return <code>false</code>。<br></p><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：<br></h4><p>利用该二维数组的性质：</p><p><strong><font size="3">•</font></strong><font size="3"> 每一行都按照从左到右递增的顺序排序，<br><strong><font size="3">•</font></strong><font size="3"> 每一列都按照从上到下递增的顺序排序<br>    该二维数组中的一个数，小于它的数一定在其左边，大于它的数一定在其下边。因此，从右上角开始查找，就可以根据 target 和当前元素的大小关系来缩小查找区间，当前元素的查找区间为左下角的所有元素。<br><br><strong><font size="3">•</font></strong><font size="3"> 当 m &lt; target，由于 m 已经是该行最大的元素，想要更大只有从列考虑，取值右移一位<br><strong><font size="3">•</font></strong><font size="3"> 当 m &gt; target，由于 m 已经是该列最小的元素，想要更小只有从行考虑，取值上移一位<br><strong><font size="3">•</font></strong><font size="3"> 当 m = target，找到该值，返回 true<br>用某行最小或某列最大与 target 比较，每次可剔除一整行或一整列。<br></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><center><img src="http://q7u2muj8t.bkt.clouddn.com/loading3.gif" data-original="https://img-blog.csdnimg.cn/20200322183416116.gif" width="50%"> <br></center><h4 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：<br></h4><p>时间复杂度：<strong><em>O</em>(行高+列宽)</strong><br>空间复杂度：<strong><em>O</em>(1)</strong></p><h4 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：<br></h4><pre class=" language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> target<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> i <span class="token operator">=</span> array<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> value <span class="token operator">=</span> target<span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>                j<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">></span> value<span class="token punctuation">)</span><span class="token punctuation">{</span>                i<span class="token operator">--</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><p><font size="5"><strong>Peace!</strong></font></p><font size="5"></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer汇总</title>
      <link href="/post/35137.html"/>
      <url>/post/35137.html</url>
      
        <content type="html"><![CDATA[<h1 id="渣渣鹏的学习记录"><a href="#渣渣鹏的学习记录" class="headerlink" title="渣渣鹏的学习记录"></a>渣渣鹏的学习记录</h1><h1 id="1、前言"><a href="#1、前言" class="headerlink" title="1、前言"></a>1、前言</h1><p>本系列为渣渣鹏的《剑指Offer》学习笔记。<br>刷题平台：<a href="//www.nowcoder.com/ta/coding-interviews" target="_blank" rel="noopener">牛客网</a><br>使用语言：Java<br>GitHub笔记地址：</p><p>    开始刷题的时间太晚了，草草的结束了第一遍学习，把67道题过了一遍，使用的是java语言进行答题，接下来是Leetcode的学习以及后端学习之路。更新ing~</p><h1 id="2、题目总结"><a href="#2、题目总结" class="headerlink" title="2、题目总结"></a>2、题目总结</h1><p>对总共67道题目进行了分类整理，整理如下：</p><h2 id="数组（13道）："><a href="#数组（13道）：" class="headerlink" title="数组（13道）："></a>数组（13道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> <a href="//zhazhapeng.cn/post/43262.html">剑指Offer（一）：二维数组中的查找</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105034165" target="_blank" rel="noopener">剑指Offer（六）：旋转数组的最小数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105035481" target="_blank" rel="noopener">剑指Offer（十三）：调整数组顺序使奇数位于偶数前面</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105036509" target="_blank" rel="noopener">剑指Offer（十九）：顺时针打印矩阵</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105042117" target="_blank" rel="noopener">剑指Offer（二十八）：数组中出现次数超过一半的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105044559" target="_blank" rel="noopener">剑指Offer（三十）：连续子数组的最大和（dp）</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105047758" target="_blank" rel="noopener">剑指Offer（三十二）：把数组排成最小的数</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105068178" target="_blank" rel="noopener">剑指Offer（三十五）：数组中的逆序对</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105069244" target="_blank" rel="noopener">剑指Offer（三十七）：数字在排序数组中出现的次数</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105069413" target="_blank" rel="noopener">剑指Offer（四十）：数组中只出现一次的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105076670" target="_blank" rel="noopener">剑指Offer（五十）：数组中重复的数字</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105077451" target="_blank" rel="noopener">剑指Offer（五十一）：构建乘积数组</a><br><strong><font size="3">•</font></strong><font size="3"> <a href="https://blog.csdn.net/weixin_43608645/article/details/105079105" target="_blank" rel="noopener">剑指Offer（六十四）：滑动窗口的最大值</a></font></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="字符串（9道）："><a href="#字符串（9道）：" class="headerlink" title="字符串（9道）："></a>字符串（9道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer(二)：替换空格<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十七）：字符串的排列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十四）：第一个只出现一次的字符<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十三）：左旋转字符串<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十四）：翻转单词顺序序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十九）：把字符串转换成整数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十二）：正则表达式匹配<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十三）：表示数值的字符串<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十四）：字符流中第一个不重复的字符</font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="链表（8道）："><a href="#链表（8道）：" class="headerlink" title="链表（8道）："></a>链表（8道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三）：从尾到头打印链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十四）：链表中倒数第k个结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十五）：反转链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十六）：合并两个排序的链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十五）：复杂链表的复制<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十六）：两个链表的第一个公共结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十五）：链表中环的入口结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十六）：删除链表中重复的结点</font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="二叉树（15道）："><a href="#二叉树（15道）：" class="headerlink" title="二叉树（15道）："></a>二叉树（15道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四）：重建二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十七）：树的子结构<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十八）：二叉树的镜像<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十二）：从上往下打印二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十三）：二叉搜索树的后序遍历序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十四）：二叉树中和为某一值的路径<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十六）：二叉搜索树与双向链表<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十八）：二叉树的深度<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十九）：平衡二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十七）：二叉树的下一个结点<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十八）：对称的二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五十九）：按之字顺序打印二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十）：把二叉树打印成多行<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十一）：序列化二叉树<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十二）：二叉搜索树的第k个结点</font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="栈（3道）："><a href="#栈（3道）：" class="headerlink" title="栈（3道）："></a>栈（3道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（五）：用两个栈实现队列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十）：包含min函数的栈<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十一）：栈的压入、弹出序列</font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="回溯法（2道）："><a href="#回溯法（2道）：" class="headerlink" title="回溯法（2道）："></a>回溯法（2道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十五）：矩阵中的路径<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十六）：机器人的运动范围</font></font></p><font size="3"><font size="3"><h2 id="递归、动态规划（5道）："><a href="#递归、动态规划（5道）：" class="headerlink" title="递归、动态规划（5道）："></a>递归、动态规划（5道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（七）：裴波那契数列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（八）：跳台阶<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（九）：变态跳台阶<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十）：矩形覆盖<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十七）：剪绳子</font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><h2 id="位运算（1道）："><a href="#位运算（1道）：" class="headerlink" title="位运算（1道）："></a>位运算（1道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十一）：二进制中1的个数</font></p><font size="3"><h2 id="其他（11道）："><a href="#其他（11道）：" class="headerlink" title="其他（11道）："></a>其他（11道）：</h2><p><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（十二）：数值的整数次方<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（二十九）：最小的K个数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十一）：整数中1出现的次数（从1到n整数中1出现的次数）<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（三十三）：丑数<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十一）：和为S的连续正数序列<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十二）：和为S的两个数字<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十五）：扑克牌顺子<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十六）：孩子们的游戏（圆圈中最后剩下的数）<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十七）：求1+2+3+…+n<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（四十八）：不用加减乘除的加法<br><strong><font size="3">•</font></strong><font size="3"> 剑指Offer（六十三）：数据流中的中位数<br><br><br><font size="5，" color="yellow"><strong>Peace!</strong></font></font></font></font></font></font></font></font></font></font></font></font></p><font size="3"><font size="3"><font size="3"><font size="5，" color="yellow"></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font></font><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 剑指Offer </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
